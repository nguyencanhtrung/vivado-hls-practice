-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity memcpyHW is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    dataStream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    dataStream_V_empty_n : IN STD_LOGIC;
    dataStream_V_read : OUT STD_LOGIC;
    offsetStream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    offsetStream_V_empty_n : IN STD_LOGIC;
    offsetStream_V_read : OUT STD_LOGIC;
    m_req_din : OUT STD_LOGIC;
    m_req_full_n : IN STD_LOGIC;
    m_req_write : OUT STD_LOGIC;
    m_rsp_empty_n : IN STD_LOGIC;
    m_rsp_read : OUT STD_LOGIC;
    m_address : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_datain : IN STD_LOGIC_VECTOR (31 downto 0);
    m_dataout : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    wr : IN STD_LOGIC );
end;


architecture behav of memcpyHW is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "memcpyHW,hls_ip_2015_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=66,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=41,HLS_SYN_LUT=71}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_pp0_stg1_fsm_2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_pp0_stg2_fsm_3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_pp0_stg3_fsm_4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_pp0_stg4_fsm_5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_pp0_stg5_fsm_6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_pp0_stg6_fsm_7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_pp0_stg7_fsm_8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_pp0_stg8_fsm_9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_pp0_stg9_fsm_10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_pp0_stg10_fsm_11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_pp0_stg11_fsm_12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_pp0_stg12_fsm_13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_pp0_stg13_fsm_14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_pp0_stg14_fsm_15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_pp0_stg15_fsm_16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_pp0_stg16_fsm_17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_pp0_stg17_fsm_18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_pp0_stg18_fsm_19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_pp0_stg19_fsm_20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_pp0_stg20_fsm_21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_pp0_stg21_fsm_22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_pp0_stg22_fsm_23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_pp0_stg23_fsm_24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_pp0_stg24_fsm_25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_pp0_stg25_fsm_26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_pp0_stg26_fsm_27 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_pp0_stg27_fsm_28 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_pp0_stg28_fsm_29 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_pp0_stg29_fsm_30 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_pp0_stg30_fsm_31 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_pp0_stg31_fsm_32 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_st35_fsm_33 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal i_reg_99 : STD_LOGIC_VECTOR (1 downto 0);
    signal wr_read_read_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_73 : BOOLEAN;
    signal exitcond8_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond8_reg_137 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_94 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal i_1_fu_116_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_141 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_pp0_stg1_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_111 : BOOLEAN;
    signal ap_sig_bdd_121 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg31_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_134 : BOOLEAN;
    signal ap_sig_bdd_137 : BOOLEAN;
    signal i_phi_fu_103_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_pp0_stg2_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_163 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg3_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_174 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg4_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_185 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg5_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_196 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg6_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_207 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg7_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_218 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg8_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_229 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg9_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_240 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg10_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_251 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg11_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_262 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg12_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_273 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg13_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_284 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg14_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_295 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg15_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_306 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg16_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_317 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg17_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_328 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg18_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_339 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg19_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_350 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg20_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_361 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg21_fsm_22 : STD_LOGIC;
    signal ap_sig_bdd_372 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg22_fsm_23 : STD_LOGIC;
    signal ap_sig_bdd_383 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg23_fsm_24 : STD_LOGIC;
    signal ap_sig_bdd_394 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg24_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_405 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg25_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_416 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg26_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_427 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg27_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_438 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg28_fsm_29 : STD_LOGIC;
    signal ap_sig_bdd_449 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg29_fsm_30 : STD_LOGIC;
    signal ap_sig_bdd_460 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg30_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_471 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond8_fu_110_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((exitcond8_reg_137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and not((exitcond8_reg_137 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_reg_99 assign process. --
    i_reg_99_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond8_reg_137 = ap_const_lv1_0))) then 
                i_reg_99 <= i_1_reg_141;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                i_reg_99 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                exitcond8_reg_137 <= exitcond8_fu_110_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                i_1_reg_141 <= i_1_fu_116_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond8_fu_110_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_94, ap_reg_ppiten_pp0_it1, ap_sig_bdd_121, ap_sig_bdd_137)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond8_fu_110_p2 = ap_const_lv1_0)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond8_fu_110_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_33;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp0_stg1_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_121))) then
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                end if;
            when ap_ST_pp0_stg2_fsm_3 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg2_fsm_3;
                end if;
            when ap_ST_pp0_stg3_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_4;
                end if;
            when ap_ST_pp0_stg4_fsm_5 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg4_fsm_5;
                end if;
            when ap_ST_pp0_stg5_fsm_6 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg5_fsm_6;
                end if;
            when ap_ST_pp0_stg6_fsm_7 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg6_fsm_7;
                end if;
            when ap_ST_pp0_stg7_fsm_8 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg8_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg7_fsm_8;
                end if;
            when ap_ST_pp0_stg8_fsm_9 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg9_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg8_fsm_9;
                end if;
            when ap_ST_pp0_stg9_fsm_10 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg10_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg9_fsm_10;
                end if;
            when ap_ST_pp0_stg10_fsm_11 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg11_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg10_fsm_11;
                end if;
            when ap_ST_pp0_stg11_fsm_12 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg12_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg11_fsm_12;
                end if;
            when ap_ST_pp0_stg12_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg13_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg12_fsm_13;
                end if;
            when ap_ST_pp0_stg13_fsm_14 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg14_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg13_fsm_14;
                end if;
            when ap_ST_pp0_stg14_fsm_15 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg15_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg14_fsm_15;
                end if;
            when ap_ST_pp0_stg15_fsm_16 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg16_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg15_fsm_16;
                end if;
            when ap_ST_pp0_stg16_fsm_17 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg17_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg16_fsm_17;
                end if;
            when ap_ST_pp0_stg17_fsm_18 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg18_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg17_fsm_18;
                end if;
            when ap_ST_pp0_stg18_fsm_19 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg19_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg18_fsm_19;
                end if;
            when ap_ST_pp0_stg19_fsm_20 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg20_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg19_fsm_20;
                end if;
            when ap_ST_pp0_stg20_fsm_21 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg21_fsm_22;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg20_fsm_21;
                end if;
            when ap_ST_pp0_stg21_fsm_22 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg22_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg21_fsm_22;
                end if;
            when ap_ST_pp0_stg22_fsm_23 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg23_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg22_fsm_23;
                end if;
            when ap_ST_pp0_stg23_fsm_24 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg24_fsm_25;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg23_fsm_24;
                end if;
            when ap_ST_pp0_stg24_fsm_25 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg25_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg24_fsm_25;
                end if;
            when ap_ST_pp0_stg25_fsm_26 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg26_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg25_fsm_26;
                end if;
            when ap_ST_pp0_stg26_fsm_27 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg27_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg26_fsm_27;
                end if;
            when ap_ST_pp0_stg27_fsm_28 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg28_fsm_29;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg27_fsm_28;
                end if;
            when ap_ST_pp0_stg28_fsm_29 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg29_fsm_30;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg28_fsm_29;
                end if;
            when ap_ST_pp0_stg29_fsm_30 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg30_fsm_31;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg29_fsm_30;
                end if;
            when ap_ST_pp0_stg30_fsm_31 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg31_fsm_32;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg30_fsm_31;
                end if;
            when ap_ST_pp0_stg31_fsm_32 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg31_fsm_32;
                end if;
            when ap_ST_st35_fsm_33 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_sig_bdd_111 assign process. --
    ap_sig_bdd_111_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_111 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_121 assign process. --
    ap_sig_bdd_121_assign_proc : process(dataStream_V_empty_n, offsetStream_V_empty_n, m_req_full_n, wr_read_read_fu_72_p2, exitcond8_reg_137)
    begin
                ap_sig_bdd_121 <= (((dataStream_V_empty_n = ap_const_logic_0) and (exitcond8_reg_137 = ap_const_lv1_0)) or ((exitcond8_reg_137 = ap_const_lv1_0) and (offsetStream_V_empty_n = ap_const_logic_0)) or ((m_req_full_n = ap_const_logic_0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_134 assign process. --
    ap_sig_bdd_134_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_134 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_137 assign process. --
    ap_sig_bdd_137_assign_proc : process(dataStream_V_empty_n, m_req_full_n, wr_read_read_fu_72_p2, exitcond8_reg_137)
    begin
                ap_sig_bdd_137 <= (((dataStream_V_empty_n = ap_const_logic_0) and (exitcond8_reg_137 = ap_const_lv1_0)) or ((m_req_full_n = ap_const_logic_0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_163 assign process. --
    ap_sig_bdd_163_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_163 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_174 assign process. --
    ap_sig_bdd_174_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_174 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_185 assign process. --
    ap_sig_bdd_185_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_185 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_196 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_207 assign process. --
    ap_sig_bdd_207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_207 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_218 assign process. --
    ap_sig_bdd_218_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_218 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_229 assign process. --
    ap_sig_bdd_229_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_229 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_240 assign process. --
    ap_sig_bdd_240_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_240 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_251 assign process. --
    ap_sig_bdd_251_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_251 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_262 assign process. --
    ap_sig_bdd_262_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_262 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_273 assign process. --
    ap_sig_bdd_273_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_273 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_284 assign process. --
    ap_sig_bdd_284_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_284 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_295 assign process. --
    ap_sig_bdd_295_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_295 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_306 assign process. --
    ap_sig_bdd_306_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_306 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_317 assign process. --
    ap_sig_bdd_317_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_317 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_328 assign process. --
    ap_sig_bdd_328_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_328 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_339 assign process. --
    ap_sig_bdd_339_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_339 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_350 assign process. --
    ap_sig_bdd_350_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_350 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_361 assign process. --
    ap_sig_bdd_361_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_361 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_372 assign process. --
    ap_sig_bdd_372_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_372 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    -- ap_sig_bdd_383 assign process. --
    ap_sig_bdd_383_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_383 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    -- ap_sig_bdd_394 assign process. --
    ap_sig_bdd_394_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_394 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    -- ap_sig_bdd_405 assign process. --
    ap_sig_bdd_405_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_405 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_416 assign process. --
    ap_sig_bdd_416_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_416 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_427 assign process. --
    ap_sig_bdd_427_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_427 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_438 assign process. --
    ap_sig_bdd_438_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_438 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_449 assign process. --
    ap_sig_bdd_449_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_449 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    -- ap_sig_bdd_460 assign process. --
    ap_sig_bdd_460_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_460 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    -- ap_sig_bdd_471 assign process. --
    ap_sig_bdd_471_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_471 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_73 assign process. --
    ap_sig_bdd_73_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_73 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_94 assign process. --
    ap_sig_bdd_94_assign_proc : process(dataStream_V_empty_n, m_req_full_n, wr_read_read_fu_72_p2)
    begin
                ap_sig_bdd_94 <= ((dataStream_V_empty_n = ap_const_logic_0) or ((m_req_full_n = ap_const_logic_0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0))));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg10_fsm_11 assign process. --
    ap_sig_cseq_ST_pp0_stg10_fsm_11_assign_proc : process(ap_sig_bdd_251)
    begin
        if (ap_sig_bdd_251) then 
            ap_sig_cseq_ST_pp0_stg10_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg10_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg11_fsm_12 assign process. --
    ap_sig_cseq_ST_pp0_stg11_fsm_12_assign_proc : process(ap_sig_bdd_262)
    begin
        if (ap_sig_bdd_262) then 
            ap_sig_cseq_ST_pp0_stg11_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg11_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg12_fsm_13 assign process. --
    ap_sig_cseq_ST_pp0_stg12_fsm_13_assign_proc : process(ap_sig_bdd_273)
    begin
        if (ap_sig_bdd_273) then 
            ap_sig_cseq_ST_pp0_stg12_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg12_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg13_fsm_14 assign process. --
    ap_sig_cseq_ST_pp0_stg13_fsm_14_assign_proc : process(ap_sig_bdd_284)
    begin
        if (ap_sig_bdd_284) then 
            ap_sig_cseq_ST_pp0_stg13_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg13_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg14_fsm_15 assign process. --
    ap_sig_cseq_ST_pp0_stg14_fsm_15_assign_proc : process(ap_sig_bdd_295)
    begin
        if (ap_sig_bdd_295) then 
            ap_sig_cseq_ST_pp0_stg14_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg14_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg15_fsm_16 assign process. --
    ap_sig_cseq_ST_pp0_stg15_fsm_16_assign_proc : process(ap_sig_bdd_306)
    begin
        if (ap_sig_bdd_306) then 
            ap_sig_cseq_ST_pp0_stg15_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg15_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg16_fsm_17 assign process. --
    ap_sig_cseq_ST_pp0_stg16_fsm_17_assign_proc : process(ap_sig_bdd_317)
    begin
        if (ap_sig_bdd_317) then 
            ap_sig_cseq_ST_pp0_stg16_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg16_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg17_fsm_18 assign process. --
    ap_sig_cseq_ST_pp0_stg17_fsm_18_assign_proc : process(ap_sig_bdd_328)
    begin
        if (ap_sig_bdd_328) then 
            ap_sig_cseq_ST_pp0_stg17_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg17_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg18_fsm_19 assign process. --
    ap_sig_cseq_ST_pp0_stg18_fsm_19_assign_proc : process(ap_sig_bdd_339)
    begin
        if (ap_sig_bdd_339) then 
            ap_sig_cseq_ST_pp0_stg18_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg18_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg19_fsm_20 assign process. --
    ap_sig_cseq_ST_pp0_stg19_fsm_20_assign_proc : process(ap_sig_bdd_350)
    begin
        if (ap_sig_bdd_350) then 
            ap_sig_cseq_ST_pp0_stg19_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg19_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg1_fsm_2_assign_proc : process(ap_sig_bdd_111)
    begin
        if (ap_sig_bdd_111) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg20_fsm_21 assign process. --
    ap_sig_cseq_ST_pp0_stg20_fsm_21_assign_proc : process(ap_sig_bdd_361)
    begin
        if (ap_sig_bdd_361) then 
            ap_sig_cseq_ST_pp0_stg20_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg20_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg21_fsm_22 assign process. --
    ap_sig_cseq_ST_pp0_stg21_fsm_22_assign_proc : process(ap_sig_bdd_372)
    begin
        if (ap_sig_bdd_372) then 
            ap_sig_cseq_ST_pp0_stg21_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg21_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg22_fsm_23 assign process. --
    ap_sig_cseq_ST_pp0_stg22_fsm_23_assign_proc : process(ap_sig_bdd_383)
    begin
        if (ap_sig_bdd_383) then 
            ap_sig_cseq_ST_pp0_stg22_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg22_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg23_fsm_24 assign process. --
    ap_sig_cseq_ST_pp0_stg23_fsm_24_assign_proc : process(ap_sig_bdd_394)
    begin
        if (ap_sig_bdd_394) then 
            ap_sig_cseq_ST_pp0_stg23_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg23_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg24_fsm_25 assign process. --
    ap_sig_cseq_ST_pp0_stg24_fsm_25_assign_proc : process(ap_sig_bdd_405)
    begin
        if (ap_sig_bdd_405) then 
            ap_sig_cseq_ST_pp0_stg24_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg24_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg25_fsm_26 assign process. --
    ap_sig_cseq_ST_pp0_stg25_fsm_26_assign_proc : process(ap_sig_bdd_416)
    begin
        if (ap_sig_bdd_416) then 
            ap_sig_cseq_ST_pp0_stg25_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg25_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg26_fsm_27 assign process. --
    ap_sig_cseq_ST_pp0_stg26_fsm_27_assign_proc : process(ap_sig_bdd_427)
    begin
        if (ap_sig_bdd_427) then 
            ap_sig_cseq_ST_pp0_stg26_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg26_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg27_fsm_28 assign process. --
    ap_sig_cseq_ST_pp0_stg27_fsm_28_assign_proc : process(ap_sig_bdd_438)
    begin
        if (ap_sig_bdd_438) then 
            ap_sig_cseq_ST_pp0_stg27_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg27_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg28_fsm_29 assign process. --
    ap_sig_cseq_ST_pp0_stg28_fsm_29_assign_proc : process(ap_sig_bdd_449)
    begin
        if (ap_sig_bdd_449) then 
            ap_sig_cseq_ST_pp0_stg28_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg28_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg29_fsm_30 assign process. --
    ap_sig_cseq_ST_pp0_stg29_fsm_30_assign_proc : process(ap_sig_bdd_460)
    begin
        if (ap_sig_bdd_460) then 
            ap_sig_cseq_ST_pp0_stg29_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg29_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg2_fsm_3 assign process. --
    ap_sig_cseq_ST_pp0_stg2_fsm_3_assign_proc : process(ap_sig_bdd_163)
    begin
        if (ap_sig_bdd_163) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg30_fsm_31 assign process. --
    ap_sig_cseq_ST_pp0_stg30_fsm_31_assign_proc : process(ap_sig_bdd_471)
    begin
        if (ap_sig_bdd_471) then 
            ap_sig_cseq_ST_pp0_stg30_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg30_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg31_fsm_32 assign process. --
    ap_sig_cseq_ST_pp0_stg31_fsm_32_assign_proc : process(ap_sig_bdd_134)
    begin
        if (ap_sig_bdd_134) then 
            ap_sig_cseq_ST_pp0_stg31_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg31_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg3_fsm_4 assign process. --
    ap_sig_cseq_ST_pp0_stg3_fsm_4_assign_proc : process(ap_sig_bdd_174)
    begin
        if (ap_sig_bdd_174) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg4_fsm_5 assign process. --
    ap_sig_cseq_ST_pp0_stg4_fsm_5_assign_proc : process(ap_sig_bdd_185)
    begin
        if (ap_sig_bdd_185) then 
            ap_sig_cseq_ST_pp0_stg4_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg4_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg5_fsm_6 assign process. --
    ap_sig_cseq_ST_pp0_stg5_fsm_6_assign_proc : process(ap_sig_bdd_196)
    begin
        if (ap_sig_bdd_196) then 
            ap_sig_cseq_ST_pp0_stg5_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg5_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg6_fsm_7 assign process. --
    ap_sig_cseq_ST_pp0_stg6_fsm_7_assign_proc : process(ap_sig_bdd_207)
    begin
        if (ap_sig_bdd_207) then 
            ap_sig_cseq_ST_pp0_stg6_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg6_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg7_fsm_8 assign process. --
    ap_sig_cseq_ST_pp0_stg7_fsm_8_assign_proc : process(ap_sig_bdd_218)
    begin
        if (ap_sig_bdd_218) then 
            ap_sig_cseq_ST_pp0_stg7_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg7_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg8_fsm_9 assign process. --
    ap_sig_cseq_ST_pp0_stg8_fsm_9_assign_proc : process(ap_sig_bdd_229)
    begin
        if (ap_sig_bdd_229) then 
            ap_sig_cseq_ST_pp0_stg8_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg8_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp0_stg9_fsm_10 assign process. --
    ap_sig_cseq_ST_pp0_stg9_fsm_10_assign_proc : process(ap_sig_bdd_240)
    begin
        if (ap_sig_bdd_240) then 
            ap_sig_cseq_ST_pp0_stg9_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg9_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_73)
    begin
        if (ap_sig_bdd_73) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- dataStream_V_read assign process. --
    dataStream_V_read_assign_proc : process(exitcond8_reg_137, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_bdd_94, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_sig_bdd_121, ap_sig_cseq_ST_pp0_stg31_fsm_32, ap_sig_bdd_137, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_sig_cseq_ST_pp0_stg6_fsm_7, ap_sig_cseq_ST_pp0_stg7_fsm_8, ap_sig_cseq_ST_pp0_stg8_fsm_9, ap_sig_cseq_ST_pp0_stg9_fsm_10, ap_sig_cseq_ST_pp0_stg10_fsm_11, ap_sig_cseq_ST_pp0_stg11_fsm_12, ap_sig_cseq_ST_pp0_stg12_fsm_13, ap_sig_cseq_ST_pp0_stg13_fsm_14, ap_sig_cseq_ST_pp0_stg14_fsm_15, ap_sig_cseq_ST_pp0_stg15_fsm_16, ap_sig_cseq_ST_pp0_stg16_fsm_17, ap_sig_cseq_ST_pp0_stg17_fsm_18, ap_sig_cseq_ST_pp0_stg18_fsm_19, ap_sig_cseq_ST_pp0_stg19_fsm_20, ap_sig_cseq_ST_pp0_stg20_fsm_21, ap_sig_cseq_ST_pp0_stg21_fsm_22, ap_sig_cseq_ST_pp0_stg22_fsm_23, ap_sig_cseq_ST_pp0_stg23_fsm_24, ap_sig_cseq_ST_pp0_stg24_fsm_25, ap_sig_cseq_ST_pp0_stg25_fsm_26, ap_sig_cseq_ST_pp0_stg26_fsm_27, ap_sig_cseq_ST_pp0_stg27_fsm_28, ap_sig_cseq_ST_pp0_stg28_fsm_29, ap_sig_cseq_ST_pp0_stg29_fsm_30, ap_sig_cseq_ST_pp0_stg30_fsm_31)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_121))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_11)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg12_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg13_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg14_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg15_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg16_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg17_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg18_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg19_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg20_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg21_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg22_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg23_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg24_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg25_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg26_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg27_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg28_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg29_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg30_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond8_reg_137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))))) then 
            dataStream_V_read <= ap_const_logic_1;
        else 
            dataStream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond8_fu_110_p2 <= "1" when (i_phi_fu_103_p4 = ap_const_lv2_2) else "0";
    i_1_fu_116_p2 <= std_logic_vector(unsigned(i_phi_fu_103_p4) + unsigned(ap_const_lv2_1));

    -- i_phi_fu_103_p4 assign process. --
    i_phi_fu_103_p4_assign_proc : process(i_reg_99, exitcond8_reg_137, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_1_reg_141)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond8_reg_137 = ap_const_lv1_0))) then 
            i_phi_fu_103_p4 <= i_1_reg_141;
        else 
            i_phi_fu_103_p4 <= i_reg_99;
        end if; 
    end process;

    m_address <= tmp_9_fu_122_p1(32 - 1 downto 0);
    m_dataout <= dataStream_V_dout;

    -- m_req_din assign process. --
    m_req_din_assign_proc : process(wr_read_read_fu_72_p2, exitcond8_reg_137, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_bdd_94, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_sig_bdd_121, ap_sig_cseq_ST_pp0_stg31_fsm_32, ap_sig_bdd_137, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_sig_cseq_ST_pp0_stg6_fsm_7, ap_sig_cseq_ST_pp0_stg7_fsm_8, ap_sig_cseq_ST_pp0_stg8_fsm_9, ap_sig_cseq_ST_pp0_stg9_fsm_10, ap_sig_cseq_ST_pp0_stg10_fsm_11, ap_sig_cseq_ST_pp0_stg11_fsm_12, ap_sig_cseq_ST_pp0_stg12_fsm_13, ap_sig_cseq_ST_pp0_stg13_fsm_14, ap_sig_cseq_ST_pp0_stg14_fsm_15, ap_sig_cseq_ST_pp0_stg15_fsm_16, ap_sig_cseq_ST_pp0_stg16_fsm_17, ap_sig_cseq_ST_pp0_stg17_fsm_18, ap_sig_cseq_ST_pp0_stg18_fsm_19, ap_sig_cseq_ST_pp0_stg19_fsm_20, ap_sig_cseq_ST_pp0_stg20_fsm_21, ap_sig_cseq_ST_pp0_stg21_fsm_22, ap_sig_cseq_ST_pp0_stg22_fsm_23, ap_sig_cseq_ST_pp0_stg23_fsm_24, ap_sig_cseq_ST_pp0_stg24_fsm_25, ap_sig_cseq_ST_pp0_stg25_fsm_26, ap_sig_cseq_ST_pp0_stg26_fsm_27, ap_sig_cseq_ST_pp0_stg27_fsm_28, ap_sig_cseq_ST_pp0_stg28_fsm_29, ap_sig_cseq_ST_pp0_stg29_fsm_30, ap_sig_cseq_ST_pp0_stg30_fsm_31)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_121))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_11)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg12_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg13_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg14_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg15_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg16_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg17_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg18_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg19_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg20_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg21_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg22_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg23_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg24_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg25_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg26_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg27_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg28_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg29_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg30_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            m_req_din <= ap_const_logic_1;
        else 
            m_req_din <= ap_const_logic_0;
        end if; 
    end process;


    -- m_req_write assign process. --
    m_req_write_assign_proc : process(wr_read_read_fu_72_p2, exitcond8_reg_137, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_bdd_94, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_sig_bdd_121, ap_sig_cseq_ST_pp0_stg31_fsm_32, ap_sig_bdd_137, ap_sig_cseq_ST_pp0_stg2_fsm_3, ap_sig_cseq_ST_pp0_stg3_fsm_4, ap_sig_cseq_ST_pp0_stg4_fsm_5, ap_sig_cseq_ST_pp0_stg5_fsm_6, ap_sig_cseq_ST_pp0_stg6_fsm_7, ap_sig_cseq_ST_pp0_stg7_fsm_8, ap_sig_cseq_ST_pp0_stg8_fsm_9, ap_sig_cseq_ST_pp0_stg9_fsm_10, ap_sig_cseq_ST_pp0_stg10_fsm_11, ap_sig_cseq_ST_pp0_stg11_fsm_12, ap_sig_cseq_ST_pp0_stg12_fsm_13, ap_sig_cseq_ST_pp0_stg13_fsm_14, ap_sig_cseq_ST_pp0_stg14_fsm_15, ap_sig_cseq_ST_pp0_stg15_fsm_16, ap_sig_cseq_ST_pp0_stg16_fsm_17, ap_sig_cseq_ST_pp0_stg17_fsm_18, ap_sig_cseq_ST_pp0_stg18_fsm_19, ap_sig_cseq_ST_pp0_stg19_fsm_20, ap_sig_cseq_ST_pp0_stg20_fsm_21, ap_sig_cseq_ST_pp0_stg21_fsm_22, ap_sig_cseq_ST_pp0_stg22_fsm_23, ap_sig_cseq_ST_pp0_stg23_fsm_24, ap_sig_cseq_ST_pp0_stg24_fsm_25, ap_sig_cseq_ST_pp0_stg25_fsm_26, ap_sig_cseq_ST_pp0_stg26_fsm_27, ap_sig_cseq_ST_pp0_stg27_fsm_28, ap_sig_cseq_ST_pp0_stg28_fsm_29, ap_sig_cseq_ST_pp0_stg29_fsm_30, ap_sig_cseq_ST_pp0_stg30_fsm_31)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_121))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg5_fsm_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg6_fsm_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg7_fsm_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg8_fsm_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg9_fsm_10)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg10_fsm_11)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg11_fsm_12)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg12_fsm_13)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg13_fsm_14)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg14_fsm_15)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg15_fsm_16)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg16_fsm_17)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg17_fsm_18)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg18_fsm_19)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg19_fsm_20)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg20_fsm_21)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg21_fsm_22)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg22_fsm_23)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg23_fsm_24)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg24_fsm_25)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg25_fsm_26)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg26_fsm_27)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg27_fsm_28)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg28_fsm_29)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg29_fsm_30)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg30_fsm_31)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (exitcond8_reg_137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg31_fsm_32) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_137))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((wr_read_read_fu_72_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_94 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            m_req_write <= ap_const_logic_1;
        else 
            m_req_write <= ap_const_logic_0;
        end if; 
    end process;

    m_rsp_read <= ap_const_logic_0;
    m_size <= ap_const_lv32_20;

    -- offsetStream_V_read assign process. --
    offsetStream_V_read_assign_proc : process(exitcond8_reg_137, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_sig_bdd_121)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (exitcond8_reg_137 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_121)))) then 
            offsetStream_V_read <= ap_const_logic_1;
        else 
            offsetStream_V_read <= ap_const_logic_0;
        end if; 
    end process;

        tmp_9_fu_122_p1 <= std_logic_vector(resize(signed(offsetStream_V_dout),64));

    wr_read_read_fu_72_p2 <= (0=>wr, others=>'-');
end behav;

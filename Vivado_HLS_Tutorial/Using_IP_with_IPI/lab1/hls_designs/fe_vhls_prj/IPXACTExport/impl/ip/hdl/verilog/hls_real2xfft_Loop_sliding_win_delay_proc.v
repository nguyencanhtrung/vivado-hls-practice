// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_real2xfft_Loop_sliding_win_delay_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        din_V_V_TVALID,
        nodelay_i_0_din,
        nodelay_i_0_full_n,
        nodelay_i_0_write,
        nodelay_i_1_din,
        nodelay_i_1_full_n,
        nodelay_i_1_write,
        delayed_i_0_din,
        delayed_i_0_full_n,
        delayed_i_0_write,
        delayed_i_1_din,
        delayed_i_1_full_n,
        delayed_i_1_write,
        din_V_V_TDATA,
        din_V_V_TREADY
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   din_V_V_TVALID;
output  [15:0] nodelay_i_0_din;
input   nodelay_i_0_full_n;
output   nodelay_i_0_write;
output  [15:0] nodelay_i_1_din;
input   nodelay_i_1_full_n;
output   nodelay_i_1_write;
output  [15:0] delayed_i_0_din;
input   delayed_i_0_full_n;
output   delayed_i_0_write;
output  [15:0] delayed_i_1_din;
input   delayed_i_1_full_n;
output   delayed_i_1_write;
input  [15:0] din_V_V_TDATA;
output   din_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg nodelay_i_0_write;
reg nodelay_i_1_write;
reg delayed_i_0_write;
reg delayed_i_1_write;
reg din_V_V_TREADY;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_21;
wire   [0:0] exitcond51_i_i_fu_144_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_37;
wire    ap_reg_ppiten_pp0_it0;
reg   [0:0] tmp_5_reg_170;
reg    ap_sig_bdd_75;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [8:0] delay_line_Array_V_address0;
reg    delay_line_Array_V_ce0;
reg    delay_line_Array_V_we0;
wire   [15:0] delay_line_Array_V_d0;
wire   [15:0] delay_line_Array_V_q0;
reg   [8:0] i_0_i_i3_reg_120;
reg   [15:0] din_val_V_reg_163;
wire   [0:0] tmp_5_fu_134_p1;
wire   [8:0] i_fu_138_p2;
reg   [8:0] i_reg_174;
reg   [0:0] exitcond51_i_i_reg_179;
reg    ap_sig_bdd_107;
reg   [8:0] i_0_i_i3_phi_fu_124_p6;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_bdd_113;


hls_real2xfft_Loop_sliding_win_delay_proc_delay_line_Array_V #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
delay_line_Array_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( delay_line_Array_V_address0 ),
    .ce0( delay_line_Array_V_ce0 ),
    .we0( delay_line_Array_V_we0 ),
    .d0( delay_line_Array_V_d0 ),
    .q0( delay_line_Array_V_q0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)) & ~(ap_const_lv1_0 == exitcond51_i_i_reg_179))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107)) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)) & (ap_const_lv1_0 == exitcond51_i_i_reg_179))) begin
        i_0_i_i3_reg_120 <= i_reg_174;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)) & ~(ap_const_lv1_0 == exitcond51_i_i_reg_179)))) begin
        i_0_i_i3_reg_120 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        din_val_V_reg_163 <= din_V_V_TDATA;
        exitcond51_i_i_reg_179 <= exitcond51_i_i_fu_144_p2;
        tmp_5_reg_170 <= tmp_5_fu_134_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        i_reg_174 <= i_fu_138_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1 or exitcond51_i_i_reg_179) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)) & ~(ap_const_lv1_0 == exitcond51_i_i_reg_179)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_done_reg or exitcond51_i_i_fu_144_p2 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if ((~(exitcond51_i_i_fu_144_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_37) begin
    if (ap_sig_bdd_37) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_21) begin
    if (ap_sig_bdd_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_pprstidle_pp0 assign process. ///
always @ (ap_start or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

/// delay_line_Array_V_ce0 assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        delay_line_Array_V_ce0 = ap_const_lv1_1;
    end else begin
        delay_line_Array_V_ce0 = ap_const_logic_0;
    end
end

/// delay_line_Array_V_we0 assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        delay_line_Array_V_we0 = ap_const_lv1_1;
    end else begin
        delay_line_Array_V_we0 = ap_const_logic_0;
    end
end

/// delayed_i_0_write assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or tmp_5_reg_170 or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == tmp_5_reg_170) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        delayed_i_0_write = ap_const_logic_1;
    end else begin
        delayed_i_0_write = ap_const_logic_0;
    end
end

/// delayed_i_1_write assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or tmp_5_reg_170 or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == tmp_5_reg_170) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        delayed_i_1_write = ap_const_logic_1;
    end else begin
        delayed_i_1_write = ap_const_logic_0;
    end
end

/// din_V_V_TREADY assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        din_V_V_TREADY = ap_const_logic_1;
    end else begin
        din_V_V_TREADY = ap_const_logic_0;
    end
end

/// i_0_i_i3_phi_fu_124_p6 assign process. ///
always @ (i_0_i_i3_reg_120 or i_reg_174 or exitcond51_i_i_reg_179 or ap_sig_bdd_113) begin
    if (ap_sig_bdd_113) begin
        if (~(ap_const_lv1_0 == exitcond51_i_i_reg_179)) begin
            i_0_i_i3_phi_fu_124_p6 = ap_const_lv9_0;
        end else if ((ap_const_lv1_0 == exitcond51_i_i_reg_179)) begin
            i_0_i_i3_phi_fu_124_p6 = i_reg_174;
        end else begin
            i_0_i_i3_phi_fu_124_p6 = i_0_i_i3_reg_120;
        end
    end else begin
        i_0_i_i3_phi_fu_124_p6 = i_0_i_i3_reg_120;
    end
end

/// nodelay_i_0_write assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or tmp_5_reg_170 or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == tmp_5_reg_170) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        nodelay_i_0_write = ap_const_logic_1;
    end else begin
        nodelay_i_0_write = ap_const_logic_0;
    end
end

/// nodelay_i_1_write assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or tmp_5_reg_170 or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == tmp_5_reg_170) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)))) begin
        nodelay_i_1_write = ap_const_logic_1;
    end else begin
        nodelay_i_1_write = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_done_reg or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or din_V_V_TVALID or ap_sig_bdd_75 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_107 or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_107) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~(ap_const_logic_1 == ap_sig_pprstidle_pp0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((~(((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (din_V_V_TVALID == ap_const_logic_0)) | (ap_sig_bdd_75 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (ap_done_reg == ap_const_logic_1)) & (ap_const_logic_1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_ppiten_pp0_it0 = ap_start;

/// ap_sig_bdd_107 assign process. ///
always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_107 = ((ap_done_reg == ap_const_logic_1) | (ap_start == ap_const_logic_0));
end

/// ap_sig_bdd_113 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1) begin
    ap_sig_bdd_113 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1));
end

/// ap_sig_bdd_21 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_21 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_37 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_37 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_75 assign process. ///
always @ (nodelay_i_0_full_n or tmp_5_reg_170 or nodelay_i_1_full_n or delayed_i_0_full_n or delayed_i_1_full_n) begin
    ap_sig_bdd_75 = (((nodelay_i_0_full_n == ap_const_logic_0) & (ap_const_lv1_0 == tmp_5_reg_170)) | ((nodelay_i_1_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_5_reg_170)) | ((ap_const_lv1_0 == tmp_5_reg_170) & (delayed_i_0_full_n == ap_const_logic_0)) | (~(ap_const_lv1_0 == tmp_5_reg_170) & (delayed_i_1_full_n == ap_const_logic_0)));
end
assign delay_line_Array_V_address0 = ap_const_lv9_1FF;
assign delay_line_Array_V_d0 = din_val_V_reg_163;
assign delayed_i_0_din = delay_line_Array_V_q0;
assign delayed_i_1_din = delay_line_Array_V_q0;
assign exitcond51_i_i_fu_144_p2 = (i_0_i_i3_phi_fu_124_p6 == ap_const_lv9_1FF? 1'b1: 1'b0);
assign i_fu_138_p2 = (ap_const_lv9_1 + i_0_i_i3_phi_fu_124_p6);
assign nodelay_i_0_din = din_val_V_reg_163;
assign nodelay_i_1_din = din_val_V_reg_163;
assign tmp_5_fu_134_p1 = i_0_i_i3_phi_fu_124_p6[0:0];


endmodule //hls_real2xfft_Loop_sliding_win_delay_proc


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "hls_real2xfft_Loop_sliding_win_delay_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> hls_real2xfft_Loop_sliding_win_delay_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<2> hls_real2xfft_Loop_sliding_win_delay_proc::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<32> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv1_1 = "1";
const sc_lv<1> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv1_0 = "0";
const sc_lv<32> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv32_1 = "1";
const sc_lv<9> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv9_0 = "000000000";
const sc_lv<9> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv9_1FF = "111111111";
const sc_lv<9> hls_real2xfft_Loop_sliding_win_delay_proc::ap_const_lv9_1 = "1";

hls_real2xfft_Loop_sliding_win_delay_proc::hls_real2xfft_Loop_sliding_win_delay_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    delay_line_Array_V_U = new hls_real2xfft_Loop_sliding_win_delay_proc_delay_line_Array_V("delay_line_Array_V_U");
    delay_line_Array_V_U->clk(ap_clk);
    delay_line_Array_V_U->reset(ap_rst);
    delay_line_Array_V_U->address0(delay_line_Array_V_address0);
    delay_line_Array_V_U->ce0(delay_line_Array_V_ce0);
    delay_line_Array_V_U->we0(delay_line_Array_V_we0);
    delay_line_Array_V_U->d0(delay_line_Array_V_d0);
    delay_line_Array_V_U->q0(delay_line_Array_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond51_i_i_reg_179 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond51_i_i_fu_144_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_113);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_75);
    sensitive << ( nodelay_i_0_full_n );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( nodelay_i_1_full_n );
    sensitive << ( delayed_i_0_full_n );
    sensitive << ( delayed_i_1_full_n );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_37 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_delay_line_Array_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_delay_line_Array_V_ce0);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_delay_line_Array_V_d0);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( din_val_V_reg_163 );

    SC_METHOD(thread_delay_line_Array_V_we0);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_delayed_i_0_din);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( delay_line_Array_V_q0 );

    SC_METHOD(thread_delayed_i_0_write);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_delayed_i_1_din);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( delay_line_Array_V_q0 );

    SC_METHOD(thread_delayed_i_1_write);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_din_V_V_TREADY);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_exitcond51_i_i_fu_144_p2);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_0_i_i3_phi_fu_124_p6 );

    SC_METHOD(thread_i_0_i_i3_phi_fu_124_p6);
    sensitive << ( i_0_i_i3_reg_120 );
    sensitive << ( i_reg_174 );
    sensitive << ( exitcond51_i_i_reg_179 );
    sensitive << ( ap_sig_bdd_113 );

    SC_METHOD(thread_i_fu_138_p2);
    sensitive << ( i_0_i_i3_phi_fu_124_p6 );

    SC_METHOD(thread_nodelay_i_0_din);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( din_val_V_reg_163 );

    SC_METHOD(thread_nodelay_i_0_write);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_nodelay_i_1_din);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( din_val_V_reg_163 );

    SC_METHOD(thread_nodelay_i_1_write);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( tmp_5_reg_170 );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_tmp_5_fu_134_p1);
    sensitive << ( i_0_i_i3_phi_fu_124_p6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( din_V_V_TVALID );
    sensitive << ( ap_sig_bdd_75 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( ap_sig_pprstidle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "01";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_real2xfft_Loop_sliding_win_delay_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din_V_V_TVALID, "(port)din_V_V_TVALID");
    sc_trace(mVcdFile, nodelay_i_0_din, "(port)nodelay_i_0_din");
    sc_trace(mVcdFile, nodelay_i_0_full_n, "(port)nodelay_i_0_full_n");
    sc_trace(mVcdFile, nodelay_i_0_write, "(port)nodelay_i_0_write");
    sc_trace(mVcdFile, nodelay_i_1_din, "(port)nodelay_i_1_din");
    sc_trace(mVcdFile, nodelay_i_1_full_n, "(port)nodelay_i_1_full_n");
    sc_trace(mVcdFile, nodelay_i_1_write, "(port)nodelay_i_1_write");
    sc_trace(mVcdFile, delayed_i_0_din, "(port)delayed_i_0_din");
    sc_trace(mVcdFile, delayed_i_0_full_n, "(port)delayed_i_0_full_n");
    sc_trace(mVcdFile, delayed_i_0_write, "(port)delayed_i_0_write");
    sc_trace(mVcdFile, delayed_i_1_din, "(port)delayed_i_1_din");
    sc_trace(mVcdFile, delayed_i_1_full_n, "(port)delayed_i_1_full_n");
    sc_trace(mVcdFile, delayed_i_1_write, "(port)delayed_i_1_write");
    sc_trace(mVcdFile, din_V_V_TDATA, "(port)din_V_V_TDATA");
    sc_trace(mVcdFile, din_V_V_TREADY, "(port)din_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, exitcond51_i_i_fu_144_p2, "exitcond51_i_i_fu_144_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_37, "ap_sig_bdd_37");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, tmp_5_reg_170, "tmp_5_reg_170");
    sc_trace(mVcdFile, ap_sig_bdd_75, "ap_sig_bdd_75");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, delay_line_Array_V_address0, "delay_line_Array_V_address0");
    sc_trace(mVcdFile, delay_line_Array_V_ce0, "delay_line_Array_V_ce0");
    sc_trace(mVcdFile, delay_line_Array_V_we0, "delay_line_Array_V_we0");
    sc_trace(mVcdFile, delay_line_Array_V_d0, "delay_line_Array_V_d0");
    sc_trace(mVcdFile, delay_line_Array_V_q0, "delay_line_Array_V_q0");
    sc_trace(mVcdFile, i_0_i_i3_reg_120, "i_0_i_i3_reg_120");
    sc_trace(mVcdFile, din_val_V_reg_163, "din_val_V_reg_163");
    sc_trace(mVcdFile, tmp_5_fu_134_p1, "tmp_5_fu_134_p1");
    sc_trace(mVcdFile, i_fu_138_p2, "i_fu_138_p2");
    sc_trace(mVcdFile, i_reg_174, "i_reg_174");
    sc_trace(mVcdFile, exitcond51_i_i_reg_179, "exitcond51_i_i_reg_179");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, i_0_i_i3_phi_fu_124_p6, "i_0_i_i3_phi_fu_124_p6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
    sc_trace(mVcdFile, ap_sig_bdd_113, "ap_sig_bdd_113");
#endif

    }
}

hls_real2xfft_Loop_sliding_win_delay_proc::~hls_real2xfft_Loop_sliding_win_delay_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete delay_line_Array_V_U;
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                    !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_reg_ppiten_pp0_it1 = ap_reg_ppiten_pp0_it0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !ap_sig_bdd_107.read())) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read()))) {
        i_0_i_i3_reg_120 = i_reg_174.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                 !ap_sig_bdd_107.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                 !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read())))) {
        i_0_i_i3_reg_120 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        din_val_V_reg_163 = din_V_V_TDATA.read();
        exitcond51_i_i_reg_179 = exitcond51_i_i_fu_144_p2.read();
        tmp_5_reg_170 = tmp_5_fu_134_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_174 = i_fu_138_p2.read();
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_ready() {
    if ((!esl_seteq<1,1,1>(exitcond51_i_i_fu_144_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_reg_ppiten_pp0_it0() {
    ap_reg_ppiten_pp0_it0 = ap_start.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0));
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_bdd_113() {
    ap_sig_bdd_113 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()));
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_bdd_37() {
    ap_sig_bdd_37 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_bdd_75() {
    ap_sig_bdd_75 = ((esl_seteq<1,1,1>(nodelay_i_0_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read())) || (esl_seteq<1,1,1>(nodelay_i_1_full_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
  esl_seteq<1,1,1>(delayed_i_0_full_n.read(), ap_const_logic_0)) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
  esl_seteq<1,1,1>(delayed_i_1_full_n.read(), ap_const_logic_0)));
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_37.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delay_line_Array_V_address0() {
    delay_line_Array_V_address0 = ap_const_lv9_1FF;
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delay_line_Array_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        delay_line_Array_V_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        delay_line_Array_V_ce0 = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delay_line_Array_V_d0() {
    delay_line_Array_V_d0 = din_val_V_reg_163.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delay_line_Array_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        delay_line_Array_V_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        delay_line_Array_V_we0 = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delayed_i_0_din() {
    delayed_i_0_din = delay_line_Array_V_q0.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delayed_i_0_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        delayed_i_0_write = ap_const_logic_1;
    } else {
        delayed_i_0_write = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delayed_i_1_din() {
    delayed_i_1_din = delay_line_Array_V_q0.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_delayed_i_1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        delayed_i_1_write = ap_const_logic_1;
    } else {
        delayed_i_1_write = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_din_V_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        din_V_V_TREADY = ap_const_logic_1;
    } else {
        din_V_V_TREADY = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_exitcond51_i_i_fu_144_p2() {
    exitcond51_i_i_fu_144_p2 = (!i_0_i_i3_phi_fu_124_p6.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i3_phi_fu_124_p6.read() == ap_const_lv9_1FF);
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_i_0_i_i3_phi_fu_124_p6() {
    if (ap_sig_bdd_113.read()) {
        if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read())) {
            i_0_i_i3_phi_fu_124_p6 = ap_const_lv9_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond51_i_i_reg_179.read())) {
            i_0_i_i3_phi_fu_124_p6 = i_reg_174.read();
        } else {
            i_0_i_i3_phi_fu_124_p6 = i_0_i_i3_reg_120.read();
        }
    } else {
        i_0_i_i3_phi_fu_124_p6 = i_0_i_i3_reg_120.read();
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_i_fu_138_p2() {
    i_fu_138_p2 = (!ap_const_lv9_1.is_01() || !i_0_i_i3_phi_fu_124_p6.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(i_0_i_i3_phi_fu_124_p6.read()));
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_nodelay_i_0_din() {
    nodelay_i_0_din = din_val_V_reg_163.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_nodelay_i_0_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        nodelay_i_0_write = ap_const_logic_1;
    } else {
        nodelay_i_0_write = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_nodelay_i_1_din() {
    nodelay_i_1_din = din_val_V_reg_163.read();
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_nodelay_i_1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_170.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        nodelay_i_1_write = ap_const_logic_1;
    } else {
        nodelay_i_1_write = ap_const_logic_0;
    }
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_tmp_5_fu_134_p1() {
    tmp_5_fu_134_p1 = i_0_i_i3_phi_fu_124_p6.read().range(1-1, 0);
}

void hls_real2xfft_Loop_sliding_win_delay_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_107.read()) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_pprstidle_pp0.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  esl_seteq<1,1,1>(din_V_V_TVALID.read(), ap_const_logic_0)) || (ap_sig_bdd_75.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_pprstidle_pp0.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}


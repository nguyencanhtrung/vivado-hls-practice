// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _hls_real2xfft_Loop_real2xfft_output_proc_HH_
#define _hls_real2xfft_Loop_real2xfft_output_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct hls_real2xfft_Loop_real2xfft_output_proc : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > windowed_0_dout;
    sc_in< sc_logic > windowed_0_empty_n;
    sc_out< sc_logic > windowed_0_read;
    sc_in< sc_lv<16> > windowed_1_dout;
    sc_in< sc_logic > windowed_1_empty_n;
    sc_out< sc_logic > windowed_1_read;
    sc_out< sc_lv<32> > dout_TDATA;
    sc_out< sc_logic > dout_TVALID;
    sc_in< sc_logic > dout_TREADY;
    sc_out< sc_lv<1> > dout_TLAST;


    // Module declarations
    hls_real2xfft_Loop_real2xfft_output_proc(sc_module_name name);
    SC_HAS_PROCESS(hls_real2xfft_Loop_real2xfft_output_proc);

    ~hls_real2xfft_Loop_real2xfft_output_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<10> > tmp_fu_128_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_47;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< sc_logic > ap_sig_ioackin_dout_TREADY;
    sc_signal< sc_lv<10> > i1_reg_88;
    sc_signal< bool > ap_sig_bdd_66;
    sc_signal< sc_lv<1> > tmp_6_fu_132_p3;
    sc_signal< sc_logic > ap_reg_ioackin_dout_TREADY;
    sc_signal< sc_lv<11> > i21_cast_fu_102_p1;
    sc_signal< sc_lv<11> > i_fu_122_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_3FE;
    static const sc_lv<11> ap_const_lv11_2;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_47();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_bdd_66();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_ioackin_dout_TREADY();
    void thread_dout_TDATA();
    void thread_dout_TLAST();
    void thread_dout_TVALID();
    void thread_i21_cast_fu_102_p1();
    void thread_i_fu_122_p2();
    void thread_tmp_6_fu_132_p3();
    void thread_tmp_fu_128_p1();
    void thread_windowed_0_read();
    void thread_windowed_1_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

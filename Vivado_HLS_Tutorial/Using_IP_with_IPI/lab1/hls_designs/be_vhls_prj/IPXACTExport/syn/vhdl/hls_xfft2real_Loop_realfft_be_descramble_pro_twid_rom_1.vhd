-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1_rom is 
    generic(
             dwidth     : integer := 16; 
             awidth     : integer := 9; 
             mem_size    : integer := 512
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000000000000", 1 => "1111111100110110", 2 => "1111111001101101", 
    3 => "1111110110100100", 4 => "1111110011011011", 5 => "1111110000010010", 
    6 => "1111101101001001", 7 => "1111101010000000", 8 => "1111100110111000", 
    9 => "1111100011101111", 10 => "1111100000100110", 11 => "1111011101011101", 
    12 => "1111011010010101", 13 => "1111010111001100", 14 => "1111010100000100", 
    15 => "1111010000111100", 16 => "1111001101110100", 17 => "1111001010101100", 
    18 => "1111000111100100", 19 => "1111000100011100", 20 => "1111000001010100", 
    21 => "1110111110001101", 22 => "1110111011000110", 23 => "1110110111111110", 
    24 => "1110110100110111", 25 => "1110110001110001", 26 => "1110101110101010", 
    27 => "1110101011100100", 28 => "1110101000011101", 29 => "1110100101010111", 
    30 => "1110100010010010", 31 => "1110011111001100", 32 => "1110011100000111", 
    33 => "1110011001000010", 34 => "1110010101111101", 35 => "1110010010111000", 
    36 => "1110001111110100", 37 => "1110001100110000", 38 => "1110001001101100", 
    39 => "1110000110101001", 40 => "1110000011100110", 41 => "1110000000100011", 
    42 => "1101111101100000", 43 => "1101111010011110", 44 => "1101110111011100", 
    45 => "1101110100011010", 46 => "1101110001011001", 47 => "1101101110011000", 
    48 => "1101101011010111", 49 => "1101101000010111", 50 => "1101100101010111", 
    51 => "1101100010011000", 52 => "1101011111011001", 53 => "1101011100011010", 
    54 => "1101011001011100", 55 => "1101010110011110", 56 => "1101010011100000", 
    57 => "1101010000100011", 58 => "1101001101100111", 59 => "1101001010101010", 
    60 => "1101000111101110", 61 => "1101000100110011", 62 => "1101000001111000", 
    63 => "1100111110111110", 64 => "1100111100000100", 65 => "1100111001001010", 
    66 => "1100110110010001", 67 => "1100110011011001", 68 => "1100110000100001", 
    69 => "1100101101101001", 70 => "1100101010110010", 71 => "1100100111111011", 
    72 => "1100100101000101", 73 => "1100100010010000", 74 => "1100011111011011", 
    75 => "1100011100100111", 76 => "1100011001110011", 77 => "1100010110111111", 
    78 => "1100010100001101", 79 => "1100010001011010", 80 => "1100001110101001", 
    81 => "1100001011111000", 82 => "1100001001000111", 83 => "1100000110010111", 
    84 => "1100000011101000", 85 => "1100000000111010", 86 => "1011111110001100", 
    87 => "1011111011011110", 88 => "1011111000110001", 89 => "1011110110000101", 
    90 => "1011110011011010", 91 => "1011110000101111", 92 => "1011101110000101", 
    93 => "1011101011011011", 94 => "1011101000110010", 95 => "1011100110001010", 
    96 => "1011100011100011", 97 => "1011100000111100", 98 => "1011011110010110", 
    99 => "1011011011110000", 100 => "1011011001001011", 101 => "1011010110100111", 
    102 => "1011010100000100", 103 => "1011010001100001", 104 => "1011001111000000", 
    105 => "1011001100011110", 106 => "1011001001111110", 107 => "1011000111011110", 
    108 => "1011000101000000", 109 => "1011000010100001", 110 => "1011000000000100", 
    111 => "1010111101101000", 112 => "1010111011001100", 113 => "1010111000110001", 
    114 => "1010110110010110", 115 => "1010110011111101", 116 => "1010110001100100", 
    117 => "1010101111001100", 118 => "1010101100110101", 119 => "1010101010011111", 
    120 => "1010101000001010", 121 => "1010100101110101", 122 => "1010100011100010", 
    123 => "1010100001001111", 124 => "1010011110111101", 125 => "1010011100101011", 
    126 => "1010011010011011", 127 => "1010011000001100", 128 => "1010010101111101", 
    129 => "1010010011101111", 130 => "1010010001100010", 131 => "1010001111010110", 
    132 => "1010001101001011", 133 => "1010001011000001", 134 => "1010001000111000", 
    135 => "1010000110101111", 136 => "1010000100101000", 137 => "1010000010100001", 
    138 => "1010000000011100", 139 => "1001111110010111", 140 => "1001111100010011", 
    141 => "1001111010010000", 142 => "1001111000001110", 143 => "1001110110001110", 
    144 => "1001110100001101", 145 => "1001110010001110", 146 => "1001110000010000", 
    147 => "1001101110010011", 148 => "1001101100010111", 149 => "1001101010011100", 
    150 => "1001101000100010", 151 => "1001100110101000", 152 => "1001100100110000", 
    153 => "1001100010111001", 154 => "1001100001000010", 155 => "1001011111001101", 
    156 => "1001011101011001", 157 => "1001011011100110", 158 => "1001011001110011", 
    159 => "1001011000000010", 160 => "1001010110010010", 161 => "1001010100100011", 
    162 => "1001010010110101", 163 => "1001010001000111", 164 => "1001001111011011", 
    165 => "1001001101110000", 166 => "1001001100000110", 167 => "1001001010011101", 
    168 => "1001001000110101", 169 => "1001000111001111", 170 => "1001000101101001", 
    171 => "1001000100000100", 172 => "1001000010100000", 173 => "1001000000111110", 
    174 => "1000111111011100", 175 => "1000111101111100", 176 => "1000111100011101", 
    177 => "1000111010111110", 178 => "1000111001100001", 179 => "1000111000000101", 
    180 => "1000110110101010", 181 => "1000110101010000", 182 => "1000110011111000", 
    183 => "1000110010100000", 184 => "1000110001001010", 185 => "1000101111110100", 
    186 => "1000101110100000", 187 => "1000101101001101", 188 => "1000101011111011", 
    189 => "1000101010101010", 190 => "1000101001011010", 191 => "1000101000001011", 
    192 => "1000100110111110", 193 => "1000100101110001", 194 => "1000100100100110", 
    195 => "1000100011011100", 196 => "1000100010010011", 197 => "1000100001001011", 
    198 => "1000100000000101", 199 => "1000011110111111", 200 => "1000011101111011", 
    201 => "1000011100111000", 202 => "1000011011110110", 203 => "1000011010110101", 
    204 => "1000011001110101", 205 => "1000011000110111", 206 => "1000010111111010", 
    207 => "1000010110111101", 208 => "1000010110000010", 209 => "1000010101001001", 
    210 => "1000010100010000", 211 => "1000010011011001", 212 => "1000010010100010", 
    213 => "1000010001101101", 214 => "1000010000111010", 215 => "1000010000000111", 
    216 => "1000001111010110", 217 => "1000001110100101", 218 => "1000001101110110", 
    219 => "1000001101001000", 220 => "1000001100011100", 221 => "1000001011110000", 
    222 => "1000001011000110", 223 => "1000001010011101", 224 => "1000001001110101", 
    225 => "1000001001001111", 226 => "1000001000101001", 227 => "1000001000000101", 
    228 => "1000000111100010", 229 => "1000000111000000", 230 => "1000000110100000", 
    231 => "1000000110000000", 232 => "1000000101100010", 233 => "1000000101000101", 
    234 => "1000000100101010", 235 => "1000000100001111", 236 => "1000000011110110", 
    237 => "1000000011011110", 238 => "1000000011000111", 239 => "1000000010110010", 
    240 => "1000000010011101", 241 => "1000000010001010", 242 => "1000000001111000", 
    243 => "1000000001101000", 244 => "1000000001011000", 245 => "1000000001001010", 
    246 => "1000000000111101", 247 => "1000000000110001", 248 => "1000000000100111", 
    249 => "1000000000011110", 250 => "1000000000010110", 251 => "1000000000001111", 
    252 => "1000000000001001", 253 => "1000000000000101", 254 => "1000000000000010", 
    255 to 257=> "1000000000000000", 258 => "1000000000000010", 259 => "1000000000000101", 
    260 => "1000000000001001", 261 => "1000000000001111", 262 => "1000000000010110", 
    263 => "1000000000011110", 264 => "1000000000100111", 265 => "1000000000110001", 
    266 => "1000000000111101", 267 => "1000000001001010", 268 => "1000000001011000", 
    269 => "1000000001101000", 270 => "1000000001111000", 271 => "1000000010001010", 
    272 => "1000000010011101", 273 => "1000000010110010", 274 => "1000000011000111", 
    275 => "1000000011011110", 276 => "1000000011110110", 277 => "1000000100001111", 
    278 => "1000000100101010", 279 => "1000000101000101", 280 => "1000000101100010", 
    281 => "1000000110000000", 282 => "1000000110100000", 283 => "1000000111000000", 
    284 => "1000000111100010", 285 => "1000001000000101", 286 => "1000001000101001", 
    287 => "1000001001001111", 288 => "1000001001110101", 289 => "1000001010011101", 
    290 => "1000001011000110", 291 => "1000001011110000", 292 => "1000001100011100", 
    293 => "1000001101001000", 294 => "1000001101110110", 295 => "1000001110100101", 
    296 => "1000001111010110", 297 => "1000010000000111", 298 => "1000010000111010", 
    299 => "1000010001101101", 300 => "1000010010100010", 301 => "1000010011011001", 
    302 => "1000010100010000", 303 => "1000010101001001", 304 => "1000010110000010", 
    305 => "1000010110111101", 306 => "1000010111111010", 307 => "1000011000110111", 
    308 => "1000011001110101", 309 => "1000011010110101", 310 => "1000011011110110", 
    311 => "1000011100111000", 312 => "1000011101111011", 313 => "1000011110111111", 
    314 => "1000100000000101", 315 => "1000100001001011", 316 => "1000100010010011", 
    317 => "1000100011011100", 318 => "1000100100100110", 319 => "1000100101110001", 
    320 => "1000100110111110", 321 => "1000101000001011", 322 => "1000101001011010", 
    323 => "1000101010101010", 324 => "1000101011111011", 325 => "1000101101001101", 
    326 => "1000101110100000", 327 => "1000101111110100", 328 => "1000110001001010", 
    329 => "1000110010100000", 330 => "1000110011111000", 331 => "1000110101010000", 
    332 => "1000110110101010", 333 => "1000111000000101", 334 => "1000111001100001", 
    335 => "1000111010111110", 336 => "1000111100011101", 337 => "1000111101111100", 
    338 => "1000111111011100", 339 => "1001000000111110", 340 => "1001000010100000", 
    341 => "1001000100000100", 342 => "1001000101101001", 343 => "1001000111001111", 
    344 => "1001001000110101", 345 => "1001001010011101", 346 => "1001001100000110", 
    347 => "1001001101110000", 348 => "1001001111011011", 349 => "1001010001000111", 
    350 => "1001010010110101", 351 => "1001010100100011", 352 => "1001010110010010", 
    353 => "1001011000000010", 354 => "1001011001110011", 355 => "1001011011100110", 
    356 => "1001011101011001", 357 => "1001011111001101", 358 => "1001100001000010", 
    359 => "1001100010111001", 360 => "1001100100110000", 361 => "1001100110101000", 
    362 => "1001101000100010", 363 => "1001101010011100", 364 => "1001101100010111", 
    365 => "1001101110010011", 366 => "1001110000010000", 367 => "1001110010001110", 
    368 => "1001110100001101", 369 => "1001110110001110", 370 => "1001111000001110", 
    371 => "1001111010010000", 372 => "1001111100010011", 373 => "1001111110010111", 
    374 => "1010000000011100", 375 => "1010000010100001", 376 => "1010000100101000", 
    377 => "1010000110101111", 378 => "1010001000111000", 379 => "1010001011000001", 
    380 => "1010001101001011", 381 => "1010001111010110", 382 => "1010010001100010", 
    383 => "1010010011101111", 384 => "1010010101111101", 385 => "1010011000001100", 
    386 => "1010011010011011", 387 => "1010011100101011", 388 => "1010011110111101", 
    389 => "1010100001001111", 390 => "1010100011100010", 391 => "1010100101110101", 
    392 => "1010101000001010", 393 => "1010101010011111", 394 => "1010101100110101", 
    395 => "1010101111001100", 396 => "1010110001100100", 397 => "1010110011111101", 
    398 => "1010110110010110", 399 => "1010111000110001", 400 => "1010111011001100", 
    401 => "1010111101101000", 402 => "1011000000000100", 403 => "1011000010100001", 
    404 => "1011000101000000", 405 => "1011000111011110", 406 => "1011001001111110", 
    407 => "1011001100011110", 408 => "1011001111000000", 409 => "1011010001100001", 
    410 => "1011010100000100", 411 => "1011010110100111", 412 => "1011011001001011", 
    413 => "1011011011110000", 414 => "1011011110010110", 415 => "1011100000111100", 
    416 => "1011100011100011", 417 => "1011100110001010", 418 => "1011101000110010", 
    419 => "1011101011011011", 420 => "1011101110000101", 421 => "1011110000101111", 
    422 => "1011110011011010", 423 => "1011110110000101", 424 => "1011111000110001", 
    425 => "1011111011011110", 426 => "1011111110001100", 427 => "1100000000111010", 
    428 => "1100000011101000", 429 => "1100000110010111", 430 => "1100001001000111", 
    431 => "1100001011111000", 432 => "1100001110101001", 433 => "1100010001011010", 
    434 => "1100010100001101", 435 => "1100010110111111", 436 => "1100011001110011", 
    437 => "1100011100100111", 438 => "1100011111011011", 439 => "1100100010010000", 
    440 => "1100100101000101", 441 => "1100100111111011", 442 => "1100101010110010", 
    443 => "1100101101101001", 444 => "1100110000100001", 445 => "1100110011011001", 
    446 => "1100110110010001", 447 => "1100111001001010", 448 => "1100111100000100", 
    449 => "1100111110111110", 450 => "1101000001111000", 451 => "1101000100110011", 
    452 => "1101000111101110", 453 => "1101001010101010", 454 => "1101001101100111", 
    455 => "1101010000100011", 456 => "1101010011100000", 457 => "1101010110011110", 
    458 => "1101011001011100", 459 => "1101011100011010", 460 => "1101011111011001", 
    461 => "1101100010011000", 462 => "1101100101010111", 463 => "1101101000010111", 
    464 => "1101101011010111", 465 => "1101101110011000", 466 => "1101110001011001", 
    467 => "1101110100011010", 468 => "1101110111011100", 469 => "1101111010011110", 
    470 => "1101111101100000", 471 => "1110000000100011", 472 => "1110000011100110", 
    473 => "1110000110101001", 474 => "1110001001101100", 475 => "1110001100110000", 
    476 => "1110001111110100", 477 => "1110010010111000", 478 => "1110010101111101", 
    479 => "1110011001000010", 480 => "1110011100000111", 481 => "1110011111001100", 
    482 => "1110100010010010", 483 => "1110100101010111", 484 => "1110101000011101", 
    485 => "1110101011100100", 486 => "1110101110101010", 487 => "1110110001110001", 
    488 => "1110110100110111", 489 => "1110110111111110", 490 => "1110111011000110", 
    491 => "1110111110001101", 492 => "1111000001010100", 493 => "1111000100011100", 
    494 => "1111000111100100", 495 => "1111001010101100", 496 => "1111001101110100", 
    497 => "1111010000111100", 498 => "1111010100000100", 499 => "1111010111001100", 
    500 => "1111011010010101", 501 => "1111011101011101", 502 => "1111100000100110", 
    503 => "1111100011101111", 504 => "1111100110111000", 505 => "1111101010000000", 
    506 => "1111101101001001", 507 => "1111110000010010", 508 => "1111110011011011", 
    509 => "1111110110100100", 510 => "1111111001101101", 511 => "1111111100110110" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1 is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 512;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1 is
    component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1_rom_U :  component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;



// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_mux_3to1_sel2_8_1.h"

namespace ap_rtl {

struct matrixmul : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > a_dout;
    sc_in< sc_logic > a_empty_n;
    sc_out< sc_logic > a_read;
    sc_in< sc_lv<24> > b_dout;
    sc_in< sc_logic > b_empty_n;
    sc_out< sc_logic > b_read;
    sc_out< sc_lv<16> > res_din;
    sc_in< sc_logic > res_full_n;
    sc_out< sc_logic > res_write;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>* matrixmul_mux_3to1_sel2_8_1_U1;
    matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>* matrixmul_mux_3to1_sel2_8_1_U2;
    matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>* matrixmul_mux_3to1_sel2_8_1_U3;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_lv<4> > indvar_flatten_reg_133;
    sc_signal< sc_lv<2> > i_reg_144;
    sc_signal< sc_lv<2> > j_reg_155;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_166_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_679;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_51;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > tmp_3_reg_705;
    sc_signal< sc_lv<1> > tmp_reg_701;
    sc_signal< bool > ap_sig_bdd_67;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_679_pp0_it2;
    sc_signal< bool > ap_sig_bdd_77;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_679_pp0_it1;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_172_p2;
    sc_signal< sc_lv<2> > j_mid2_fu_190_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_688;
    sc_signal< sc_lv<2> > ap_reg_ppstg_j_mid2_reg_688_pp0_it1;
    sc_signal< sc_lv<2> > i_mid2_fu_198_p3;
    sc_signal< sc_lv<2> > i_mid2_reg_696;
    sc_signal< sc_lv<1> > tmp_fu_206_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_212_p2;
    sc_signal< sc_lv<2> > j_1_fu_218_p2;
    sc_signal< sc_lv<16> > tmp_11_2_fu_592_p2;
    sc_signal< sc_lv<16> > tmp_11_2_reg_723;
    sc_signal< sc_lv<2> > i_phi_fu_148_p4;
    sc_signal< sc_lv<8> > a_row_0_fu_66;
    sc_signal< sc_lv<8> > a_row_0_1_fu_224_p1;
    sc_signal< sc_lv<8> > a_row_1_1_fu_70;
    sc_signal< sc_lv<8> > a_row_2_1_fu_74;
    sc_signal< sc_lv<8> > b_copy_0_2_3_fu_78;
    sc_signal< sc_lv<8> > b_copy_0_2_7_fu_329_p3;
    sc_signal< sc_lv<8> > b_copy_0_2_6_fu_82;
    sc_signal< sc_lv<8> > b_copy_0_2_5_fu_322_p3;
    sc_signal< sc_lv<8> > b_copy_0_2_1_fu_86;
    sc_signal< sc_lv<8> > b_copy_0_2_2_fu_307_p3;
    sc_signal< sc_lv<8> > b_copy_1_2_3_fu_90;
    sc_signal< sc_lv<8> > b_copy_1_2_7_fu_376_p3;
    sc_signal< sc_lv<8> > b_copy_1_2_6_fu_94;
    sc_signal< sc_lv<8> > b_copy_1_2_5_fu_369_p3;
    sc_signal< sc_lv<8> > b_copy_1_2_1_fu_98;
    sc_signal< sc_lv<8> > b_copy_1_2_2_fu_354_p3;
    sc_signal< sc_lv<8> > b_copy_2_2_3_fu_102;
    sc_signal< sc_lv<8> > b_copy_2_2_7_fu_423_p3;
    sc_signal< sc_lv<8> > b_copy_2_2_6_fu_106;
    sc_signal< sc_lv<8> > b_copy_2_2_5_fu_416_p3;
    sc_signal< sc_lv<8> > b_copy_2_2_1_fu_110;
    sc_signal< sc_lv<8> > b_copy_2_2_2_fu_401_p3;
    sc_signal< sc_lv<1> > exitcond_fu_184_p2;
    sc_signal< sc_lv<2> > i_1_fu_178_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_294_p2;
    sc_signal< sc_lv<8> > b_copy_0_2_9_fu_290_p1;
    sc_signal< sc_lv<8> > b_copy_0_2_fu_299_p3;
    sc_signal< sc_lv<8> > b_copy_0_2_4_fu_314_p3;
    sc_signal< sc_lv<8> > b_copy_1_2_9_fu_336_p4;
    sc_signal< sc_lv<8> > b_copy_1_2_fu_346_p3;
    sc_signal< sc_lv<8> > b_copy_1_2_4_fu_361_p3;
    sc_signal< sc_lv<8> > b_copy_2_2_9_fu_383_p4;
    sc_signal< sc_lv<8> > b_copy_2_2_fu_393_p3;
    sc_signal< sc_lv<8> > b_copy_2_2_4_fu_408_p3;
    sc_signal< sc_lv<8> > tmp_1_fu_515_p5;
    sc_signal< sc_lv<8> > tmp_6_fu_530_p0;
    sc_signal< sc_lv<8> > tmp_6_fu_530_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_540_p5;
    sc_signal< sc_lv<8> > tmp_10_1_fu_555_p0;
    sc_signal< sc_lv<8> > tmp_10_1_fu_555_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_565_p5;
    sc_signal< sc_lv<8> > tmp_10_2_fu_580_p0;
    sc_signal< sc_lv<8> > tmp_10_2_fu_580_p1;
    sc_signal< sc_lv<16> > tmp_10_1_fu_555_p2;
    sc_signal< sc_lv<16> > tmp_10_2_fu_580_p2;
    sc_signal< sc_lv<16> > tmp9_fu_586_p2;
    sc_signal< sc_lv<16> > tmp_6_fu_530_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_2;
    sc_signal< bool > ap_sig_bdd_407;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st6_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_read();
    void thread_a_row_0_1_fu_224_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_bdd_407();
    void thread_ap_sig_bdd_51();
    void thread_ap_sig_bdd_67();
    void thread_ap_sig_bdd_77();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st6_fsm_2();
    void thread_b_copy_0_2_2_fu_307_p3();
    void thread_b_copy_0_2_4_fu_314_p3();
    void thread_b_copy_0_2_5_fu_322_p3();
    void thread_b_copy_0_2_7_fu_329_p3();
    void thread_b_copy_0_2_9_fu_290_p1();
    void thread_b_copy_0_2_fu_299_p3();
    void thread_b_copy_1_2_2_fu_354_p3();
    void thread_b_copy_1_2_4_fu_361_p3();
    void thread_b_copy_1_2_5_fu_369_p3();
    void thread_b_copy_1_2_7_fu_376_p3();
    void thread_b_copy_1_2_9_fu_336_p4();
    void thread_b_copy_1_2_fu_346_p3();
    void thread_b_copy_2_2_2_fu_401_p3();
    void thread_b_copy_2_2_4_fu_408_p3();
    void thread_b_copy_2_2_5_fu_416_p3();
    void thread_b_copy_2_2_7_fu_423_p3();
    void thread_b_copy_2_2_9_fu_383_p4();
    void thread_b_copy_2_2_fu_393_p3();
    void thread_b_read();
    void thread_exitcond_flatten_fu_166_p2();
    void thread_exitcond_fu_184_p2();
    void thread_i_1_fu_178_p2();
    void thread_i_mid2_fu_198_p3();
    void thread_i_phi_fu_148_p4();
    void thread_indvar_flatten_next_fu_172_p2();
    void thread_j_1_fu_218_p2();
    void thread_j_mid2_fu_190_p3();
    void thread_res_din();
    void thread_res_write();
    void thread_sel_tmp_fu_294_p2();
    void thread_tmp9_fu_586_p2();
    void thread_tmp_10_1_fu_555_p0();
    void thread_tmp_10_1_fu_555_p1();
    void thread_tmp_10_1_fu_555_p2();
    void thread_tmp_10_2_fu_580_p0();
    void thread_tmp_10_2_fu_580_p1();
    void thread_tmp_10_2_fu_580_p2();
    void thread_tmp_11_2_fu_592_p2();
    void thread_tmp_3_fu_212_p2();
    void thread_tmp_6_fu_530_p0();
    void thread_tmp_6_fu_530_p1();
    void thread_tmp_6_fu_530_p2();
    void thread_tmp_fu_206_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

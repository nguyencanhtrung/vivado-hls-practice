// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct matrixmul : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<24> > a_q0;
    sc_out< sc_lv<2> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<24> > b_q0;
    sc_out< sc_lv<4> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_lv<4> > indvar_flatten_reg_96;
    sc_signal< sc_lv<2> > i_reg_107;
    sc_signal< sc_lv<2> > j_reg_118;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_129_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_58;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_321_pp0_it1;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_135_p2;
    sc_signal< sc_lv<2> > j_mid2_fu_153_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_330;
    sc_signal< sc_lv<2> > ap_reg_ppstg_j_mid2_reg_330_pp0_it1;
    sc_signal< sc_lv<2> > i_mid2_fu_161_p3;
    sc_signal< sc_lv<2> > i_mid2_reg_335;
    sc_signal< sc_lv<2> > ap_reg_ppstg_i_mid2_reg_335_pp0_it1;
    sc_signal< sc_lv<2> > j_1_fu_179_p2;
    sc_signal< sc_lv<16> > tmp_8_2_fu_281_p2;
    sc_signal< sc_lv<16> > tmp_8_2_reg_357;
    sc_signal< sc_lv<2> > i_phi_fu_111_p4;
    sc_signal< sc_lv<64> > tmp_fu_169_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_174_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_316_p1;
    sc_signal< sc_lv<1> > exitcond_fu_147_p2;
    sc_signal< sc_lv<2> > i_1_fu_141_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_185_p1;
    sc_signal< sc_lv<8> > tmp_13_fu_193_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_201_p0;
    sc_signal< sc_lv<8> > tmp_7_fu_201_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_207_p4;
    sc_signal< sc_lv<8> > tmp_8_fu_221_p4;
    sc_signal< sc_lv<8> > tmp_7_1_fu_235_p0;
    sc_signal< sc_lv<8> > tmp_7_1_fu_235_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_241_p4;
    sc_signal< sc_lv<8> > tmp_11_fu_255_p4;
    sc_signal< sc_lv<8> > tmp_7_2_fu_269_p0;
    sc_signal< sc_lv<8> > tmp_7_2_fu_269_p1;
    sc_signal< sc_lv<16> > tmp_7_fu_201_p2;
    sc_signal< sc_lv<16> > tmp_7_2_fu_269_p2;
    sc_signal< sc_lv<16> > tmp1_fu_275_p2;
    sc_signal< sc_lv<16> > tmp_7_1_fu_235_p2;
    sc_signal< sc_lv<4> > tmp_1_fu_290_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_297_p1;
    sc_signal< sc_lv<5> > tmp_cast_fu_287_p1;
    sc_signal< sc_lv<5> > tmp_2_cast_fu_307_p1;
    sc_signal< sc_lv<5> > tmp_5_fu_301_p2;
    sc_signal< sc_lv<5> > tmp_6_fu_310_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_2;
    sc_signal< bool > ap_sig_bdd_241;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st5_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_bdd_241();
    void thread_ap_sig_bdd_58();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st5_fsm_2();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond_flatten_fu_129_p2();
    void thread_exitcond_fu_147_p2();
    void thread_i_1_fu_141_p2();
    void thread_i_mid2_fu_161_p3();
    void thread_i_phi_fu_111_p4();
    void thread_indvar_flatten_next_fu_135_p2();
    void thread_j_1_fu_179_p2();
    void thread_j_mid2_fu_153_p3();
    void thread_p_shl_cast_fu_297_p1();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp1_fu_275_p2();
    void thread_tmp_10_fu_241_p4();
    void thread_tmp_11_fu_255_p4();
    void thread_tmp_12_fu_185_p1();
    void thread_tmp_13_cast_fu_316_p1();
    void thread_tmp_13_fu_193_p1();
    void thread_tmp_1_fu_290_p3();
    void thread_tmp_2_cast_fu_307_p1();
    void thread_tmp_2_fu_174_p1();
    void thread_tmp_5_fu_301_p2();
    void thread_tmp_6_fu_310_p2();
    void thread_tmp_7_1_fu_235_p0();
    void thread_tmp_7_1_fu_235_p1();
    void thread_tmp_7_1_fu_235_p2();
    void thread_tmp_7_2_fu_269_p0();
    void thread_tmp_7_2_fu_269_p1();
    void thread_tmp_7_2_fu_269_p2();
    void thread_tmp_7_fu_201_p0();
    void thread_tmp_7_fu_201_p1();
    void thread_tmp_7_fu_201_p2();
    void thread_tmp_8_2_fu_281_p2();
    void thread_tmp_8_fu_221_p4();
    void thread_tmp_9_fu_207_p4();
    void thread_tmp_cast_fu_287_p1();
    void thread_tmp_fu_169_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif



================================================================
== Vivado HLS Report for 'dct_dct_1d'
================================================================
* Date:           Wed Jul  6 11:01:51 2016

* Version:        2015.3 (Build 1368829 on Mon Sep 28 20:31:51 PM 2015)
* Project:        dct_prj
* Solution:       solution7
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      8.93|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    8|    8|    4|    4| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 1
  Pipeline-0: II = 4, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: tmp_8_read [1/1] 0.00ns
:1  %tmp_8_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %tmp_8)

ST_1: tmp_39 [1/1] 0.00ns
:26  %tmp_39 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %tmp_8_read, i1 false)

ST_1: tmp_40 [1/1] 0.00ns
:27  %tmp_40 = zext i5 %tmp_39 to i64

ST_1: src_addr [1/1] 0.00ns
:28  %src_addr = getelementptr [16 x i16]* %src, i64 0, i64 %tmp_40

ST_1: tmp_41 [1/1] 0.00ns
:29  %tmp_41 = or i5 %tmp_39, 1

ST_1: tmp_42 [1/1] 0.00ns
:30  %tmp_42 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %tmp_41)

ST_1: src_addr_1 [1/1] 0.00ns
:31  %src_addr_1 = getelementptr [16 x i16]* %src, i64 0, i64 %tmp_42

ST_1: src1_addr [1/1] 0.00ns
:32  %src1_addr = getelementptr [16 x i16]* %src1, i64 0, i64 %tmp_40

ST_1: src1_addr_1 [1/1] 0.00ns
:33  %src1_addr_1 = getelementptr [16 x i16]* %src1, i64 0, i64 %tmp_42

ST_1: src2_addr [1/1] 0.00ns
:34  %src2_addr = getelementptr [16 x i16]* %src2, i64 0, i64 %tmp_40

ST_1: src2_addr_1 [1/1] 0.00ns
:35  %src2_addr_1 = getelementptr [16 x i16]* %src2, i64 0, i64 %tmp_42

ST_1: src3_addr [1/1] 0.00ns
:36  %src3_addr = getelementptr [16 x i16]* %src3, i64 0, i64 %tmp_40

ST_1: src3_addr_1 [1/1] 0.00ns
:37  %src3_addr_1 = getelementptr [16 x i16]* %src3, i64 0, i64 %tmp_42

ST_1: src_load [2/2] 2.39ns
:38  %src_load = load i16* %src_addr, align 2

ST_1: src_load_1 [2/2] 2.39ns
:40  %src_load_1 = load i16* %src_addr_1, align 2

ST_1: src1_load [2/2] 2.39ns
:42  %src1_load = load i16* %src1_addr, align 2

ST_1: src1_load_1 [2/2] 2.39ns
:44  %src1_load_1 = load i16* %src1_addr_1, align 2

ST_1: src2_load [2/2] 2.39ns
:46  %src2_load = load i16* %src2_addr, align 2

ST_1: src2_load_1 [2/2] 2.39ns
:48  %src2_load_1 = load i16* %src2_addr_1, align 2

ST_1: src3_load [2/2] 2.39ns
:50  %src3_load = load i16* %src3_addr, align 2

ST_1: src3_load_1 [2/2] 2.39ns
:52  %src3_load_1 = load i16* %src3_addr_1, align 2


 <State 2>: 6.97ns
ST_2: src_load [1/2] 2.39ns
:38  %src_load = load i16* %src_addr, align 2

ST_2: tmp_6 [1/1] 0.00ns
:39  %tmp_6 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src_load, i13 0)

ST_2: src_load_1 [1/2] 2.39ns
:40  %src_load_1 = load i16* %src_addr_1, align 2

ST_2: tmp_6_0_1 [1/1] 0.00ns
:41  %tmp_6_0_1 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src_load_1, i13 0)

ST_2: src1_load [1/2] 2.39ns
:42  %src1_load = load i16* %src1_addr, align 2

ST_2: tmp_6_0_2 [1/1] 0.00ns
:43  %tmp_6_0_2 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src1_load, i13 0)

ST_2: src1_load_1 [1/2] 2.39ns
:44  %src1_load_1 = load i16* %src1_addr_1, align 2

ST_2: tmp_6_0_3 [1/1] 0.00ns
:45  %tmp_6_0_3 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src1_load_1, i13 0)

ST_2: src2_load [1/2] 2.39ns
:46  %src2_load = load i16* %src2_addr, align 2

ST_2: tmp_6_0_4 [1/1] 0.00ns
:47  %tmp_6_0_4 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src2_load, i13 0)

ST_2: src2_load_1 [1/2] 2.39ns
:48  %src2_load_1 = load i16* %src2_addr_1, align 2

ST_2: tmp_6_0_5 [1/1] 0.00ns
:49  %tmp_6_0_5 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src2_load_1, i13 0)

ST_2: src3_load [1/2] 2.39ns
:50  %src3_load = load i16* %src3_addr, align 2

ST_2: tmp_6_0_6 [1/1] 0.00ns
:51  %tmp_6_0_6 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src3_load, i13 0)

ST_2: src3_load_1 [1/2] 2.39ns
:52  %src3_load_1 = load i16* %src3_addr_1, align 2

ST_2: tmp_6_0_7 [1/1] 0.00ns
:53  %tmp_6_0_7 = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %src3_load_1, i13 0)

ST_2: tmp3 [1/1] 1.70ns
:54  %tmp3 = add i29 %tmp_6_0_1, %tmp_6

ST_2: tmp4 [1/1] 1.44ns
:55  %tmp4 = add i29 %tmp_6_0_3, %tmp_6_0_2

ST_2: tmp [1/1] 1.44ns
:56  %tmp = add i29 %tmp3, %tmp4

ST_2: tmp6 [1/1] 1.70ns
:57  %tmp6 = add i29 %tmp_6_0_5, %tmp_6_0_4

ST_2: tmp1 [1/1] 0.00ns
:58  %tmp1 = or i29 %tmp_6_0_7, 4096

ST_2: tmp7 [1/1] 1.70ns
:59  %tmp7 = add i29 %tmp_6_0_6, %tmp1

ST_2: tmp5 [1/1] 1.44ns
:60  %tmp5 = add i29 %tmp6, %tmp7

ST_2: tmp_s [1/1] 1.44ns
:61  %tmp_s = add i29 %tmp, %tmp5

ST_2: tmp_3 [1/1] 0.00ns
:62  %tmp_3 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_s, i32 13, i32 28)

ST_2: tmp_5_1_5_cast_cast [1/1] 0.00ns
:75  %tmp_5_1_5_cast_cast = sext i16 %src2_load_1 to i17

ST_2: tmp_5_1_6_cast_cast [1/1] 0.00ns
:78  %tmp_5_1_6_cast_cast = sext i16 %src3_load to i17

ST_2: tmp_7_4_1 [1/1] 1.44ns
:128  %tmp_7_4_1 = sub i29 %tmp_6, %tmp_6_0_1

ST_2: tmp_7_4_2 [1/1] 1.44ns
:129  %tmp_7_4_2 = sub i29 %tmp_7_4_1, %tmp_6_0_2

ST_2: tmp28 [1/1] 1.44ns
:130  %tmp28 = add i29 %tmp_6_0_4, %tmp_6_0_3

ST_2: tmp29 [1/1] 1.44ns
:131  %tmp29 = add i29 %tmp_7_4_2, %tmp28

ST_2: tmp_6_4_s [1/1] 1.46ns
:132  %tmp_6_4_s = add i17 %tmp_5_1_6_cast_cast, %tmp_5_1_5_cast_cast

ST_2: tmp_6_4_557_cast [1/1] 0.00ns
:133  %tmp_6_4_557_cast = sext i17 %tmp_6_4_s to i29

ST_2: tmp_43 [1/1] 0.00ns
:134  %tmp_43 = trunc i17 %tmp_6_4_s to i16

ST_2: p_shl [1/1] 0.00ns
:135  %p_shl = call i29 @_ssdm_op_BitConcatenate.i29.i16.i13(i16 %tmp_43, i13 0)

ST_2: tmp30 [1/1] 1.70ns
:136  %tmp30 = sub i29 %tmp_6_4_557_cast, %p_shl


 <State 3>: 5.79ns
ST_3: tmp_81_read [1/1] 0.00ns
:0  %tmp_81_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %tmp_81)

ST_3: tmp_23 [1/1] 0.00ns
:2  %tmp_23 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_81_read, i3 0)

ST_3: tmp_24 [1/1] 0.00ns
:3  %tmp_24 = zext i7 %tmp_23 to i64

ST_3: dst_addr [1/1] 0.00ns
:4  %dst_addr = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_24

ST_3: tmp_31 [1/1] 0.00ns
:14  %tmp_31 = or i7 %tmp_23, 4

ST_3: tmp_32 [1/1] 0.00ns
:15  %tmp_32 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_31)

ST_3: dst_addr_4 [1/1] 0.00ns
:16  %dst_addr_4 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_32

ST_3: stg_74 [1/1] 2.33ns
:63  store i16 %tmp_3, i16* %dst_addr, align 2

ST_3: tmp_5_1_1_cast [1/1] 0.00ns
:66  %tmp_5_1_1_cast = sext i16 %src_load_1 to i29

ST_3: tmp_6_1_1 [1/1] 5.79ns
:67  %tmp_6_1_1 = mul i29 9633, %tmp_5_1_1_cast

ST_3: tmp_5_1_3_cast [1/1] 0.00ns
:70  %tmp_5_1_3_cast = sext i16 %src1_load_1 to i29

ST_3: tmp_6_1_3 [1/1] 5.79ns
:71  %tmp_6_1_3 = mul i29 2260, %tmp_5_1_3_cast

ST_3: tmp_5_1_5_cast [1/1] 0.00ns
:74  %tmp_5_1_5_cast = sext i16 %src2_load_1 to i29

ST_3: tmp_6_1_5 [1/1] 5.79ns
:76  %tmp_6_1_5 = mul i29 -6436, %tmp_5_1_5_cast

ST_3: tmp_6_2_1 [1/1] 5.79ns
:93  %tmp_6_2_1 = mul i29 4433, %tmp_5_1_1_cast

ST_3: tmp_6_2_3 [1/1] 5.79ns
:95  %tmp_6_2_3 = mul i29 -10703, %tmp_5_1_3_cast

ST_3: tmp_6_2_5 [1/1] 5.79ns
:97  %tmp_6_2_5 = mul i29 -4433, %tmp_5_1_5_cast

ST_3: tmp_6_3_1 [1/1] 5.79ns
:111  %tmp_6_3_1 = mul i29 -2260, %tmp_5_1_1_cast

ST_3: tmp_6_3_3 [1/1] 5.79ns
:113  %tmp_6_3_3 = mul i29 -6436, %tmp_5_1_3_cast

ST_3: tmp_6_3_5 [1/1] 5.79ns
:115  %tmp_6_3_5 = mul i29 11363, %tmp_5_1_5_cast

ST_3: tmp32 [1/1] 1.44ns
:137  %tmp32 = add i29 %tmp30, %tmp1

ST_3: tmp_4 [1/1] 1.44ns
:138  %tmp_4 = add i29 %tmp29, %tmp32

ST_3: tmp_3_4 [1/1] 0.00ns
:139  %tmp_3_4 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_4, i32 13, i32 28)

ST_3: stg_90 [1/1] 2.33ns
:140  store i16 %tmp_3_4, i16* %dst_addr_4, align 2

ST_3: tmp_6_5_1 [1/1] 5.79ns
:142  %tmp_6_5_1 = mul i29 -11362, %tmp_5_1_1_cast

ST_3: tmp_6_5_3 [1/1] 5.79ns
:144  %tmp_6_5_3 = mul i29 9633, %tmp_5_1_3_cast

ST_3: tmp_6_5_5 [1/1] 5.79ns
:146  %tmp_6_5_5 = mul i29 -2260, %tmp_5_1_5_cast


 <State 4>: 8.74ns
ST_4: tmp_5_1_6_cast [1/1] 0.00ns
:77  %tmp_5_1_6_cast = sext i16 %src3_load to i29

ST_4: tmp_6_1_6 [1/1] 2.84ns
:79  %tmp_6_1_6 = mul i29 -9632, %tmp_5_1_6_cast

ST_4: tmp_5_1_7_cast [1/1] 0.00ns
:80  %tmp_5_1_7_cast = sext i16 %src3_load_1 to i29

ST_4: tmp_6_1_7 [1/1] 2.84ns
:81  %tmp_6_1_7 = mul i29 -11362, %tmp_5_1_7_cast

ST_4: tmp11 [1/1] 2.95ns
:86  %tmp11 = add i29 4096, %tmp_6_1_7

ST_4: tmp13 [1/1] 2.95ns
:87  %tmp13 = add i29 %tmp_6_1_6, %tmp11

ST_4: tmp_6_2_6 [1/1] 2.84ns
:98  %tmp_6_2_6 = mul i29 4433, %tmp_5_1_6_cast

ST_4: tmp_6_2_7 [1/1] 2.84ns
:99  %tmp_6_2_7 = mul i29 10703, %tmp_5_1_7_cast

ST_4: tmp18 [1/1] 2.95ns
:104  %tmp18 = add i29 4096, %tmp_6_2_7

ST_4: tmp20 [1/1] 2.95ns
:105  %tmp20 = add i29 %tmp_6_2_6, %tmp18

ST_4: tmp_6_3_6 [1/1] 2.84ns
:116  %tmp_6_3_6 = mul i29 2260, %tmp_5_1_6_cast

ST_4: tmp_6_3_7 [1/1] 2.84ns
:117  %tmp_6_3_7 = mul i29 -9632, %tmp_5_1_7_cast

ST_4: tmp25 [1/1] 2.95ns
:122  %tmp25 = add i29 4096, %tmp_6_3_7

ST_4: tmp27 [1/1] 2.95ns
:123  %tmp27 = add i29 %tmp_6_3_6, %tmp25

ST_4: tmp_6_6_1 [1/1] 5.79ns
:160  %tmp_6_6_1 = mul i29 -10703, %tmp_5_1_1_cast

ST_4: tmp_6_6_3 [1/1] 5.79ns
:162  %tmp_6_6_3 = mul i29 -4433, %tmp_5_1_3_cast

ST_4: tmp_6_6_5 [1/1] 5.79ns
:164  %tmp_6_6_5 = mul i29 10703, %tmp_5_1_5_cast

ST_4: tmp_6_7_1 [1/1] 5.79ns
:178  %tmp_6_7_1 = mul i29 -6436, %tmp_5_1_1_cast

ST_4: tmp_6_7_3 [1/1] 5.79ns
:180  %tmp_6_7_3 = mul i29 -11362, %tmp_5_1_3_cast

ST_4: tmp_6_7_5 [1/1] 5.79ns
:182  %tmp_6_7_5 = mul i29 -9632, %tmp_5_1_5_cast


 <State 5>: 8.93ns
ST_5: tmp_5_1_cast [1/1] 0.00ns
:64  %tmp_5_1_cast = sext i16 %src_load to i29

ST_5: tmp_6_1 [1/1] 2.84ns
:65  %tmp_6_1 = mul i29 11363, %tmp_5_1_cast

ST_5: tmp_5_1_2_cast [1/1] 0.00ns
:68  %tmp_5_1_2_cast = sext i16 %src1_load to i29

ST_5: tmp_6_1_2 [1/1] 2.84ns
:69  %tmp_6_1_2 = mul i29 6436, %tmp_5_1_2_cast

ST_5: tmp_5_1_4_cast [1/1] 0.00ns
:72  %tmp_5_1_4_cast = sext i16 %src2_load to i29

ST_5: tmp_6_1_4 [1/1] 2.84ns
:73  %tmp_6_1_4 = mul i29 -2260, %tmp_5_1_4_cast

ST_5: tmp2 [1/1] 2.95ns
:82  %tmp2 = add i29 %tmp_6_1_1, %tmp_6_1

ST_5: tmp8 [1/1] 2.95ns
:83  %tmp8 = add i29 %tmp_6_1_3, %tmp_6_1_2

ST_5: tmp9 [1/1] 1.70ns
:84  %tmp9 = add i29 %tmp2, %tmp8

ST_5: tmp10 [1/1] 2.95ns
:85  %tmp10 = add i29 %tmp_6_1_5, %tmp_6_1_4

ST_5: tmp12 [1/1] 1.44ns
:88  %tmp12 = add i29 %tmp10, %tmp13

ST_5: tmp_1 [1/1] 1.44ns
:89  %tmp_1 = add i29 %tmp9, %tmp12

ST_5: tmp_3_1 [1/1] 0.00ns
:90  %tmp_3_1 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_1, i32 13, i32 28)

ST_5: tmp_6_2 [1/1] 2.84ns
:92  %tmp_6_2 = mul i29 10703, %tmp_5_1_cast

ST_5: tmp_6_2_2 [1/1] 2.84ns
:94  %tmp_6_2_2 = mul i29 -4433, %tmp_5_1_2_cast

ST_5: tmp_6_2_4 [1/1] 2.84ns
:96  %tmp_6_2_4 = mul i29 -10703, %tmp_5_1_4_cast

ST_5: tmp14 [1/1] 2.95ns
:100  %tmp14 = add i29 %tmp_6_2_1, %tmp_6_2

ST_5: tmp15 [1/1] 2.95ns
:101  %tmp15 = add i29 %tmp_6_2_3, %tmp_6_2_2

ST_5: tmp16 [1/1] 1.70ns
:102  %tmp16 = add i29 %tmp14, %tmp15

ST_5: tmp17 [1/1] 2.95ns
:103  %tmp17 = add i29 %tmp_6_2_5, %tmp_6_2_4

ST_5: tmp19 [1/1] 1.44ns
:106  %tmp19 = add i29 %tmp17, %tmp20

ST_5: tmp_2 [1/1] 1.44ns
:107  %tmp_2 = add i29 %tmp16, %tmp19

ST_5: tmp_3_2 [1/1] 0.00ns
:108  %tmp_3_2 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_2, i32 13, i32 28)

ST_5: tmp_6_5_6 [1/1] 2.84ns
:147  %tmp_6_5_6 = mul i29 11363, %tmp_5_1_6_cast

ST_5: tmp_6_5_7 [1/1] 2.84ns
:148  %tmp_6_5_7 = mul i29 -6436, %tmp_5_1_7_cast

ST_5: tmp37 [1/1] 2.95ns
:153  %tmp37 = add i29 4096, %tmp_6_5_7

ST_5: tmp39 [1/1] 2.95ns
:154  %tmp39 = add i29 %tmp_6_5_6, %tmp37

ST_5: tmp_6_6_6 [1/1] 2.84ns
:165  %tmp_6_6_6 = mul i29 -10703, %tmp_5_1_6_cast

ST_5: tmp_6_6_7 [1/1] 2.84ns
:166  %tmp_6_6_7 = mul i29 4433, %tmp_5_1_7_cast

ST_5: tmp44 [1/1] 2.95ns
:171  %tmp44 = add i29 4096, %tmp_6_6_7

ST_5: tmp46 [1/1] 2.95ns
:172  %tmp46 = add i29 %tmp_6_6_6, %tmp44

ST_5: tmp_6_7_6 [1/1] 2.84ns
:183  %tmp_6_7_6 = mul i29 6436, %tmp_5_1_6_cast

ST_5: tmp_1_12 [1/1] 0.00ns
:184  %tmp_1_12 = sext i16 %src3_load_1 to i28

ST_5: tmp_6_7_7_cast [1/1] 2.84ns
:185  %tmp_6_7_7_cast = mul i28 -2260, %tmp_1_12

ST_5: tmp51 [1/1] 2.95ns
:190  %tmp51 = add i28 4096, %tmp_6_7_7_cast

ST_5: tmp55_cast [1/1] 0.00ns
:191  %tmp55_cast = sext i28 %tmp51 to i29

ST_5: tmp53 [1/1] 2.95ns
:192  %tmp53 = add i29 %tmp_6_7_6, %tmp55_cast


 <State 6>: 8.93ns
ST_6: tmp_25 [1/1] 0.00ns
:5  %tmp_25 = or i7 %tmp_23, 1

ST_6: tmp_26 [1/1] 0.00ns
:6  %tmp_26 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_25)

ST_6: dst_addr_1 [1/1] 0.00ns
:7  %dst_addr_1 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_26

ST_6: tmp_27 [1/1] 0.00ns
:8  %tmp_27 = or i7 %tmp_23, 2

ST_6: tmp_28 [1/1] 0.00ns
:9  %tmp_28 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_27)

ST_6: dst_addr_2 [1/1] 0.00ns
:10  %dst_addr_2 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_28

ST_6: stg_157 [1/1] 2.33ns
:91  store i16 %tmp_3_1, i16* %dst_addr_1, align 2

ST_6: stg_158 [1/1] 2.33ns
:109  store i16 %tmp_3_2, i16* %dst_addr_2, align 2

ST_6: tmp_6_3 [1/1] 2.84ns
:110  %tmp_6_3 = mul i29 9633, %tmp_5_1_cast

ST_6: tmp_6_3_2 [1/1] 2.84ns
:112  %tmp_6_3_2 = mul i29 -11362, %tmp_5_1_2_cast

ST_6: tmp_6_3_4 [1/1] 2.84ns
:114  %tmp_6_3_4 = mul i29 6436, %tmp_5_1_4_cast

ST_6: tmp21 [1/1] 2.95ns
:118  %tmp21 = add i29 %tmp_6_3_1, %tmp_6_3

ST_6: tmp22 [1/1] 2.95ns
:119  %tmp22 = add i29 %tmp_6_3_3, %tmp_6_3_2

ST_6: tmp23 [1/1] 1.70ns
:120  %tmp23 = add i29 %tmp21, %tmp22

ST_6: tmp24 [1/1] 2.95ns
:121  %tmp24 = add i29 %tmp_6_3_5, %tmp_6_3_4

ST_6: tmp26 [1/1] 1.44ns
:124  %tmp26 = add i29 %tmp24, %tmp27

ST_6: tmp_3_10 [1/1] 1.44ns
:125  %tmp_3_10 = add i29 %tmp23, %tmp26

ST_6: tmp_3_3 [1/1] 0.00ns
:126  %tmp_3_3 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_3_10, i32 13, i32 28)

ST_6: tmp_6_5 [1/1] 2.84ns
:141  %tmp_6_5 = mul i29 6436, %tmp_5_1_cast

ST_6: tmp_6_5_2 [1/1] 2.84ns
:143  %tmp_6_5_2 = mul i29 2260, %tmp_5_1_2_cast

ST_6: tmp_6_5_4 [1/1] 2.84ns
:145  %tmp_6_5_4 = mul i29 -9632, %tmp_5_1_4_cast

ST_6: tmp33 [1/1] 2.95ns
:149  %tmp33 = add i29 %tmp_6_5_1, %tmp_6_5

ST_6: tmp34 [1/1] 2.95ns
:150  %tmp34 = add i29 %tmp_6_5_3, %tmp_6_5_2

ST_6: tmp35 [1/1] 1.70ns
:151  %tmp35 = add i29 %tmp33, %tmp34

ST_6: tmp36 [1/1] 2.95ns
:152  %tmp36 = add i29 %tmp_6_5_5, %tmp_6_5_4

ST_6: tmp38 [1/1] 1.44ns
:155  %tmp38 = add i29 %tmp36, %tmp39

ST_6: tmp_5 [1/1] 1.44ns
:156  %tmp_5 = add i29 %tmp35, %tmp38

ST_6: tmp_3_5 [1/1] 0.00ns
:157  %tmp_3_5 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_5, i32 13, i32 28)

ST_6: tmp_6_6 [1/1] 2.84ns
:159  %tmp_6_6 = mul i29 4433, %tmp_5_1_cast

ST_6: tmp_6_6_2 [1/1] 2.84ns
:161  %tmp_6_6_2 = mul i29 10703, %tmp_5_1_2_cast

ST_6: tmp_6_6_4 [1/1] 2.84ns
:163  %tmp_6_6_4 = mul i29 -4433, %tmp_5_1_4_cast

ST_6: tmp40 [1/1] 2.95ns
:167  %tmp40 = add i29 %tmp_6_6_1, %tmp_6_6

ST_6: tmp41 [1/1] 2.95ns
:168  %tmp41 = add i29 %tmp_6_6_3, %tmp_6_6_2

ST_6: tmp42 [1/1] 1.70ns
:169  %tmp42 = add i29 %tmp40, %tmp41

ST_6: tmp43 [1/1] 2.95ns
:170  %tmp43 = add i29 %tmp_6_6_5, %tmp_6_6_4

ST_6: tmp45 [1/1] 1.44ns
:173  %tmp45 = add i29 %tmp43, %tmp46

ST_6: tmp_6_11 [1/1] 1.44ns
:174  %tmp_6_11 = add i29 %tmp42, %tmp45

ST_6: tmp_3_6 [1/1] 0.00ns
:175  %tmp_3_6 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_6_11, i32 13, i32 28)

ST_6: tmp_6_7 [1/1] 2.84ns
:177  %tmp_6_7 = mul i29 2260, %tmp_5_1_cast

ST_6: tmp_6_7_2 [1/1] 2.84ns
:179  %tmp_6_7_2 = mul i29 9633, %tmp_5_1_2_cast

ST_6: tmp_6_7_4 [1/1] 2.84ns
:181  %tmp_6_7_4 = mul i29 11363, %tmp_5_1_4_cast

ST_6: tmp47 [1/1] 2.95ns
:186  %tmp47 = add i29 %tmp_6_7_1, %tmp_6_7

ST_6: tmp48 [1/1] 2.95ns
:187  %tmp48 = add i29 %tmp_6_7_3, %tmp_6_7_2

ST_6: tmp49 [1/1] 1.70ns
:188  %tmp49 = add i29 %tmp47, %tmp48

ST_6: tmp50 [1/1] 2.95ns
:189  %tmp50 = add i29 %tmp_6_7_5, %tmp_6_7_4

ST_6: tmp52 [1/1] 1.44ns
:193  %tmp52 = add i29 %tmp50, %tmp53

ST_6: tmp_7 [1/1] 1.44ns
:194  %tmp_7 = add i29 %tmp49, %tmp52

ST_6: tmp_3_7 [1/1] 0.00ns
:195  %tmp_3_7 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %tmp_7, i32 13, i32 28)


 <State 7>: 0.00ns

 <State 8>: 2.33ns
ST_8: tmp_29 [1/1] 0.00ns
:11  %tmp_29 = or i7 %tmp_23, 3

ST_8: tmp_30 [1/1] 0.00ns
:12  %tmp_30 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_29)

ST_8: dst_addr_3 [1/1] 0.00ns
:13  %dst_addr_3 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_30

ST_8: tmp_33 [1/1] 0.00ns
:17  %tmp_33 = or i7 %tmp_23, 5

ST_8: tmp_34 [1/1] 0.00ns
:18  %tmp_34 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_33)

ST_8: dst_addr_5 [1/1] 0.00ns
:19  %dst_addr_5 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_34

ST_8: stg_205 [1/1] 2.33ns
:127  store i16 %tmp_3_3, i16* %dst_addr_3, align 2

ST_8: stg_206 [1/1] 2.33ns
:158  store i16 %tmp_3_5, i16* %dst_addr_5, align 2


 <State 9>: 2.33ns
ST_9: tmp_35 [1/1] 0.00ns
:20  %tmp_35 = or i7 %tmp_23, 6

ST_9: tmp_36 [1/1] 0.00ns
:21  %tmp_36 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_35)

ST_9: dst_addr_6 [1/1] 0.00ns
:22  %dst_addr_6 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_36

ST_9: tmp_37 [1/1] 0.00ns
:23  %tmp_37 = or i7 %tmp_23, 7

ST_9: tmp_38 [1/1] 0.00ns
:24  %tmp_38 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %tmp_37)

ST_9: dst_addr_7 [1/1] 0.00ns
:25  %dst_addr_7 = getelementptr [64 x i16]* %dst, i64 0, i64 %tmp_38

ST_9: stg_213 [1/1] 2.33ns
:176  store i16 %tmp_3_6, i16* %dst_addr_6, align 2

ST_9: stg_214 [1/1] 2.33ns
:196  store i16 %tmp_3_7, i16* %dst_addr_7, align 2

ST_9: stg_215 [1/1] 0.00ns
:197  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

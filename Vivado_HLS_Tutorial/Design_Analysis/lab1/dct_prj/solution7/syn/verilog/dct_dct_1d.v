// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_dct_1d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        src1_address0,
        src1_ce0,
        src1_q0,
        src1_address1,
        src1_ce1,
        src1_q1,
        src2_address0,
        src2_ce0,
        src2_q0,
        src2_address1,
        src2_ce1,
        src2_q1,
        src3_address0,
        src3_ce0,
        src3_q0,
        src3_address1,
        src3_ce1,
        src3_q1,
        tmp_8,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        dst_address1,
        dst_ce1,
        dst_we1,
        dst_d1,
        tmp_81
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 4'b1;
parameter    ap_ST_pp0_stg1_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg2_fsm_2 = 4'b100;
parameter    ap_ST_pp0_stg3_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv59_0 = 59'b00000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv29_1000 = 29'b1000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv7_4 = 7'b100;
parameter    ap_const_lv57_0 = 57'b000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv7_2 = 7'b10;
parameter    ap_const_lv7_3 = 7'b11;
parameter    ap_const_lv7_5 = 7'b101;
parameter    ap_const_lv7_6 = 7'b110;
parameter    ap_const_lv7_7 = 7'b111;
parameter    ap_const_lv29_1151 = 29'b1000101010001;
parameter    ap_const_lv29_29CF = 29'b10100111001111;
parameter    ap_const_lv29_1FFFEEAF = 29'b11111111111111110111010101111;
parameter    ap_const_lv29_1FFFD631 = 29'b11111111111111101011000110001;
parameter    ap_const_lv29_2C63 = 29'b10110001100011;
parameter    ap_const_lv29_25A1 = 29'b10010110100001;
parameter    ap_const_lv29_1FFFD39E = 29'b11111111111111101001110011110;
parameter    ap_const_lv29_1FFFE6DC = 29'b11111111111111110011011011100;
parameter    ap_const_lv28_FFFF72C = 28'b1111111111111111011100101100;
parameter    ap_const_lv28_1000 = 28'b1000000000000;
parameter    ap_const_lv29_1924 = 29'b1100100100100;
parameter    ap_const_lv29_8D4 = 29'b100011010100;
parameter    ap_const_lv29_1FFFDA60 = 29'b11111111111111101101001100000;
parameter    ap_const_lv29_1FFFF72C = 29'b11111111111111111011100101100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [3:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [3:0] src_address1;
output   src_ce1;
input  [15:0] src_q1;
output  [3:0] src1_address0;
output   src1_ce0;
input  [15:0] src1_q0;
output  [3:0] src1_address1;
output   src1_ce1;
input  [15:0] src1_q1;
output  [3:0] src2_address0;
output   src2_ce0;
input  [15:0] src2_q0;
output  [3:0] src2_address1;
output   src2_ce1;
input  [15:0] src2_q1;
output  [3:0] src3_address0;
output   src3_ce0;
input  [15:0] src3_q0;
output  [3:0] src3_address1;
output   src3_ce1;
input  [15:0] src3_q1;
input  [3:0] tmp_8;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
output  [5:0] dst_address1;
output   dst_ce1;
output   dst_we1;
output  [15:0] dst_d1;
input  [3:0] tmp_81;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_ce0;
reg src_ce1;
reg src1_ce0;
reg src1_ce1;
reg src2_ce0;
reg src2_ce1;
reg src3_ce0;
reg src3_ce1;
reg[5:0] dst_address0;
reg dst_ce0;
reg dst_we0;
reg[15:0] dst_d0;
reg[5:0] dst_address1;
reg dst_ce1;
reg dst_we1;
reg[15:0] dst_d1;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_22;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_3;
reg    ap_sig_bdd_46;
reg   [15:0] src_load_reg_1153;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_1;
reg    ap_sig_bdd_129;
reg   [15:0] src_load_1_reg_1158;
reg   [15:0] src1_load_reg_1163;
reg   [15:0] src1_load_1_reg_1168;
reg   [15:0] src2_load_reg_1173;
reg   [15:0] src2_load_1_reg_1178;
reg   [15:0] src3_load_reg_1183;
reg  signed [15:0] src3_load_1_reg_1188;
wire   [28:0] tmp1_fu_387_p2;
reg   [28:0] tmp1_reg_1194;
reg   [15:0] tmp_3_reg_1199;
wire   [28:0] tmp29_fu_447_p2;
reg   [28:0] tmp29_reg_1204;
wire   [28:0] tmp30_fu_475_p2;
reg   [28:0] tmp30_reg_1209;
wire   [6:0] tmp_23_fu_481_p3;
reg   [6:0] tmp_23_reg_1214;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_2;
reg    ap_sig_bdd_156;
reg   [6:0] ap_reg_ppstg_tmp_23_reg_1214_pp0_it1;
wire  signed [28:0] tmp_5_1_1_cast_fu_509_p1;
reg  signed [28:0] tmp_5_1_1_cast_reg_1224;
wire  signed [28:0] tmp_6_1_1_fu_1107_p2;
reg  signed [28:0] tmp_6_1_1_reg_1230;
wire  signed [28:0] tmp_5_1_3_cast_fu_512_p1;
reg  signed [28:0] tmp_5_1_3_cast_reg_1235;
wire  signed [28:0] tmp_6_1_3_fu_1101_p2;
reg  signed [28:0] tmp_6_1_3_reg_1241;
wire  signed [28:0] tmp_5_1_5_cast_fu_515_p1;
reg  signed [28:0] tmp_5_1_5_cast_reg_1246;
wire  signed [28:0] tmp_6_1_5_fu_1095_p2;
reg  signed [28:0] tmp_6_1_5_reg_1252;
wire  signed [28:0] tmp_6_2_1_fu_1049_p2;
reg  signed [28:0] tmp_6_2_1_reg_1257;
wire  signed [28:0] tmp_6_2_3_fu_1043_p2;
reg  signed [28:0] tmp_6_2_3_reg_1262;
wire  signed [28:0] tmp_6_2_5_fu_1037_p2;
reg  signed [28:0] tmp_6_2_5_reg_1267;
wire  signed [28:0] tmp_6_3_1_fu_956_p2;
reg  signed [28:0] tmp_6_3_1_reg_1272;
wire  signed [28:0] tmp_6_3_3_fu_950_p2;
reg  signed [28:0] tmp_6_3_3_reg_1277;
wire  signed [28:0] tmp_6_3_5_fu_944_p2;
reg  signed [28:0] tmp_6_3_5_reg_1282;
wire  signed [28:0] tmp_6_5_1_fu_901_p2;
reg  signed [28:0] tmp_6_5_1_reg_1287;
wire  signed [28:0] tmp_6_5_3_fu_895_p2;
reg  signed [28:0] tmp_6_5_3_reg_1292;
wire  signed [28:0] tmp_6_5_5_fu_889_p2;
reg  signed [28:0] tmp_6_5_5_reg_1297;
wire  signed [28:0] tmp_5_1_6_cast_fu_538_p1;
reg  signed [28:0] tmp_5_1_6_cast_reg_1302;
wire  signed [28:0] tmp_5_1_7_cast_fu_541_p1;
reg  signed [28:0] tmp_5_1_7_cast_reg_1309;
wire  signed [28:0] grp_fu_1055_p3;
reg  signed [28:0] tmp13_reg_1315;
wire  signed [28:0] grp_fu_962_p3;
reg  signed [28:0] tmp20_reg_1320;
wire  signed [28:0] grp_fu_907_p3;
reg  signed [28:0] tmp27_reg_1325;
wire  signed [28:0] tmp_6_6_1_fu_804_p2;
reg  signed [28:0] tmp_6_6_1_reg_1330;
wire  signed [28:0] tmp_6_6_3_fu_799_p2;
reg  signed [28:0] tmp_6_6_3_reg_1335;
wire  signed [28:0] tmp_6_6_5_fu_794_p2;
reg  signed [28:0] tmp_6_6_5_reg_1340;
wire  signed [28:0] tmp_6_7_1_fu_828_p2;
reg  signed [28:0] tmp_6_7_1_reg_1345;
wire  signed [28:0] tmp_6_7_3_fu_823_p2;
reg  signed [28:0] tmp_6_7_3_reg_1350;
wire  signed [28:0] tmp_6_7_5_fu_884_p2;
reg  signed [28:0] tmp_6_7_5_reg_1355;
wire  signed [28:0] tmp_5_1_cast_fu_544_p1;
reg  signed [28:0] tmp_5_1_cast_reg_1360;
wire  signed [28:0] tmp_5_1_2_cast_fu_547_p1;
reg  signed [28:0] tmp_5_1_2_cast_reg_1368;
wire  signed [28:0] tmp_5_1_4_cast_fu_550_p1;
reg  signed [28:0] tmp_5_1_4_cast_reg_1376;
reg   [15:0] tmp_3_1_reg_1384;
reg   [15:0] tmp_3_2_reg_1389;
wire  signed [28:0] grp_fu_978_p3;
reg  signed [28:0] tmp39_reg_1394;
wire  signed [28:0] grp_fu_833_p3;
reg  signed [28:0] tmp46_reg_1399;
wire  signed [28:0] grp_fu_870_p3;
reg  signed [28:0] tmp53_reg_1404;
reg   [15:0] tmp_3_3_reg_1409;
reg   [15:0] tmp_3_5_reg_1414;
reg   [15:0] tmp_3_6_reg_1419;
reg   [15:0] tmp_3_7_reg_1424;
reg    ap_reg_ppiten_pp0_it0_preg = 1'b0;
reg   [3:0] ap_reg_ptbuf_tmp_81;
wire   [63:0] tmp_40_fu_273_p1;
wire   [63:0] tmp_42_fu_287_p3;
wire   [63:0] tmp_24_fu_489_p1;
wire   [63:0] tmp_32_fu_500_p3;
wire   [63:0] tmp_26_fu_612_p3;
wire   [63:0] tmp_28_fu_626_p3;
wire   [63:0] tmp_30_fu_736_p3;
wire   [63:0] tmp_34_fu_750_p3;
wire   [63:0] tmp_36_fu_764_p3;
wire   [63:0] tmp_38_fu_778_p3;
wire   [4:0] tmp_39_fu_265_p3;
wire   [4:0] tmp_41_fu_281_p2;
wire   [28:0] tmp_6_0_1_fu_307_p3;
wire   [28:0] tmp_6_fu_299_p3;
wire   [28:0] tmp_6_0_3_fu_323_p3;
wire   [28:0] tmp_6_0_2_fu_315_p3;
wire   [28:0] tmp3_fu_363_p2;
wire   [28:0] tmp4_fu_369_p2;
wire   [28:0] tmp_6_0_5_fu_339_p3;
wire   [28:0] tmp_6_0_4_fu_331_p3;
wire   [28:0] tmp_6_0_7_fu_355_p3;
wire   [28:0] tmp_6_0_6_fu_347_p3;
wire   [28:0] tmp6_fu_381_p2;
wire   [28:0] tmp7_fu_393_p2;
wire   [28:0] tmp_fu_375_p2;
wire   [28:0] tmp5_fu_399_p2;
wire   [28:0] tmp_s_fu_405_p2;
wire   [28:0] tmp_7_4_1_fu_429_p2;
wire   [28:0] tmp_7_4_2_fu_435_p2;
wire   [28:0] tmp28_fu_441_p2;
wire  signed [16:0] tmp_5_1_6_cast_cast_fu_425_p1;
wire  signed [16:0] tmp_5_1_5_cast_cast_fu_421_p1;
wire   [16:0] tmp_6_4_s_fu_453_p2;
wire   [15:0] tmp_43_fu_463_p1;
wire  signed [28:0] tmp_6_4_557_cast_fu_459_p1;
wire   [28:0] p_shl_fu_467_p3;
wire   [6:0] tmp_31_fu_494_p2;
wire   [28:0] tmp32_fu_518_p2;
wire   [28:0] tmp_4_fu_522_p2;
wire  signed [28:0] grp_fu_1087_p3;
wire  signed [28:0] grp_fu_1079_p3;
wire  signed [28:0] grp_fu_1071_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp9_fu_553_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp12_fu_557_p2;
wire   [28:0] tmp_1_fu_561_p2;
wire  signed [28:0] grp_fu_1029_p3;
wire  signed [28:0] grp_fu_1021_p3;
wire  signed [28:0] grp_fu_1013_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp16_fu_577_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp19_fu_581_p2;
wire   [28:0] tmp_2_fu_585_p2;
wire  signed [27:0] grp_fu_861_p3;
wire   [6:0] tmp_25_fu_607_p2;
wire   [6:0] tmp_27_fu_621_p2;
wire  signed [28:0] grp_fu_937_p3;
wire  signed [28:0] grp_fu_930_p3;
wire  signed [28:0] grp_fu_923_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp23_fu_635_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp26_fu_639_p2;
wire   [28:0] tmp_3_10_fu_643_p2;
wire  signed [28:0] grp_fu_1006_p3;
wire  signed [28:0] grp_fu_999_p3;
wire  signed [28:0] grp_fu_992_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp35_fu_659_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp38_fu_663_p2;
wire   [28:0] tmp_5_fu_667_p2;
wire  signed [28:0] grp_fu_787_p3;
wire  signed [28:0] grp_fu_854_p3;
wire  signed [28:0] grp_fu_847_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp42_fu_683_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp45_fu_687_p2;
wire   [28:0] tmp_6_11_fu_691_p2;
wire  signed [28:0] grp_fu_877_p3;
wire  signed [28:0] grp_fu_816_p3;
wire  signed [28:0] grp_fu_809_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp49_fu_707_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp52_fu_711_p2;
wire   [28:0] tmp_7_fu_715_p2;
wire   [6:0] tmp_29_fu_731_p2;
wire   [6:0] tmp_33_fu_745_p2;
wire   [6:0] tmp_35_fu_759_p2;
wire   [6:0] tmp_37_fu_773_p2;
wire   [13:0] grp_fu_787_p0;
wire  signed [15:0] grp_fu_787_p1;
wire   [14:0] tmp_6_6_5_fu_794_p0;
wire  signed [15:0] tmp_6_6_5_fu_794_p1;
wire  signed [13:0] tmp_6_6_3_fu_799_p0;
wire  signed [15:0] tmp_6_6_3_fu_799_p1;
wire  signed [14:0] tmp_6_6_1_fu_804_p0;
wire  signed [15:0] tmp_6_6_1_fu_804_p1;
wire   [14:0] grp_fu_809_p0;
wire  signed [15:0] grp_fu_809_p1;
wire   [14:0] grp_fu_816_p0;
wire  signed [15:0] grp_fu_816_p1;
wire  signed [14:0] tmp_6_7_3_fu_823_p0;
wire  signed [15:0] tmp_6_7_3_fu_823_p1;
wire  signed [13:0] tmp_6_7_1_fu_828_p0;
wire  signed [15:0] tmp_6_7_1_fu_828_p1;
wire  signed [14:0] grp_fu_833_p0;
wire  signed [15:0] grp_fu_833_p1;
wire  signed [28:0] grp_fu_839_p3;
wire   [13:0] grp_fu_839_p0;
wire  signed [15:0] grp_fu_839_p1;
wire   [13:0] grp_fu_839_p2;
wire  signed [13:0] grp_fu_847_p0;
wire  signed [15:0] grp_fu_847_p1;
wire   [14:0] grp_fu_854_p0;
wire  signed [15:0] grp_fu_854_p1;
wire  signed [12:0] grp_fu_861_p0;
wire   [13:0] grp_fu_861_p2;
wire   [13:0] grp_fu_870_p0;
wire  signed [15:0] grp_fu_870_p1;
wire   [12:0] grp_fu_877_p0;
wire  signed [15:0] grp_fu_877_p1;
wire  signed [14:0] tmp_6_7_5_fu_884_p0;
wire  signed [15:0] tmp_6_7_5_fu_884_p1;
wire  signed [12:0] tmp_6_5_5_fu_889_p0;
wire  signed [15:0] tmp_6_5_5_fu_889_p1;
wire   [14:0] tmp_6_5_3_fu_895_p0;
wire  signed [15:0] tmp_6_5_3_fu_895_p1;
wire  signed [14:0] tmp_6_5_1_fu_901_p0;
wire  signed [15:0] tmp_6_5_1_fu_901_p1;
wire   [12:0] grp_fu_907_p0;
wire  signed [15:0] grp_fu_907_p1;
wire  signed [28:0] grp_fu_914_p3;
wire  signed [14:0] grp_fu_914_p0;
wire  signed [15:0] grp_fu_914_p1;
wire   [13:0] grp_fu_914_p2;
wire   [13:0] grp_fu_923_p0;
wire  signed [15:0] grp_fu_923_p1;
wire  signed [14:0] grp_fu_930_p0;
wire  signed [15:0] grp_fu_930_p1;
wire   [14:0] grp_fu_937_p0;
wire  signed [15:0] grp_fu_937_p1;
wire   [14:0] tmp_6_3_5_fu_944_p0;
wire  signed [15:0] tmp_6_3_5_fu_944_p1;
wire  signed [13:0] tmp_6_3_3_fu_950_p0;
wire  signed [15:0] tmp_6_3_3_fu_950_p1;
wire  signed [12:0] tmp_6_3_1_fu_956_p0;
wire  signed [15:0] tmp_6_3_1_fu_956_p1;
wire   [13:0] grp_fu_962_p0;
wire  signed [15:0] grp_fu_962_p1;
wire  signed [28:0] grp_fu_969_p3;
wire   [14:0] grp_fu_969_p0;
wire  signed [15:0] grp_fu_969_p1;
wire   [13:0] grp_fu_969_p2;
wire   [14:0] grp_fu_978_p0;
wire  signed [15:0] grp_fu_978_p1;
wire  signed [28:0] grp_fu_984_p3;
wire  signed [13:0] grp_fu_984_p0;
wire  signed [15:0] grp_fu_984_p1;
wire   [13:0] grp_fu_984_p2;
wire  signed [14:0] grp_fu_992_p0;
wire  signed [15:0] grp_fu_992_p1;
wire   [12:0] grp_fu_999_p0;
wire  signed [15:0] grp_fu_999_p1;
wire   [13:0] grp_fu_1006_p0;
wire  signed [15:0] grp_fu_1006_p1;
wire  signed [14:0] grp_fu_1013_p0;
wire  signed [15:0] grp_fu_1013_p1;
wire  signed [13:0] grp_fu_1021_p0;
wire  signed [15:0] grp_fu_1021_p1;
wire   [14:0] grp_fu_1029_p0;
wire  signed [15:0] grp_fu_1029_p1;
wire  signed [13:0] tmp_6_2_5_fu_1037_p0;
wire  signed [15:0] tmp_6_2_5_fu_1037_p1;
wire  signed [14:0] tmp_6_2_3_fu_1043_p0;
wire  signed [15:0] tmp_6_2_3_fu_1043_p1;
wire   [13:0] tmp_6_2_1_fu_1049_p0;
wire  signed [15:0] tmp_6_2_1_fu_1049_p1;
wire  signed [14:0] grp_fu_1055_p0;
wire  signed [15:0] grp_fu_1055_p1;
wire  signed [28:0] grp_fu_1062_p3;
wire  signed [14:0] grp_fu_1062_p0;
wire  signed [15:0] grp_fu_1062_p1;
wire   [13:0] grp_fu_1062_p2;
wire  signed [12:0] grp_fu_1071_p0;
wire  signed [15:0] grp_fu_1071_p1;
wire   [13:0] grp_fu_1079_p0;
wire  signed [15:0] grp_fu_1079_p1;
wire   [14:0] grp_fu_1087_p0;
wire  signed [15:0] grp_fu_1087_p1;
wire  signed [13:0] tmp_6_1_5_fu_1095_p0;
wire  signed [15:0] tmp_6_1_5_fu_1095_p1;
wire   [12:0] tmp_6_1_3_fu_1101_p0;
wire  signed [15:0] tmp_6_1_3_fu_1101_p1;
wire   [14:0] tmp_6_1_1_fu_1107_p0;
wire  signed [15:0] tmp_6_1_1_fu_1107_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;


dct_mac_muladd_14ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_29s_29_1_U6(
    .din0( grp_fu_787_p0 ),
    .din1( grp_fu_787_p1 ),
    .din2( tmp_6_6_1_reg_1330 ),
    .dout( grp_fu_787_p3 )
);

dct_mul_mul_15ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15ns_16s_29_1_U7(
    .din0( tmp_6_6_5_fu_794_p0 ),
    .din1( tmp_6_6_5_fu_794_p1 ),
    .dout( tmp_6_6_5_fu_794_p2 )
);

dct_mul_mul_14s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14s_16s_29_1_U8(
    .din0( tmp_6_6_3_fu_799_p0 ),
    .din1( tmp_6_6_3_fu_799_p1 ),
    .dout( tmp_6_6_3_fu_799_p2 )
);

dct_mul_mul_15s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_16s_29_1_U9(
    .din0( tmp_6_6_1_fu_804_p0 ),
    .din1( tmp_6_6_1_fu_804_p1 ),
    .dout( tmp_6_6_1_fu_804_p2 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U10(
    .din0( grp_fu_809_p0 ),
    .din1( grp_fu_809_p1 ),
    .din2( tmp_6_7_5_reg_1355 ),
    .dout( grp_fu_809_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U11(
    .din0( grp_fu_816_p0 ),
    .din1( grp_fu_816_p1 ),
    .din2( tmp_6_7_3_reg_1350 ),
    .dout( grp_fu_816_p3 )
);

dct_mul_mul_15s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_16s_29_1_U12(
    .din0( tmp_6_7_3_fu_823_p0 ),
    .din1( tmp_6_7_3_fu_823_p1 ),
    .dout( tmp_6_7_3_fu_823_p2 )
);

dct_mul_mul_14s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14s_16s_29_1_U13(
    .din0( tmp_6_7_1_fu_828_p0 ),
    .din1( tmp_6_7_1_fu_828_p1 ),
    .dout( tmp_6_7_1_fu_828_p2 )
);

dct_mac_muladd_15s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_29s_29_1_U14(
    .din0( grp_fu_833_p0 ),
    .din1( grp_fu_833_p1 ),
    .din2( grp_fu_839_p3 ),
    .dout( grp_fu_833_p3 )
);

dct_mac_muladd_14ns_16s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_14ns_29_1_U15(
    .din0( grp_fu_839_p0 ),
    .din1( grp_fu_839_p1 ),
    .din2( grp_fu_839_p2 ),
    .dout( grp_fu_839_p3 )
);

dct_mac_muladd_14s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14s_16s_29s_29_1_U16(
    .din0( grp_fu_847_p0 ),
    .din1( grp_fu_847_p1 ),
    .din2( tmp_6_6_5_reg_1340 ),
    .dout( grp_fu_847_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U17(
    .din0( grp_fu_854_p0 ),
    .din1( grp_fu_854_p1 ),
    .din2( tmp_6_6_3_reg_1335 ),
    .dout( grp_fu_854_p3 )
);

dct_mac_muladd_13s_16s_14ns_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 28 ))
dct_mac_muladd_13s_16s_14ns_28_1_U18(
    .din0( grp_fu_861_p0 ),
    .din1( src3_load_1_reg_1188 ),
    .din2( grp_fu_861_p2 ),
    .dout( grp_fu_861_p3 )
);

dct_mac_muladd_14ns_16s_28s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_28s_29_1_U19(
    .din0( grp_fu_870_p0 ),
    .din1( grp_fu_870_p1 ),
    .din2( grp_fu_861_p3 ),
    .dout( grp_fu_870_p3 )
);

dct_mac_muladd_13ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_13ns_16s_29s_29_1_U20(
    .din0( grp_fu_877_p0 ),
    .din1( grp_fu_877_p1 ),
    .din2( tmp_6_7_1_reg_1345 ),
    .dout( grp_fu_877_p3 )
);

dct_mul_mul_15s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_16s_29_1_U21(
    .din0( tmp_6_7_5_fu_884_p0 ),
    .din1( tmp_6_7_5_fu_884_p1 ),
    .dout( tmp_6_7_5_fu_884_p2 )
);

dct_mul_mul_13s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_13s_16s_29_1_U22(
    .din0( tmp_6_5_5_fu_889_p0 ),
    .din1( tmp_6_5_5_fu_889_p1 ),
    .dout( tmp_6_5_5_fu_889_p2 )
);

dct_mul_mul_15ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15ns_16s_29_1_U23(
    .din0( tmp_6_5_3_fu_895_p0 ),
    .din1( tmp_6_5_3_fu_895_p1 ),
    .dout( tmp_6_5_3_fu_895_p2 )
);

dct_mul_mul_15s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_16s_29_1_U24(
    .din0( tmp_6_5_1_fu_901_p0 ),
    .din1( tmp_6_5_1_fu_901_p1 ),
    .dout( tmp_6_5_1_fu_901_p2 )
);

dct_mac_muladd_13ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_13ns_16s_29s_29_1_U25(
    .din0( grp_fu_907_p0 ),
    .din1( grp_fu_907_p1 ),
    .din2( grp_fu_914_p3 ),
    .dout( grp_fu_907_p3 )
);

dct_mac_muladd_15s_16s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_14ns_29_1_U26(
    .din0( grp_fu_914_p0 ),
    .din1( grp_fu_914_p1 ),
    .din2( grp_fu_914_p2 ),
    .dout( grp_fu_914_p3 )
);

dct_mac_muladd_14ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_29s_29_1_U27(
    .din0( grp_fu_923_p0 ),
    .din1( grp_fu_923_p1 ),
    .din2( tmp_6_3_5_reg_1282 ),
    .dout( grp_fu_923_p3 )
);

dct_mac_muladd_15s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_29s_29_1_U28(
    .din0( grp_fu_930_p0 ),
    .din1( grp_fu_930_p1 ),
    .din2( tmp_6_3_3_reg_1277 ),
    .dout( grp_fu_930_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U29(
    .din0( grp_fu_937_p0 ),
    .din1( grp_fu_937_p1 ),
    .din2( tmp_6_3_1_reg_1272 ),
    .dout( grp_fu_937_p3 )
);

dct_mul_mul_15ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15ns_16s_29_1_U30(
    .din0( tmp_6_3_5_fu_944_p0 ),
    .din1( tmp_6_3_5_fu_944_p1 ),
    .dout( tmp_6_3_5_fu_944_p2 )
);

dct_mul_mul_14s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14s_16s_29_1_U31(
    .din0( tmp_6_3_3_fu_950_p0 ),
    .din1( tmp_6_3_3_fu_950_p1 ),
    .dout( tmp_6_3_3_fu_950_p2 )
);

dct_mul_mul_13s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_13s_16s_29_1_U32(
    .din0( tmp_6_3_1_fu_956_p0 ),
    .din1( tmp_6_3_1_fu_956_p1 ),
    .dout( tmp_6_3_1_fu_956_p2 )
);

dct_mac_muladd_14ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_29s_29_1_U33(
    .din0( grp_fu_962_p0 ),
    .din1( grp_fu_962_p1 ),
    .din2( grp_fu_969_p3 ),
    .dout( grp_fu_962_p3 )
);

dct_mac_muladd_15ns_16s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_14ns_29_1_U34(
    .din0( grp_fu_969_p0 ),
    .din1( grp_fu_969_p1 ),
    .din2( grp_fu_969_p2 ),
    .dout( grp_fu_969_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U35(
    .din0( grp_fu_978_p0 ),
    .din1( grp_fu_978_p1 ),
    .din2( grp_fu_984_p3 ),
    .dout( grp_fu_978_p3 )
);

dct_mac_muladd_14s_16s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14s_16s_14ns_29_1_U36(
    .din0( grp_fu_984_p0 ),
    .din1( grp_fu_984_p1 ),
    .din2( grp_fu_984_p2 ),
    .dout( grp_fu_984_p3 )
);

dct_mac_muladd_15s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_29s_29_1_U37(
    .din0( grp_fu_992_p0 ),
    .din1( grp_fu_992_p1 ),
    .din2( tmp_6_5_5_reg_1297 ),
    .dout( grp_fu_992_p3 )
);

dct_mac_muladd_13ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_13ns_16s_29s_29_1_U38(
    .din0( grp_fu_999_p0 ),
    .din1( grp_fu_999_p1 ),
    .din2( tmp_6_5_3_reg_1292 ),
    .dout( grp_fu_999_p3 )
);

dct_mac_muladd_14ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_29s_29_1_U39(
    .din0( grp_fu_1006_p0 ),
    .din1( grp_fu_1006_p1 ),
    .din2( tmp_6_5_1_reg_1287 ),
    .dout( grp_fu_1006_p3 )
);

dct_mac_muladd_15s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_29s_29_1_U40(
    .din0( grp_fu_1013_p0 ),
    .din1( grp_fu_1013_p1 ),
    .din2( tmp_6_2_5_reg_1267 ),
    .dout( grp_fu_1013_p3 )
);

dct_mac_muladd_14s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14s_16s_29s_29_1_U41(
    .din0( grp_fu_1021_p0 ),
    .din1( grp_fu_1021_p1 ),
    .din2( tmp_6_2_3_reg_1262 ),
    .dout( grp_fu_1021_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U42(
    .din0( grp_fu_1029_p0 ),
    .din1( grp_fu_1029_p1 ),
    .din2( tmp_6_2_1_reg_1257 ),
    .dout( grp_fu_1029_p3 )
);

dct_mul_mul_14s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14s_16s_29_1_U43(
    .din0( tmp_6_2_5_fu_1037_p0 ),
    .din1( tmp_6_2_5_fu_1037_p1 ),
    .dout( tmp_6_2_5_fu_1037_p2 )
);

dct_mul_mul_15s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_16s_29_1_U44(
    .din0( tmp_6_2_3_fu_1043_p0 ),
    .din1( tmp_6_2_3_fu_1043_p1 ),
    .dout( tmp_6_2_3_fu_1043_p2 )
);

dct_mul_mul_14ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14ns_16s_29_1_U45(
    .din0( tmp_6_2_1_fu_1049_p0 ),
    .din1( tmp_6_2_1_fu_1049_p1 ),
    .dout( tmp_6_2_1_fu_1049_p2 )
);

dct_mac_muladd_15s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_29s_29_1_U46(
    .din0( grp_fu_1055_p0 ),
    .din1( grp_fu_1055_p1 ),
    .din2( grp_fu_1062_p3 ),
    .dout( grp_fu_1055_p3 )
);

dct_mac_muladd_15s_16s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15s_16s_14ns_29_1_U47(
    .din0( grp_fu_1062_p0 ),
    .din1( grp_fu_1062_p1 ),
    .din2( grp_fu_1062_p2 ),
    .dout( grp_fu_1062_p3 )
);

dct_mac_muladd_13s_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_13s_16s_29s_29_1_U48(
    .din0( grp_fu_1071_p0 ),
    .din1( grp_fu_1071_p1 ),
    .din2( tmp_6_1_5_reg_1252 ),
    .dout( grp_fu_1071_p3 )
);

dct_mac_muladd_14ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14ns_16s_29s_29_1_U49(
    .din0( grp_fu_1079_p0 ),
    .din1( grp_fu_1079_p1 ),
    .din2( tmp_6_1_3_reg_1241 ),
    .dout( grp_fu_1079_p3 )
);

dct_mac_muladd_15ns_16s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15ns_16s_29s_29_1_U50(
    .din0( grp_fu_1087_p0 ),
    .din1( grp_fu_1087_p1 ),
    .din2( tmp_6_1_1_reg_1230 ),
    .dout( grp_fu_1087_p3 )
);

dct_mul_mul_14s_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_14s_16s_29_1_U51(
    .din0( tmp_6_1_5_fu_1095_p0 ),
    .din1( tmp_6_1_5_fu_1095_p1 ),
    .dout( tmp_6_1_5_fu_1095_p2 )
);

dct_mul_mul_13ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_13ns_16s_29_1_U52(
    .din0( tmp_6_1_3_fu_1101_p0 ),
    .din1( tmp_6_1_3_fu_1101_p1 ),
    .dout( tmp_6_1_3_fu_1101_p2 )
);

dct_mul_mul_15ns_16s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15ns_16s_29_1_U53(
    .din0( tmp_6_1_1_fu_1107_p0 ),
    .din1( tmp_6_1_1_fu_1107_p1 ),
    .dout( tmp_6_1_1_fu_1107_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0_preg assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0_preg
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0_preg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
            ap_reg_ppiten_pp0_it0_preg <= ap_start;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        ap_reg_ppstg_tmp_23_reg_1214_pp0_it1[6 : 3] <= tmp_23_reg_1214[6 : 3];
        tmp_23_reg_1214[6 : 3] <= tmp_23_fu_481_p3[6 : 3];
        tmp_5_1_1_cast_reg_1224 <= tmp_5_1_1_cast_fu_509_p1;
        tmp_5_1_3_cast_reg_1235 <= tmp_5_1_3_cast_fu_512_p1;
        tmp_5_1_5_cast_reg_1246 <= tmp_5_1_5_cast_fu_515_p1;
        tmp_6_1_1_reg_1230 <= tmp_6_1_1_fu_1107_p2;
        tmp_6_1_3_reg_1241 <= tmp_6_1_3_fu_1101_p2;
        tmp_6_1_5_reg_1252 <= tmp_6_1_5_fu_1095_p2;
        tmp_6_2_1_reg_1257 <= tmp_6_2_1_fu_1049_p2;
        tmp_6_2_3_reg_1262 <= tmp_6_2_3_fu_1043_p2;
        tmp_6_2_5_reg_1267 <= tmp_6_2_5_fu_1037_p2;
        tmp_6_3_1_reg_1272 <= tmp_6_3_1_fu_956_p2;
        tmp_6_3_3_reg_1277 <= tmp_6_3_3_fu_950_p2;
        tmp_6_3_5_reg_1282 <= tmp_6_3_5_fu_944_p2;
        tmp_6_5_1_reg_1287 <= tmp_6_5_1_fu_901_p2;
        tmp_6_5_3_reg_1292 <= tmp_6_5_3_fu_895_p2;
        tmp_6_5_5_reg_1297 <= tmp_6_5_5_fu_889_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        ap_reg_ptbuf_tmp_81 <= tmp_81;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        src1_load_1_reg_1168 <= src1_q1;
        src1_load_reg_1163 <= src1_q0;
        src2_load_1_reg_1178 <= src2_q1;
        src2_load_reg_1173 <= src2_q0;
        src3_load_1_reg_1188 <= src3_q1;
        src3_load_reg_1183 <= src3_q0;
        src_load_1_reg_1158 <= src_q1;
        src_load_reg_1153 <= src_q0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce))) begin
        tmp13_reg_1315 <= grp_fu_1055_p3;
        tmp20_reg_1320 <= grp_fu_962_p3;
        tmp27_reg_1325 <= grp_fu_907_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        tmp1_reg_1194[28 : 13] <= tmp1_fu_387_p2[28 : 13];
        tmp29_reg_1204[28 : 13] <= tmp29_fu_447_p2[28 : 13];
        tmp30_reg_1209 <= tmp30_fu_475_p2;
        tmp_3_3_reg_1409 <= {{tmp_3_10_fu_643_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_3_5_reg_1414 <= {{tmp_5_fu_667_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_3_6_reg_1419 <= {{tmp_6_11_fu_691_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_3_7_reg_1424 <= {{tmp_7_fu_715_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_3_reg_1199 <= {{tmp_s_fu_405_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        tmp39_reg_1394 <= grp_fu_978_p3;
        tmp46_reg_1399 <= grp_fu_833_p3;
        tmp53_reg_1404 <= grp_fu_870_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        tmp_3_1_reg_1384 <= {{tmp_1_fu_561_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_3_2_reg_1389 <= {{tmp_2_fu_585_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
        tmp_5_1_2_cast_reg_1368 <= tmp_5_1_2_cast_fu_547_p1;
        tmp_5_1_4_cast_reg_1376 <= tmp_5_1_4_cast_fu_550_p1;
        tmp_5_1_cast_reg_1360 <= tmp_5_1_cast_fu_544_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce))) begin
        tmp_5_1_6_cast_reg_1302 <= tmp_5_1_6_cast_fu_538_p1;
        tmp_5_1_7_cast_reg_1309 <= tmp_5_1_7_cast_fu_541_p1;
        tmp_6_6_1_reg_1330 <= tmp_6_6_1_fu_804_p2;
        tmp_6_6_3_reg_1335 <= tmp_6_6_3_fu_799_p2;
        tmp_6_6_5_reg_1340 <= tmp_6_6_5_fu_794_p2;
        tmp_6_7_1_reg_1345 <= tmp_6_7_1_fu_828_p2;
        tmp_6_7_3_reg_1350 <= tmp_6_7_3_fu_823_p2;
        tmp_6_7_5_reg_1355 <= tmp_6_7_5_fu_884_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it2 or ap_ce) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_ce) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        ap_reg_ppiten_pp0_it0 = ap_start;
    end else begin
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. ///
always @ (ap_sig_bdd_22) begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_1 assign process. ///
always @ (ap_sig_bdd_129) begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_2 assign process. ///
always @ (ap_sig_bdd_156) begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_3 assign process. ///
always @ (ap_sig_bdd_46) begin
    if (ap_sig_bdd_46) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_pprstidle_pp0 assign process. ///
always @ (ap_start or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

/// dst_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or tmp_24_fu_489_p1 or tmp_26_fu_612_p3 or tmp_30_fu_736_p3 or tmp_36_fu_764_p3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        dst_address0 = tmp_36_fu_764_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        dst_address0 = tmp_30_fu_736_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        dst_address0 = tmp_26_fu_612_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        dst_address0 = tmp_24_fu_489_p1;
    end else begin
        dst_address0 = 'bx;
    end
end

/// dst_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or tmp_32_fu_500_p3 or tmp_28_fu_626_p3 or tmp_34_fu_750_p3 or tmp_38_fu_778_p3) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        dst_address1 = tmp_38_fu_778_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        dst_address1 = tmp_34_fu_750_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        dst_address1 = tmp_28_fu_626_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        dst_address1 = tmp_32_fu_500_p3;
    end else begin
        dst_address1 = 'bx;
    end
end

/// dst_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        dst_ce0 = ap_const_logic_1;
    end else begin
        dst_ce0 = ap_const_logic_0;
    end
end

/// dst_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        dst_ce1 = ap_const_logic_1;
    end else begin
        dst_ce1 = ap_const_logic_0;
    end
end

/// dst_d0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or tmp_3_reg_1199 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or tmp_3_1_reg_1384 or tmp_3_3_reg_1409 or tmp_3_6_reg_1419) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        dst_d0 = tmp_3_6_reg_1419;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        dst_d0 = tmp_3_3_reg_1409;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        dst_d0 = tmp_3_1_reg_1384;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        dst_d0 = tmp_3_reg_1199;
    end else begin
        dst_d0 = 'bx;
    end
end

/// dst_d1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or tmp_3_2_reg_1389 or tmp_3_5_reg_1414 or tmp_3_7_reg_1424 or tmp_4_fu_522_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        dst_d1 = tmp_3_7_reg_1424;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        dst_d1 = tmp_3_5_reg_1414;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        dst_d1 = tmp_3_2_reg_1389;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        dst_d1 = {{tmp_4_fu_522_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
    end else begin
        dst_d1 = 'bx;
    end
end

/// dst_we0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        dst_we0 = ap_const_logic_1;
    end else begin
        dst_we0 = ap_const_logic_0;
    end
end

/// dst_we1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        dst_we1 = ap_const_logic_1;
    end else begin
        dst_we1 = ap_const_logic_0;
    end
end

/// src1_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src1_ce0 = ap_const_logic_1;
    end else begin
        src1_ce0 = ap_const_logic_0;
    end
end

/// src1_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src1_ce1 = ap_const_logic_1;
    end else begin
        src1_ce1 = ap_const_logic_0;
    end
end

/// src2_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src2_ce0 = ap_const_logic_1;
    end else begin
        src2_ce0 = ap_const_logic_0;
    end
end

/// src2_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src2_ce1 = ap_const_logic_1;
    end else begin
        src2_ce1 = ap_const_logic_0;
    end
end

/// src3_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src3_ce0 = ap_const_logic_1;
    end else begin
        src3_ce0 = ap_const_logic_0;
    end
end

/// src3_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src3_ce1 = ap_const_logic_1;
    end else begin
        src3_ce1 = ap_const_logic_0;
    end
end

/// src_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src_ce0 = ap_const_logic_1;
    end else begin
        src_ce0 = ap_const_logic_0;
    end
end

/// src_ce1 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        src_ce1 = ap_const_logic_1;
    end else begin
        src_ce1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_ce or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            if ((~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & ~(ap_const_logic_1 == ap_sig_pprstidle_pp0) & ~((ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_0 == ap_start)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end else if ((~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & (ap_const_logic_1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end
        end
        ap_ST_pp0_stg1_fsm_1 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end
        end
        ap_ST_pp0_stg2_fsm_2 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            end
        end
        ap_ST_pp0_stg3_fsm_3 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_129 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_46 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_46 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign grp_fu_1006_p0 = ap_const_lv29_1924;
assign grp_fu_1006_p1 = tmp_5_1_cast_reg_1360;
assign grp_fu_1013_p0 = ap_const_lv29_1FFFD631;
assign grp_fu_1013_p1 = tmp_5_1_4_cast_fu_550_p1;
assign grp_fu_1021_p0 = ap_const_lv29_1FFFEEAF;
assign grp_fu_1021_p1 = tmp_5_1_2_cast_fu_547_p1;
assign grp_fu_1029_p0 = ap_const_lv29_29CF;
assign grp_fu_1029_p1 = tmp_5_1_cast_fu_544_p1;
assign grp_fu_1055_p0 = ap_const_lv29_1FFFDA60;
assign grp_fu_1055_p1 = tmp_5_1_6_cast_fu_538_p1;
assign grp_fu_1062_p0 = ap_const_lv29_1FFFD39E;
assign grp_fu_1062_p1 = tmp_5_1_7_cast_fu_541_p1;
assign grp_fu_1062_p2 = ap_const_lv29_1000;
assign grp_fu_1071_p0 = ap_const_lv29_1FFFF72C;
assign grp_fu_1071_p1 = tmp_5_1_4_cast_fu_550_p1;
assign grp_fu_1079_p0 = ap_const_lv29_1924;
assign grp_fu_1079_p1 = tmp_5_1_2_cast_fu_547_p1;
assign grp_fu_1087_p0 = ap_const_lv29_2C63;
assign grp_fu_1087_p1 = tmp_5_1_cast_fu_544_p1;
assign grp_fu_787_p0 = ap_const_lv29_1151;
assign grp_fu_787_p1 = tmp_5_1_cast_reg_1360;
assign grp_fu_809_p0 = ap_const_lv29_2C63;
assign grp_fu_809_p1 = tmp_5_1_4_cast_reg_1376;
assign grp_fu_816_p0 = ap_const_lv29_25A1;
assign grp_fu_816_p1 = tmp_5_1_2_cast_reg_1368;
assign grp_fu_833_p0 = ap_const_lv29_1FFFD631;
assign grp_fu_833_p1 = tmp_5_1_6_cast_reg_1302;
assign grp_fu_839_p0 = ap_const_lv29_1151;
assign grp_fu_839_p1 = tmp_5_1_7_cast_reg_1309;
assign grp_fu_839_p2 = ap_const_lv29_1000;
assign grp_fu_847_p0 = ap_const_lv29_1FFFEEAF;
assign grp_fu_847_p1 = tmp_5_1_4_cast_reg_1376;
assign grp_fu_854_p0 = ap_const_lv29_29CF;
assign grp_fu_854_p1 = tmp_5_1_2_cast_reg_1368;
assign grp_fu_861_p0 = ap_const_lv28_FFFF72C;
assign grp_fu_861_p2 = ap_const_lv28_1000;
assign grp_fu_870_p0 = ap_const_lv29_1924;
assign grp_fu_870_p1 = tmp_5_1_6_cast_reg_1302;
assign grp_fu_877_p0 = ap_const_lv29_8D4;
assign grp_fu_877_p1 = tmp_5_1_cast_reg_1360;
assign grp_fu_907_p0 = ap_const_lv29_8D4;
assign grp_fu_907_p1 = tmp_5_1_6_cast_fu_538_p1;
assign grp_fu_914_p0 = ap_const_lv29_1FFFDA60;
assign grp_fu_914_p1 = tmp_5_1_7_cast_fu_541_p1;
assign grp_fu_914_p2 = ap_const_lv29_1000;
assign grp_fu_923_p0 = ap_const_lv29_1924;
assign grp_fu_923_p1 = tmp_5_1_4_cast_reg_1376;
assign grp_fu_930_p0 = ap_const_lv29_1FFFD39E;
assign grp_fu_930_p1 = tmp_5_1_2_cast_reg_1368;
assign grp_fu_937_p0 = ap_const_lv29_25A1;
assign grp_fu_937_p1 = tmp_5_1_cast_reg_1360;
assign grp_fu_962_p0 = ap_const_lv29_1151;
assign grp_fu_962_p1 = tmp_5_1_6_cast_fu_538_p1;
assign grp_fu_969_p0 = ap_const_lv29_29CF;
assign grp_fu_969_p1 = tmp_5_1_7_cast_fu_541_p1;
assign grp_fu_969_p2 = ap_const_lv29_1000;
assign grp_fu_978_p0 = ap_const_lv29_2C63;
assign grp_fu_978_p1 = tmp_5_1_6_cast_reg_1302;
assign grp_fu_984_p0 = ap_const_lv29_1FFFE6DC;
assign grp_fu_984_p1 = tmp_5_1_7_cast_reg_1309;
assign grp_fu_984_p2 = ap_const_lv29_1000;
assign grp_fu_992_p0 = ap_const_lv29_1FFFDA60;
assign grp_fu_992_p1 = tmp_5_1_4_cast_reg_1376;
assign grp_fu_999_p0 = ap_const_lv29_8D4;
assign grp_fu_999_p1 = tmp_5_1_2_cast_reg_1368;
assign p_shl_fu_467_p3 = {{tmp_43_fu_463_p1}, {ap_const_lv13_0}};
assign src1_address0 = tmp_40_fu_273_p1;
assign src1_address1 = tmp_42_fu_287_p3;
assign src2_address0 = tmp_40_fu_273_p1;
assign src2_address1 = tmp_42_fu_287_p3;
assign src3_address0 = tmp_40_fu_273_p1;
assign src3_address1 = tmp_42_fu_287_p3;
assign src_address0 = tmp_40_fu_273_p1;
assign src_address1 = tmp_42_fu_287_p3;
assign tmp12_fu_557_p2 = ($signed(grp_fu_1071_p3) + $signed(tmp13_reg_1315));
assign tmp16_fu_577_p2 = ($signed(grp_fu_1029_p3) + $signed(grp_fu_1021_p3));
assign tmp19_fu_581_p2 = ($signed(grp_fu_1013_p3) + $signed(tmp20_reg_1320));
assign tmp1_fu_387_p2 = (tmp_6_0_7_fu_355_p3 | ap_const_lv29_1000);
assign tmp23_fu_635_p2 = ($signed(grp_fu_937_p3) + $signed(grp_fu_930_p3));
assign tmp26_fu_639_p2 = ($signed(grp_fu_923_p3) + $signed(tmp27_reg_1325));
assign tmp28_fu_441_p2 = (tmp_6_0_4_fu_331_p3 + tmp_6_0_3_fu_323_p3);
assign tmp29_fu_447_p2 = (tmp_7_4_2_fu_435_p2 + tmp28_fu_441_p2);
assign tmp30_fu_475_p2 = ($signed(tmp_6_4_557_cast_fu_459_p1) - $signed(p_shl_fu_467_p3));
assign tmp32_fu_518_p2 = (tmp30_reg_1209 + tmp1_reg_1194);
assign tmp35_fu_659_p2 = ($signed(grp_fu_1006_p3) + $signed(grp_fu_999_p3));
assign tmp38_fu_663_p2 = ($signed(grp_fu_992_p3) + $signed(tmp39_reg_1394));
assign tmp3_fu_363_p2 = (tmp_6_0_1_fu_307_p3 + tmp_6_fu_299_p3);
assign tmp42_fu_683_p2 = ($signed(grp_fu_787_p3) + $signed(grp_fu_854_p3));
assign tmp45_fu_687_p2 = ($signed(grp_fu_847_p3) + $signed(tmp46_reg_1399));
assign tmp49_fu_707_p2 = ($signed(grp_fu_877_p3) + $signed(grp_fu_816_p3));
assign tmp4_fu_369_p2 = (tmp_6_0_3_fu_323_p3 + tmp_6_0_2_fu_315_p3);
assign tmp52_fu_711_p2 = ($signed(grp_fu_809_p3) + $signed(tmp53_reg_1404));
assign tmp5_fu_399_p2 = (tmp6_fu_381_p2 + tmp7_fu_393_p2);
assign tmp6_fu_381_p2 = (tmp_6_0_5_fu_339_p3 + tmp_6_0_4_fu_331_p3);
assign tmp7_fu_393_p2 = (tmp_6_0_6_fu_347_p3 + tmp1_fu_387_p2);
assign tmp9_fu_553_p2 = ($signed(grp_fu_1087_p3) + $signed(grp_fu_1079_p3));
assign tmp_1_fu_561_p2 = (tmp9_fu_553_p2 + tmp12_fu_557_p2);
assign tmp_23_fu_481_p3 = {{ap_reg_ptbuf_tmp_81}, {ap_const_lv3_0}};
assign tmp_24_fu_489_p1 = tmp_23_fu_481_p3;
assign tmp_25_fu_607_p2 = (tmp_23_reg_1214 | ap_const_lv7_1);
assign tmp_26_fu_612_p3 = {{ap_const_lv57_0}, {tmp_25_fu_607_p2}};
assign tmp_27_fu_621_p2 = (tmp_23_reg_1214 | ap_const_lv7_2);
assign tmp_28_fu_626_p3 = {{ap_const_lv57_0}, {tmp_27_fu_621_p2}};
assign tmp_29_fu_731_p2 = (ap_reg_ppstg_tmp_23_reg_1214_pp0_it1 | ap_const_lv7_3);
assign tmp_2_fu_585_p2 = (tmp16_fu_577_p2 + tmp19_fu_581_p2);
assign tmp_30_fu_736_p3 = {{ap_const_lv57_0}, {tmp_29_fu_731_p2}};
assign tmp_31_fu_494_p2 = (tmp_23_fu_481_p3 | ap_const_lv7_4);
assign tmp_32_fu_500_p3 = {{ap_const_lv57_0}, {tmp_31_fu_494_p2}};
assign tmp_33_fu_745_p2 = (ap_reg_ppstg_tmp_23_reg_1214_pp0_it1 | ap_const_lv7_5);
assign tmp_34_fu_750_p3 = {{ap_const_lv57_0}, {tmp_33_fu_745_p2}};
assign tmp_35_fu_759_p2 = (ap_reg_ppstg_tmp_23_reg_1214_pp0_it1 | ap_const_lv7_6);
assign tmp_36_fu_764_p3 = {{ap_const_lv57_0}, {tmp_35_fu_759_p2}};
assign tmp_37_fu_773_p2 = (ap_reg_ppstg_tmp_23_reg_1214_pp0_it1 | ap_const_lv7_7);
assign tmp_38_fu_778_p3 = {{ap_const_lv57_0}, {tmp_37_fu_773_p2}};
assign tmp_39_fu_265_p3 = {{tmp_8}, {ap_const_lv1_0}};
assign tmp_3_10_fu_643_p2 = (tmp23_fu_635_p2 + tmp26_fu_639_p2);
assign tmp_40_fu_273_p1 = tmp_39_fu_265_p3;
assign tmp_41_fu_281_p2 = (tmp_39_fu_265_p3 | ap_const_lv5_1);
assign tmp_42_fu_287_p3 = {{ap_const_lv59_0}, {tmp_41_fu_281_p2}};
assign tmp_43_fu_463_p1 = tmp_6_4_s_fu_453_p2[15:0];
assign tmp_4_fu_522_p2 = (tmp29_reg_1204 + tmp32_fu_518_p2);
assign tmp_5_1_1_cast_fu_509_p1 = $signed(src_load_1_reg_1158);
assign tmp_5_1_2_cast_fu_547_p1 = $signed(src1_load_reg_1163);
assign tmp_5_1_3_cast_fu_512_p1 = $signed(src1_load_1_reg_1168);
assign tmp_5_1_4_cast_fu_550_p1 = $signed(src2_load_reg_1173);
assign tmp_5_1_5_cast_cast_fu_421_p1 = $signed(src2_q1);
assign tmp_5_1_5_cast_fu_515_p1 = $signed(src2_load_1_reg_1178);
assign tmp_5_1_6_cast_cast_fu_425_p1 = $signed(src3_q0);
assign tmp_5_1_6_cast_fu_538_p1 = $signed(src3_load_reg_1183);
assign tmp_5_1_7_cast_fu_541_p1 = src3_load_1_reg_1188;
assign tmp_5_1_cast_fu_544_p1 = $signed(src_load_reg_1153);
assign tmp_5_fu_667_p2 = (tmp35_fu_659_p2 + tmp38_fu_663_p2);
assign tmp_6_0_1_fu_307_p3 = {{src_q1}, {ap_const_lv13_0}};
assign tmp_6_0_2_fu_315_p3 = {{src1_q0}, {ap_const_lv13_0}};
assign tmp_6_0_3_fu_323_p3 = {{src1_q1}, {ap_const_lv13_0}};
assign tmp_6_0_4_fu_331_p3 = {{src2_q0}, {ap_const_lv13_0}};
assign tmp_6_0_5_fu_339_p3 = {{src2_q1}, {ap_const_lv13_0}};
assign tmp_6_0_6_fu_347_p3 = {{src3_q0}, {ap_const_lv13_0}};
assign tmp_6_0_7_fu_355_p3 = {{src3_q1}, {ap_const_lv13_0}};
assign tmp_6_11_fu_691_p2 = (tmp42_fu_683_p2 + tmp45_fu_687_p2);
assign tmp_6_1_1_fu_1107_p0 = ap_const_lv29_25A1;
assign tmp_6_1_1_fu_1107_p1 = tmp_5_1_1_cast_fu_509_p1;
assign tmp_6_1_3_fu_1101_p0 = ap_const_lv29_8D4;
assign tmp_6_1_3_fu_1101_p1 = tmp_5_1_3_cast_fu_512_p1;
assign tmp_6_1_5_fu_1095_p0 = ap_const_lv29_1FFFE6DC;
assign tmp_6_1_5_fu_1095_p1 = tmp_5_1_5_cast_fu_515_p1;
assign tmp_6_2_1_fu_1049_p0 = ap_const_lv29_1151;
assign tmp_6_2_1_fu_1049_p1 = tmp_5_1_1_cast_fu_509_p1;
assign tmp_6_2_3_fu_1043_p0 = ap_const_lv29_1FFFD631;
assign tmp_6_2_3_fu_1043_p1 = tmp_5_1_3_cast_fu_512_p1;
assign tmp_6_2_5_fu_1037_p0 = ap_const_lv29_1FFFEEAF;
assign tmp_6_2_5_fu_1037_p1 = tmp_5_1_5_cast_fu_515_p1;
assign tmp_6_3_1_fu_956_p0 = ap_const_lv29_1FFFF72C;
assign tmp_6_3_1_fu_956_p1 = tmp_5_1_1_cast_fu_509_p1;
assign tmp_6_3_3_fu_950_p0 = ap_const_lv29_1FFFE6DC;
assign tmp_6_3_3_fu_950_p1 = tmp_5_1_3_cast_fu_512_p1;
assign tmp_6_3_5_fu_944_p0 = ap_const_lv29_2C63;
assign tmp_6_3_5_fu_944_p1 = tmp_5_1_5_cast_fu_515_p1;
assign tmp_6_4_557_cast_fu_459_p1 = $signed(tmp_6_4_s_fu_453_p2);
assign tmp_6_4_s_fu_453_p2 = ($signed(tmp_5_1_6_cast_cast_fu_425_p1) + $signed(tmp_5_1_5_cast_cast_fu_421_p1));
assign tmp_6_5_1_fu_901_p0 = ap_const_lv29_1FFFD39E;
assign tmp_6_5_1_fu_901_p1 = tmp_5_1_1_cast_fu_509_p1;
assign tmp_6_5_3_fu_895_p0 = ap_const_lv29_25A1;
assign tmp_6_5_3_fu_895_p1 = tmp_5_1_3_cast_fu_512_p1;
assign tmp_6_5_5_fu_889_p0 = ap_const_lv29_1FFFF72C;
assign tmp_6_5_5_fu_889_p1 = tmp_5_1_5_cast_fu_515_p1;
assign tmp_6_6_1_fu_804_p0 = ap_const_lv29_1FFFD631;
assign tmp_6_6_1_fu_804_p1 = tmp_5_1_1_cast_reg_1224;
assign tmp_6_6_3_fu_799_p0 = ap_const_lv29_1FFFEEAF;
assign tmp_6_6_3_fu_799_p1 = tmp_5_1_3_cast_reg_1235;
assign tmp_6_6_5_fu_794_p0 = ap_const_lv29_29CF;
assign tmp_6_6_5_fu_794_p1 = tmp_5_1_5_cast_reg_1246;
assign tmp_6_7_1_fu_828_p0 = ap_const_lv29_1FFFE6DC;
assign tmp_6_7_1_fu_828_p1 = tmp_5_1_1_cast_reg_1224;
assign tmp_6_7_3_fu_823_p0 = ap_const_lv29_1FFFD39E;
assign tmp_6_7_3_fu_823_p1 = tmp_5_1_3_cast_reg_1235;
assign tmp_6_7_5_fu_884_p0 = ap_const_lv29_1FFFDA60;
assign tmp_6_7_5_fu_884_p1 = tmp_5_1_5_cast_reg_1246;
assign tmp_6_fu_299_p3 = {{src_q0}, {ap_const_lv13_0}};
assign tmp_7_4_1_fu_429_p2 = (tmp_6_fu_299_p3 - tmp_6_0_1_fu_307_p3);
assign tmp_7_4_2_fu_435_p2 = (tmp_7_4_1_fu_429_p2 - tmp_6_0_2_fu_315_p3);
assign tmp_7_fu_715_p2 = (tmp49_fu_707_p2 + tmp52_fu_711_p2);
assign tmp_fu_375_p2 = (tmp3_fu_363_p2 + tmp4_fu_369_p2);
assign tmp_s_fu_405_p2 = (tmp_fu_375_p2 + tmp5_fu_399_p2);
always @ (posedge ap_clk) begin
    tmp1_reg_1194[12:0] <= 13'b1000000000000;
    tmp29_reg_1204[12:0] <= 13'b0000000000000;
    tmp_23_reg_1214[2:0] <= 3'b000;
    ap_reg_ppstg_tmp_23_reg_1214_pp0_it1[2:0] <= 3'b000;
end



endmodule //dct_dct_1d


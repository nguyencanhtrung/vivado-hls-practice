// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_Loop_Col_DCT_Loop_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        col_inbuf_0_address0,
        col_inbuf_0_ce0,
        col_inbuf_0_q0,
        col_inbuf_0_address1,
        col_inbuf_0_ce1,
        col_inbuf_0_q1,
        col_inbuf_1_address0,
        col_inbuf_1_ce0,
        col_inbuf_1_q0,
        col_inbuf_1_address1,
        col_inbuf_1_ce1,
        col_inbuf_1_q1,
        col_inbuf_2_address0,
        col_inbuf_2_ce0,
        col_inbuf_2_q0,
        col_inbuf_2_address1,
        col_inbuf_2_ce1,
        col_inbuf_2_q1,
        col_inbuf_3_address0,
        col_inbuf_3_ce0,
        col_inbuf_3_q0,
        col_inbuf_3_address1,
        col_inbuf_3_ce1,
        col_inbuf_3_q1,
        col_outbuf_i_address0,
        col_outbuf_i_ce0,
        col_outbuf_i_we0,
        col_outbuf_i_d0,
        col_outbuf_i_address1,
        col_outbuf_i_ce1,
        col_outbuf_i_we1,
        col_outbuf_i_d1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 6'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 6'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 6'b10000;
parameter    ap_ST_st12_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] col_inbuf_0_address0;
output   col_inbuf_0_ce0;
input  [15:0] col_inbuf_0_q0;
output  [3:0] col_inbuf_0_address1;
output   col_inbuf_0_ce1;
input  [15:0] col_inbuf_0_q1;
output  [3:0] col_inbuf_1_address0;
output   col_inbuf_1_ce0;
input  [15:0] col_inbuf_1_q0;
output  [3:0] col_inbuf_1_address1;
output   col_inbuf_1_ce1;
input  [15:0] col_inbuf_1_q1;
output  [3:0] col_inbuf_2_address0;
output   col_inbuf_2_ce0;
input  [15:0] col_inbuf_2_q0;
output  [3:0] col_inbuf_2_address1;
output   col_inbuf_2_ce1;
input  [15:0] col_inbuf_2_q1;
output  [3:0] col_inbuf_3_address0;
output   col_inbuf_3_ce0;
input  [15:0] col_inbuf_3_q0;
output  [3:0] col_inbuf_3_address1;
output   col_inbuf_3_ce1;
input  [15:0] col_inbuf_3_q1;
output  [5:0] col_outbuf_i_address0;
output   col_outbuf_i_ce0;
output   col_outbuf_i_we0;
output  [15:0] col_outbuf_i_d0;
output  [5:0] col_outbuf_i_address1;
output   col_outbuf_i_ce1;
output   col_outbuf_i_we1;
output  [15:0] col_outbuf_i_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg col_inbuf_0_ce0;
reg col_inbuf_0_ce1;
reg col_inbuf_1_ce0;
reg col_inbuf_1_ce1;
reg col_inbuf_2_ce0;
reg col_inbuf_2_ce1;
reg col_inbuf_3_ce0;
reg col_inbuf_3_ce1;
reg col_outbuf_i_ce0;
reg col_outbuf_i_we0;
reg col_outbuf_i_ce1;
reg col_outbuf_i_we1;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
reg   [3:0] i_2_i_reg_38;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_87;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [0:0] exitcond2_i_fu_68_p2;
reg   [0:0] exitcond2_i_reg_80;
reg   [0:0] ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2;
wire   [3:0] i_fu_74_p2;
reg   [3:0] i_reg_84;
reg    ap_sig_bdd_107;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_119;
wire    grp_dct_dct_1d_fu_50_ap_start;
wire    grp_dct_dct_1d_fu_50_ap_done;
wire    grp_dct_dct_1d_fu_50_ap_idle;
wire    grp_dct_dct_1d_fu_50_ap_ready;
wire    grp_dct_dct_1d_fu_50_ap_ce;
wire   [3:0] grp_dct_dct_1d_fu_50_src_address0;
wire    grp_dct_dct_1d_fu_50_src_ce0;
wire   [15:0] grp_dct_dct_1d_fu_50_src_q0;
wire   [3:0] grp_dct_dct_1d_fu_50_src_address1;
wire    grp_dct_dct_1d_fu_50_src_ce1;
wire   [15:0] grp_dct_dct_1d_fu_50_src_q1;
wire   [3:0] grp_dct_dct_1d_fu_50_src1_address0;
wire    grp_dct_dct_1d_fu_50_src1_ce0;
wire   [15:0] grp_dct_dct_1d_fu_50_src1_q0;
wire   [3:0] grp_dct_dct_1d_fu_50_src1_address1;
wire    grp_dct_dct_1d_fu_50_src1_ce1;
wire   [15:0] grp_dct_dct_1d_fu_50_src1_q1;
wire   [3:0] grp_dct_dct_1d_fu_50_src2_address0;
wire    grp_dct_dct_1d_fu_50_src2_ce0;
wire   [15:0] grp_dct_dct_1d_fu_50_src2_q0;
wire   [3:0] grp_dct_dct_1d_fu_50_src2_address1;
wire    grp_dct_dct_1d_fu_50_src2_ce1;
wire   [15:0] grp_dct_dct_1d_fu_50_src2_q1;
wire   [3:0] grp_dct_dct_1d_fu_50_src3_address0;
wire    grp_dct_dct_1d_fu_50_src3_ce0;
wire   [15:0] grp_dct_dct_1d_fu_50_src3_q0;
wire   [3:0] grp_dct_dct_1d_fu_50_src3_address1;
wire    grp_dct_dct_1d_fu_50_src3_ce1;
wire   [15:0] grp_dct_dct_1d_fu_50_src3_q1;
wire   [3:0] grp_dct_dct_1d_fu_50_tmp_8;
wire   [5:0] grp_dct_dct_1d_fu_50_dst_address0;
wire    grp_dct_dct_1d_fu_50_dst_ce0;
wire    grp_dct_dct_1d_fu_50_dst_we0;
wire   [15:0] grp_dct_dct_1d_fu_50_dst_d0;
wire   [5:0] grp_dct_dct_1d_fu_50_dst_address1;
wire    grp_dct_dct_1d_fu_50_dst_ce1;
wire    grp_dct_dct_1d_fu_50_dst_we1;
wire   [15:0] grp_dct_dct_1d_fu_50_dst_d1;
wire   [3:0] grp_dct_dct_1d_fu_50_tmp_81;
reg   [3:0] i_2_i_phi_fu_42_p4;
reg    grp_dct_dct_1d_fu_50_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_179;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_188;
reg    ap_sig_cseq_ST_st12_fsm_5;
reg    ap_sig_bdd_227;
reg   [5:0] ap_NS_fsm;


dct_dct_1d grp_dct_dct_1d_fu_50(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_dct_dct_1d_fu_50_ap_start ),
    .ap_done( grp_dct_dct_1d_fu_50_ap_done ),
    .ap_idle( grp_dct_dct_1d_fu_50_ap_idle ),
    .ap_ready( grp_dct_dct_1d_fu_50_ap_ready ),
    .ap_ce( grp_dct_dct_1d_fu_50_ap_ce ),
    .src_address0( grp_dct_dct_1d_fu_50_src_address0 ),
    .src_ce0( grp_dct_dct_1d_fu_50_src_ce0 ),
    .src_q0( grp_dct_dct_1d_fu_50_src_q0 ),
    .src_address1( grp_dct_dct_1d_fu_50_src_address1 ),
    .src_ce1( grp_dct_dct_1d_fu_50_src_ce1 ),
    .src_q1( grp_dct_dct_1d_fu_50_src_q1 ),
    .src1_address0( grp_dct_dct_1d_fu_50_src1_address0 ),
    .src1_ce0( grp_dct_dct_1d_fu_50_src1_ce0 ),
    .src1_q0( grp_dct_dct_1d_fu_50_src1_q0 ),
    .src1_address1( grp_dct_dct_1d_fu_50_src1_address1 ),
    .src1_ce1( grp_dct_dct_1d_fu_50_src1_ce1 ),
    .src1_q1( grp_dct_dct_1d_fu_50_src1_q1 ),
    .src2_address0( grp_dct_dct_1d_fu_50_src2_address0 ),
    .src2_ce0( grp_dct_dct_1d_fu_50_src2_ce0 ),
    .src2_q0( grp_dct_dct_1d_fu_50_src2_q0 ),
    .src2_address1( grp_dct_dct_1d_fu_50_src2_address1 ),
    .src2_ce1( grp_dct_dct_1d_fu_50_src2_ce1 ),
    .src2_q1( grp_dct_dct_1d_fu_50_src2_q1 ),
    .src3_address0( grp_dct_dct_1d_fu_50_src3_address0 ),
    .src3_ce0( grp_dct_dct_1d_fu_50_src3_ce0 ),
    .src3_q0( grp_dct_dct_1d_fu_50_src3_q0 ),
    .src3_address1( grp_dct_dct_1d_fu_50_src3_address1 ),
    .src3_ce1( grp_dct_dct_1d_fu_50_src3_ce1 ),
    .src3_q1( grp_dct_dct_1d_fu_50_src3_q1 ),
    .tmp_8( grp_dct_dct_1d_fu_50_tmp_8 ),
    .dst_address0( grp_dct_dct_1d_fu_50_dst_address0 ),
    .dst_ce0( grp_dct_dct_1d_fu_50_dst_ce0 ),
    .dst_we0( grp_dct_dct_1d_fu_50_dst_we0 ),
    .dst_d0( grp_dct_dct_1d_fu_50_dst_d0 ),
    .dst_address1( grp_dct_dct_1d_fu_50_dst_address1 ),
    .dst_ce1( grp_dct_dct_1d_fu_50_dst_ce1 ),
    .dst_we1( grp_dct_dct_1d_fu_50_dst_we1 ),
    .dst_d1( grp_dct_dct_1d_fu_50_dst_d1 ),
    .tmp_81( grp_dct_dct_1d_fu_50_tmp_81 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_5)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond2_i_fu_68_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & ~(exitcond2_i_reg_80 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// grp_dct_dct_1d_fu_50_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk) begin : ap_ret_grp_dct_dct_1d_fu_50_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_dct_dct_1d_fu_50_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_fu_68_p2 == ap_const_lv1_0))) begin
            grp_dct_dct_1d_fu_50_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_dct_dct_1d_fu_50_ap_ready)) begin
            grp_dct_dct_1d_fu_50_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_107)) begin
        i_2_i_reg_38 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0))) begin
        i_2_i_reg_38 <= i_reg_84;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 <= exitcond2_i_reg_80;
        ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 <= ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1;
        exitcond2_i_reg_80 <= exitcond2_i_fu_68_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        i_reg_84 <= i_fu_74_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st12_fsm_5) begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_87) begin
    if (ap_sig_bdd_87) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. ///
always @ (ap_sig_bdd_179) begin
    if (ap_sig_bdd_179) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_3 assign process. ///
always @ (ap_sig_bdd_188) begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_4 assign process. ///
always @ (ap_sig_bdd_119) begin
    if (ap_sig_bdd_119) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_5 assign process. ///
always @ (ap_sig_bdd_227) begin
    if (ap_sig_bdd_227) begin
        ap_sig_cseq_ST_st12_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// col_inbuf_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_0_ce0 = grp_dct_dct_1d_fu_50_src_ce0;
    end else begin
        col_inbuf_0_ce0 = ap_const_logic_0;
    end
end

/// col_inbuf_0_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src_ce1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_0_ce1 = grp_dct_dct_1d_fu_50_src_ce1;
    end else begin
        col_inbuf_0_ce1 = ap_const_logic_0;
    end
end

/// col_inbuf_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src1_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_1_ce0 = grp_dct_dct_1d_fu_50_src1_ce0;
    end else begin
        col_inbuf_1_ce0 = ap_const_logic_0;
    end
end

/// col_inbuf_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src1_ce1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_1_ce1 = grp_dct_dct_1d_fu_50_src1_ce1;
    end else begin
        col_inbuf_1_ce1 = ap_const_logic_0;
    end
end

/// col_inbuf_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src2_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_2_ce0 = grp_dct_dct_1d_fu_50_src2_ce0;
    end else begin
        col_inbuf_2_ce0 = ap_const_logic_0;
    end
end

/// col_inbuf_2_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src2_ce1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_2_ce1 = grp_dct_dct_1d_fu_50_src2_ce1;
    end else begin
        col_inbuf_2_ce1 = ap_const_logic_0;
    end
end

/// col_inbuf_3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src3_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_3_ce0 = grp_dct_dct_1d_fu_50_src3_ce0;
    end else begin
        col_inbuf_3_ce0 = ap_const_logic_0;
    end
end

/// col_inbuf_3_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_src3_ce1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_inbuf_3_ce1 = grp_dct_dct_1d_fu_50_src3_ce1;
    end else begin
        col_inbuf_3_ce1 = ap_const_logic_0;
    end
end

/// col_outbuf_i_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_dst_ce0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_outbuf_i_ce0 = grp_dct_dct_1d_fu_50_dst_ce0;
    end else begin
        col_outbuf_i_ce0 = ap_const_logic_0;
    end
end

/// col_outbuf_i_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_dst_ce1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_outbuf_i_ce1 = grp_dct_dct_1d_fu_50_dst_ce1;
    end else begin
        col_outbuf_i_ce1 = ap_const_logic_0;
    end
end

/// col_outbuf_i_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_dst_we0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_outbuf_i_we0 = grp_dct_dct_1d_fu_50_dst_we0;
    end else begin
        col_outbuf_i_we0 = ap_const_logic_0;
    end
end

/// col_outbuf_i_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_reg_80 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 or ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or grp_dct_dct_1d_fu_50_dst_we1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond2_i_reg_80 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (exitcond2_i_reg_80 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond2_i_reg_80_pp0_it2 == ap_const_lv1_0)))) begin
        col_outbuf_i_we1 = grp_dct_dct_1d_fu_50_dst_we1;
    end else begin
        col_outbuf_i_we1 = ap_const_logic_0;
    end
end

/// i_2_i_phi_fu_42_p4 assign process. ///
always @ (i_2_i_reg_38 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or exitcond2_i_reg_80 or i_reg_84) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond2_i_reg_80 == ap_const_lv1_0))) begin
        i_2_i_phi_fu_42_p4 = i_reg_84;
    end else begin
        i_2_i_phi_fu_42_p4 = i_2_i_reg_38;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond2_i_fu_68_p2 or ap_sig_bdd_107 or ap_sig_cseq_ST_pp0_stg1_fsm_2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_107) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond2_i_fu_68_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_5;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_5;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st12_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_107 assign process. ///
always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_107 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_119 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_179 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_179 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_25 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_87 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_87 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end
assign col_inbuf_0_address0 = grp_dct_dct_1d_fu_50_src_address0;
assign col_inbuf_0_address1 = grp_dct_dct_1d_fu_50_src_address1;
assign col_inbuf_1_address0 = grp_dct_dct_1d_fu_50_src1_address0;
assign col_inbuf_1_address1 = grp_dct_dct_1d_fu_50_src1_address1;
assign col_inbuf_2_address0 = grp_dct_dct_1d_fu_50_src2_address0;
assign col_inbuf_2_address1 = grp_dct_dct_1d_fu_50_src2_address1;
assign col_inbuf_3_address0 = grp_dct_dct_1d_fu_50_src3_address0;
assign col_inbuf_3_address1 = grp_dct_dct_1d_fu_50_src3_address1;
assign col_outbuf_i_address0 = grp_dct_dct_1d_fu_50_dst_address0;
assign col_outbuf_i_address1 = grp_dct_dct_1d_fu_50_dst_address1;
assign col_outbuf_i_d0 = grp_dct_dct_1d_fu_50_dst_d0;
assign col_outbuf_i_d1 = grp_dct_dct_1d_fu_50_dst_d1;
assign exitcond2_i_fu_68_p2 = (i_2_i_phi_fu_42_p4 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_dct_dct_1d_fu_50_ap_ce = ap_const_logic_1;
assign grp_dct_dct_1d_fu_50_ap_start = grp_dct_dct_1d_fu_50_ap_start_ap_start_reg;
assign grp_dct_dct_1d_fu_50_src1_q0 = col_inbuf_1_q0;
assign grp_dct_dct_1d_fu_50_src1_q1 = col_inbuf_1_q1;
assign grp_dct_dct_1d_fu_50_src2_q0 = col_inbuf_2_q0;
assign grp_dct_dct_1d_fu_50_src2_q1 = col_inbuf_2_q1;
assign grp_dct_dct_1d_fu_50_src3_q0 = col_inbuf_3_q0;
assign grp_dct_dct_1d_fu_50_src3_q1 = col_inbuf_3_q1;
assign grp_dct_dct_1d_fu_50_src_q0 = col_inbuf_0_q0;
assign grp_dct_dct_1d_fu_50_src_q1 = col_inbuf_0_q1;
assign grp_dct_dct_1d_fu_50_tmp_8 = i_2_i_reg_38;
assign grp_dct_dct_1d_fu_50_tmp_81 = i_2_i_reg_38;
assign i_fu_74_p2 = (i_2_i_phi_fu_42_p4 + ap_const_lv4_1);


endmodule //dct_Loop_Col_DCT_Loop_proc


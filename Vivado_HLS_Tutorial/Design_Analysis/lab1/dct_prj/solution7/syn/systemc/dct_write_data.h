// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _dct_write_data_HH_
#define _dct_write_data_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dct_write_data : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > buf_r_address0;
    sc_out< sc_logic > buf_r_ce0;
    sc_in< sc_lv<16> > buf_r_q0;
    sc_out< sc_lv<6> > buf_r_address1;
    sc_out< sc_logic > buf_r_ce1;
    sc_in< sc_lv<16> > buf_r_q1;
    sc_out< sc_lv<6> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_out< sc_lv<6> > output_r_address1;
    sc_out< sc_logic > output_r_ce1;
    sc_out< sc_logic > output_r_we1;
    sc_out< sc_lv<16> > output_r_d1;


    // Module declarations
    dct_write_data(sc_module_name name);
    SC_HAS_PROCESS(dct_write_data);

    ~dct_write_data();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_25;
    sc_signal< sc_lv<4> > r_reg_214;
    sc_signal< sc_lv<1> > exitcond1_fu_225_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_436;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_61;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<4> > r_1_fu_231_p2;
    sc_signal< sc_lv<4> > r_1_reg_440;
    sc_signal< sc_lv<7> > tmp_fu_237_p3;
    sc_signal< sc_lv<7> > tmp_reg_445;
    sc_signal< sc_lv<3> > tmp_18_fu_265_p1;
    sc_signal< sc_lv<3> > tmp_18_reg_465;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg1_fsm_2;
    sc_signal< bool > ap_sig_bdd_88;
    sc_signal< sc_lv<6> > tmp_1_fu_297_p3;
    sc_signal< sc_lv<6> > tmp_1_reg_480;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg2_fsm_3;
    sc_signal< bool > ap_sig_bdd_103;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg3_fsm_4;
    sc_signal< bool > ap_sig_bdd_115;
    sc_signal< bool > ap_sig_bdd_123;
    sc_signal< sc_lv<4> > r_phi_fu_218_p4;
    sc_signal< sc_lv<64> > tmp_3_fu_245_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_256_p3;
    sc_signal< sc_lv<64> > tmp_8_fu_274_p3;
    sc_signal< sc_lv<64> > tmp_s_fu_288_p3;
    sc_signal< sc_lv<64> > tmp_5_fu_304_p1;
    sc_signal< sc_lv<64> > tmp_5_1_fu_315_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_325_p3;
    sc_signal< sc_lv<64> > tmp_13_fu_339_p3;
    sc_signal< sc_lv<64> > tmp_5_2_fu_353_p1;
    sc_signal< sc_lv<64> > tmp_5_3_fu_363_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_373_p3;
    sc_signal< sc_lv<64> > tmp_17_fu_387_p3;
    sc_signal< sc_lv<64> > tmp_5_4_fu_401_p1;
    sc_signal< sc_lv<64> > tmp_5_5_fu_411_p1;
    sc_signal< sc_lv<64> > tmp_5_6_fu_421_p1;
    sc_signal< sc_lv<64> > tmp_5_7_fu_431_p1;
    sc_signal< sc_lv<7> > tmp_4_fu_250_p2;
    sc_signal< sc_lv<7> > tmp_7_fu_269_p2;
    sc_signal< sc_lv<7> > tmp_9_fu_283_p2;
    sc_signal< sc_lv<6> > tmp_4_s_fu_309_p2;
    sc_signal< sc_lv<7> > tmp_10_fu_320_p2;
    sc_signal< sc_lv<7> > tmp_12_fu_334_p2;
    sc_signal< sc_lv<6> > tmp_4_1_fu_348_p2;
    sc_signal< sc_lv<6> > tmp_4_2_fu_358_p2;
    sc_signal< sc_lv<7> > tmp_14_fu_368_p2;
    sc_signal< sc_lv<7> > tmp_16_fu_382_p2;
    sc_signal< sc_lv<6> > tmp_4_3_fu_396_p2;
    sc_signal< sc_lv<6> > tmp_4_4_fu_406_p2;
    sc_signal< sc_lv<6> > tmp_4_5_fu_416_p2;
    sc_signal< sc_lv<6> > tmp_4_6_fu_426_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_bdd_307;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<6> ap_ST_pp0_stg1_fsm_2;
    static const sc_lv<6> ap_ST_pp0_stg2_fsm_3;
    static const sc_lv<6> ap_ST_pp0_stg3_fsm_4;
    static const sc_lv<6> ap_ST_st7_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<57> ap_const_lv57_0;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<7> ap_const_lv7_4;
    static const sc_lv<7> ap_const_lv7_5;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<6> ap_const_lv6_3;
    static const sc_lv<7> ap_const_lv7_6;
    static const sc_lv<7> ap_const_lv7_7;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<6> ap_const_lv6_5;
    static const sc_lv<6> ap_const_lv6_6;
    static const sc_lv<6> ap_const_lv6_7;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_103();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_123();
    void thread_ap_sig_bdd_25();
    void thread_ap_sig_bdd_307();
    void thread_ap_sig_bdd_61();
    void thread_ap_sig_bdd_88();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_pp0_stg1_fsm_2();
    void thread_ap_sig_cseq_ST_pp0_stg2_fsm_3();
    void thread_ap_sig_cseq_ST_pp0_stg3_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_buf_r_address0();
    void thread_buf_r_address1();
    void thread_buf_r_ce0();
    void thread_buf_r_ce1();
    void thread_exitcond1_fu_225_p2();
    void thread_output_r_address0();
    void thread_output_r_address1();
    void thread_output_r_ce0();
    void thread_output_r_ce1();
    void thread_output_r_d0();
    void thread_output_r_d1();
    void thread_output_r_we0();
    void thread_output_r_we1();
    void thread_r_1_fu_231_p2();
    void thread_r_phi_fu_218_p4();
    void thread_tmp_10_fu_320_p2();
    void thread_tmp_11_fu_325_p3();
    void thread_tmp_12_fu_334_p2();
    void thread_tmp_13_fu_339_p3();
    void thread_tmp_14_fu_368_p2();
    void thread_tmp_15_fu_373_p3();
    void thread_tmp_16_fu_382_p2();
    void thread_tmp_17_fu_387_p3();
    void thread_tmp_18_fu_265_p1();
    void thread_tmp_1_fu_297_p3();
    void thread_tmp_3_fu_245_p1();
    void thread_tmp_4_1_fu_348_p2();
    void thread_tmp_4_2_fu_358_p2();
    void thread_tmp_4_3_fu_396_p2();
    void thread_tmp_4_4_fu_406_p2();
    void thread_tmp_4_5_fu_416_p2();
    void thread_tmp_4_6_fu_426_p2();
    void thread_tmp_4_fu_250_p2();
    void thread_tmp_4_s_fu_309_p2();
    void thread_tmp_5_1_fu_315_p1();
    void thread_tmp_5_2_fu_353_p1();
    void thread_tmp_5_3_fu_363_p1();
    void thread_tmp_5_4_fu_401_p1();
    void thread_tmp_5_5_fu_411_p1();
    void thread_tmp_5_6_fu_421_p1();
    void thread_tmp_5_7_fu_431_p1();
    void thread_tmp_5_fu_304_p1();
    void thread_tmp_6_fu_256_p3();
    void thread_tmp_7_fu_269_p2();
    void thread_tmp_8_fu_274_p3();
    void thread_tmp_9_fu_283_p2();
    void thread_tmp_fu_237_p3();
    void thread_tmp_s_fu_288_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

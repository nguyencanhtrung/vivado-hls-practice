// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "fir.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fir::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fir::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> fir::ap_ST_st1_fsm_0 = "1";
const sc_lv<18> fir::ap_ST_st2_fsm_1 = "10";
const sc_lv<18> fir::ap_ST_st3_fsm_2 = "100";
const sc_lv<18> fir::ap_ST_st4_fsm_3 = "1000";
const sc_lv<18> fir::ap_ST_st5_fsm_4 = "10000";
const sc_lv<18> fir::ap_ST_st6_fsm_5 = "100000";
const sc_lv<18> fir::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<18> fir::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<18> fir::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<18> fir::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<18> fir::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<18> fir::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<18> fir::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<18> fir::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<18> fir::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<18> fir::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<18> fir::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<18> fir::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<32> fir::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> fir::ap_const_lv1_1 = "1";
const sc_lv<32> fir::ap_const_lv32_1 = "1";
const sc_lv<32> fir::ap_const_lv32_7 = "111";
const sc_lv<32> fir::ap_const_lv32_2 = "10";
const sc_lv<32> fir::ap_const_lv32_8 = "1000";
const sc_lv<32> fir::ap_const_lv32_3 = "11";
const sc_lv<32> fir::ap_const_lv32_A = "1010";
const sc_lv<32> fir::ap_const_lv32_4 = "100";
const sc_lv<32> fir::ap_const_lv32_B = "1011";
const sc_lv<32> fir::ap_const_lv32_5 = "101";
const sc_lv<32> fir::ap_const_lv32_6 = "110";
const sc_lv<32> fir::ap_const_lv32_9 = "1001";
const sc_lv<32> fir::ap_const_lv32_D = "1101";
const sc_lv<32> fir::ap_const_lv32_10 = "10000";
const sc_lv<64> fir::ap_const_lv64_A = "1010";
const sc_lv<64> fir::ap_const_lv64_9 = "1001";
const sc_lv<64> fir::ap_const_lv64_8 = "1000";
const sc_lv<64> fir::ap_const_lv64_7 = "111";
const sc_lv<64> fir::ap_const_lv64_6 = "110";
const sc_lv<64> fir::ap_const_lv64_5 = "101";
const sc_lv<64> fir::ap_const_lv64_4 = "100";
const sc_lv<64> fir::ap_const_lv64_3 = "11";
const sc_lv<64> fir::ap_const_lv64_2 = "10";
const sc_lv<64> fir::ap_const_lv64_1 = "1";
const sc_lv<64> fir::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> fir::ap_const_lv32_11 = "10001";
const sc_lv<32> fir::ap_const_lv32_C = "1100";
const sc_lv<32> fir::ap_const_lv32_E = "1110";
const sc_lv<32> fir::ap_const_lv32_F = "1111";

fir::fir(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fir_mul_32s_32s_32_6_U1 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U1");
    fir_mul_32s_32s_32_6_U1->clk(ap_clk);
    fir_mul_32s_32s_32_6_U1->reset(ap_rst);
    fir_mul_32s_32s_32_6_U1->din0(reg_188);
    fir_mul_32s_32s_32_6_U1->din1(shift_reg_9);
    fir_mul_32s_32s_32_6_U1->ce(grp_fu_208_ce);
    fir_mul_32s_32s_32_6_U1->dout(grp_fu_208_p2);
    fir_mul_32s_32s_32_6_U2 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U2");
    fir_mul_32s_32s_32_6_U2->clk(ap_clk);
    fir_mul_32s_32s_32_6_U2->reset(ap_rst);
    fir_mul_32s_32s_32_6_U2->din0(c_q0);
    fir_mul_32s_32s_32_6_U2->din1(shift_reg_8);
    fir_mul_32s_32s_32_6_U2->ce(grp_fu_224_ce);
    fir_mul_32s_32s_32_6_U2->dout(grp_fu_224_p2);
    fir_mul_32s_32s_32_6_U3 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U3");
    fir_mul_32s_32s_32_6_U3->clk(ap_clk);
    fir_mul_32s_32s_32_6_U3->reset(ap_rst);
    fir_mul_32s_32s_32_6_U3->din0(reg_196);
    fir_mul_32s_32s_32_6_U3->din1(shift_reg_7);
    fir_mul_32s_32s_32_6_U3->ce(grp_fu_240_ce);
    fir_mul_32s_32s_32_6_U3->dout(grp_fu_240_p2);
    fir_mul_32s_32s_32_6_U4 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U4");
    fir_mul_32s_32s_32_6_U4->clk(ap_clk);
    fir_mul_32s_32s_32_6_U4->reset(ap_rst);
    fir_mul_32s_32s_32_6_U4->din0(reg_200);
    fir_mul_32s_32s_32_6_U4->din1(shift_reg_6);
    fir_mul_32s_32s_32_6_U4->ce(grp_fu_256_ce);
    fir_mul_32s_32s_32_6_U4->dout(grp_fu_256_p2);
    fir_mul_32s_32s_32_6_U5 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U5");
    fir_mul_32s_32s_32_6_U5->clk(ap_clk);
    fir_mul_32s_32s_32_6_U5->reset(ap_rst);
    fir_mul_32s_32s_32_6_U5->din0(c_q0);
    fir_mul_32s_32s_32_6_U5->din1(shift_reg_5);
    fir_mul_32s_32s_32_6_U5->ce(grp_fu_272_ce);
    fir_mul_32s_32s_32_6_U5->dout(grp_fu_272_p2);
    fir_mul_32s_32s_32_6_U6 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U6");
    fir_mul_32s_32s_32_6_U6->clk(ap_clk);
    fir_mul_32s_32s_32_6_U6->reset(ap_rst);
    fir_mul_32s_32s_32_6_U6->din0(c_load_5_reg_479);
    fir_mul_32s_32s_32_6_U6->din1(shift_reg_4);
    fir_mul_32s_32s_32_6_U6->ce(grp_fu_294_ce);
    fir_mul_32s_32s_32_6_U6->dout(grp_fu_294_p2);
    fir_mul_32s_32s_32_6_U7 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U7");
    fir_mul_32s_32s_32_6_U7->clk(ap_clk);
    fir_mul_32s_32s_32_6_U7->reset(ap_rst);
    fir_mul_32s_32s_32_6_U7->din0(reg_188);
    fir_mul_32s_32s_32_6_U7->din1(shift_reg_3);
    fir_mul_32s_32s_32_6_U7->ce(grp_fu_309_ce);
    fir_mul_32s_32s_32_6_U7->dout(grp_fu_309_p2);
    fir_mul_32s_32s_32_6_U8 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U8");
    fir_mul_32s_32s_32_6_U8->clk(ap_clk);
    fir_mul_32s_32s_32_6_U8->reset(ap_rst);
    fir_mul_32s_32s_32_6_U8->din0(c_q0);
    fir_mul_32s_32s_32_6_U8->din1(shift_reg_2);
    fir_mul_32s_32s_32_6_U8->ce(grp_fu_325_ce);
    fir_mul_32s_32s_32_6_U8->dout(grp_fu_325_p2);
    fir_mul_32s_32s_32_6_U9 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U9");
    fir_mul_32s_32s_32_6_U9->clk(ap_clk);
    fir_mul_32s_32s_32_6_U9->reset(ap_rst);
    fir_mul_32s_32s_32_6_U9->din0(c_load_8_reg_519);
    fir_mul_32s_32s_32_6_U9->din1(shift_reg_1);
    fir_mul_32s_32s_32_6_U9->ce(grp_fu_341_ce);
    fir_mul_32s_32s_32_6_U9->dout(grp_fu_341_p2);
    fir_mul_32s_32s_32_6_U10 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U10");
    fir_mul_32s_32s_32_6_U10->clk(ap_clk);
    fir_mul_32s_32s_32_6_U10->reset(ap_rst);
    fir_mul_32s_32s_32_6_U10->din0(reg_196);
    fir_mul_32s_32s_32_6_U10->din1(shift_reg_0);
    fir_mul_32s_32s_32_6_U10->ce(grp_fu_356_ce);
    fir_mul_32s_32s_32_6_U10->dout(grp_fu_356_p2);
    fir_mul_32s_32s_32_6_U11 = new fir_mul_32s_32s_32_6<1,6,32,32,32>("fir_mul_32s_32s_32_6_U11");
    fir_mul_32s_32s_32_6_U11->clk(ap_clk);
    fir_mul_32s_32s_32_6_U11->reset(ap_rst);
    fir_mul_32s_32s_32_6_U11->din0(c_q0);
    fir_mul_32s_32s_32_6_U11->din1(x_in_sig);
    fir_mul_32s_32s_32_6_U11->ce(grp_fu_368_ce);
    fir_mul_32s_32s_32_6_U11->dout(grp_fu_368_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_160);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_175);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_197);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_224);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_235);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_268);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_354);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_371);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_379);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_197 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_114 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_130 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_354 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_bdd_224 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_371 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_379 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_bdd_235 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_bdd_268 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_34 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_75 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_91 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_123 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_160 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_175 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_82 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_98 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_grp_fu_208_ce);

    SC_METHOD(thread_grp_fu_224_ce);

    SC_METHOD(thread_grp_fu_240_ce);

    SC_METHOD(thread_grp_fu_256_ce);

    SC_METHOD(thread_grp_fu_272_ce);

    SC_METHOD(thread_grp_fu_294_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_309_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_325_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_341_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_fu_356_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_fu_368_ce);
    sensitive << ( x_ap_vld_in_sig );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_tmp1_fu_278_p2);
    sensitive << ( grp_fu_224_p2 );
    sensitive << ( grp_fu_208_p2 );

    SC_METHOD(thread_tmp2_fu_378_p2);
    sensitive << ( tmp_6_2_reg_529 );
    sensitive << ( tmp3_fu_374_p2 );

    SC_METHOD(thread_tmp3_fu_374_p2);
    sensitive << ( tmp_6_3_reg_534 );
    sensitive << ( tmp_6_4_reg_539 );

    SC_METHOD(thread_tmp4_fu_406_p2);
    sensitive << ( tmp7_fu_401_p2 );
    sensitive << ( tmp5_fu_393_p2 );

    SC_METHOD(thread_tmp5_fu_393_p2);
    sensitive << ( tmp_6_5_reg_569 );
    sensitive << ( tmp6_reg_574 );

    SC_METHOD(thread_tmp6_fu_383_p2);
    sensitive << ( grp_fu_309_p2 );
    sensitive << ( grp_fu_325_p2 );

    SC_METHOD(thread_tmp7_fu_401_p2);
    sensitive << ( tmp_6_8_reg_579 );
    sensitive << ( tmp8_fu_397_p2 );

    SC_METHOD(thread_tmp8_fu_397_p2);
    sensitive << ( tmp_6_9_reg_584 );
    sensitive << ( tmp_6_s_reg_589 );

    SC_METHOD(thread_tmp_fu_389_p2);
    sensitive << ( tmp1_reg_494 );
    sensitive << ( tmp2_reg_564 );

    SC_METHOD(thread_x_ap_vld_in_sig);
    sensitive << ( x_ap_vld );
    sensitive << ( x_ap_vld_preg );

    SC_METHOD(thread_x_in_sig);
    sensitive << ( x );
    sensitive << ( x_preg );
    sensitive << ( x_ap_vld );

    SC_METHOD(thread_y);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( tmp4_fu_406_p2 );
    sensitive << ( tmp_fu_389_p2 );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( x_ap_vld_in_sig );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000001";
    x_preg = "00000000000000000000000000000000";
    x_ap_vld_preg = SC_LOGIC_0;
    shift_reg_9 = "00000000000000000000000000000000";
    shift_reg_8 = "00000000000000000000000000000000";
    shift_reg_7 = "00000000000000000000000000000000";
    shift_reg_6 = "00000000000000000000000000000000";
    shift_reg_5 = "00000000000000000000000000000000";
    shift_reg_4 = "00000000000000000000000000000000";
    shift_reg_3 = "00000000000000000000000000000000";
    shift_reg_2 = "00000000000000000000000000000000";
    shift_reg_1 = "00000000000000000000000000000000";
    shift_reg_0 = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fir_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, y_ap_vld, "(port)y_ap_vld");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_q0, "(port)c_q0");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, x_ap_vld, "(port)x_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_34, "ap_sig_bdd_34");
    sc_trace(mVcdFile, x_in_sig, "x_in_sig");
    sc_trace(mVcdFile, x_preg, "x_preg");
    sc_trace(mVcdFile, x_ap_vld_in_sig, "x_ap_vld_in_sig");
    sc_trace(mVcdFile, x_ap_vld_preg, "x_ap_vld_preg");
    sc_trace(mVcdFile, shift_reg_9, "shift_reg_9");
    sc_trace(mVcdFile, shift_reg_8, "shift_reg_8");
    sc_trace(mVcdFile, shift_reg_7, "shift_reg_7");
    sc_trace(mVcdFile, shift_reg_6, "shift_reg_6");
    sc_trace(mVcdFile, shift_reg_5, "shift_reg_5");
    sc_trace(mVcdFile, shift_reg_4, "shift_reg_4");
    sc_trace(mVcdFile, shift_reg_3, "shift_reg_3");
    sc_trace(mVcdFile, shift_reg_2, "shift_reg_2");
    sc_trace(mVcdFile, shift_reg_1, "shift_reg_1");
    sc_trace(mVcdFile, shift_reg_0, "shift_reg_0");
    sc_trace(mVcdFile, reg_188, "reg_188");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_75, "ap_sig_bdd_75");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_82, "ap_sig_bdd_82");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_91, "ap_sig_bdd_91");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_98, "ap_sig_bdd_98");
    sc_trace(mVcdFile, reg_196, "reg_196");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_114, "ap_sig_bdd_114");
    sc_trace(mVcdFile, reg_200, "reg_200");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_123, "ap_sig_bdd_123");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_130, "ap_sig_bdd_130");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_160, "ap_sig_bdd_160");
    sc_trace(mVcdFile, c_load_5_reg_479, "c_load_5_reg_479");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_175, "ap_sig_bdd_175");
    sc_trace(mVcdFile, tmp1_fu_278_p2, "tmp1_fu_278_p2");
    sc_trace(mVcdFile, tmp1_reg_494, "tmp1_reg_494");
    sc_trace(mVcdFile, c_load_8_reg_519, "c_load_8_reg_519");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_197, "ap_sig_bdd_197");
    sc_trace(mVcdFile, grp_fu_240_p2, "grp_fu_240_p2");
    sc_trace(mVcdFile, tmp_6_2_reg_529, "tmp_6_2_reg_529");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, tmp_6_3_reg_534, "tmp_6_3_reg_534");
    sc_trace(mVcdFile, grp_fu_272_p2, "grp_fu_272_p2");
    sc_trace(mVcdFile, tmp_6_4_reg_539, "tmp_6_4_reg_539");
    sc_trace(mVcdFile, tmp2_fu_378_p2, "tmp2_fu_378_p2");
    sc_trace(mVcdFile, tmp2_reg_564, "tmp2_reg_564");
    sc_trace(mVcdFile, grp_fu_294_p2, "grp_fu_294_p2");
    sc_trace(mVcdFile, tmp_6_5_reg_569, "tmp_6_5_reg_569");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_224, "ap_sig_bdd_224");
    sc_trace(mVcdFile, tmp6_fu_383_p2, "tmp6_fu_383_p2");
    sc_trace(mVcdFile, tmp6_reg_574, "tmp6_reg_574");
    sc_trace(mVcdFile, grp_fu_341_p2, "grp_fu_341_p2");
    sc_trace(mVcdFile, tmp_6_8_reg_579, "tmp_6_8_reg_579");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_235, "ap_sig_bdd_235");
    sc_trace(mVcdFile, grp_fu_356_p2, "grp_fu_356_p2");
    sc_trace(mVcdFile, tmp_6_9_reg_584, "tmp_6_9_reg_584");
    sc_trace(mVcdFile, grp_fu_368_p2, "grp_fu_368_p2");
    sc_trace(mVcdFile, tmp_6_s_reg_589, "tmp_6_s_reg_589");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_bdd_268, "ap_sig_bdd_268");
    sc_trace(mVcdFile, grp_fu_224_p2, "grp_fu_224_p2");
    sc_trace(mVcdFile, grp_fu_208_p2, "grp_fu_208_p2");
    sc_trace(mVcdFile, tmp3_fu_374_p2, "tmp3_fu_374_p2");
    sc_trace(mVcdFile, grp_fu_309_p2, "grp_fu_309_p2");
    sc_trace(mVcdFile, grp_fu_325_p2, "grp_fu_325_p2");
    sc_trace(mVcdFile, tmp8_fu_397_p2, "tmp8_fu_397_p2");
    sc_trace(mVcdFile, tmp7_fu_401_p2, "tmp7_fu_401_p2");
    sc_trace(mVcdFile, tmp5_fu_393_p2, "tmp5_fu_393_p2");
    sc_trace(mVcdFile, tmp4_fu_406_p2, "tmp4_fu_406_p2");
    sc_trace(mVcdFile, tmp_fu_389_p2, "tmp_fu_389_p2");
    sc_trace(mVcdFile, grp_fu_208_ce, "grp_fu_208_ce");
    sc_trace(mVcdFile, grp_fu_224_ce, "grp_fu_224_ce");
    sc_trace(mVcdFile, grp_fu_240_ce, "grp_fu_240_ce");
    sc_trace(mVcdFile, grp_fu_256_ce, "grp_fu_256_ce");
    sc_trace(mVcdFile, grp_fu_272_ce, "grp_fu_272_ce");
    sc_trace(mVcdFile, grp_fu_294_ce, "grp_fu_294_ce");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_354, "ap_sig_bdd_354");
    sc_trace(mVcdFile, grp_fu_309_ce, "grp_fu_309_ce");
    sc_trace(mVcdFile, grp_fu_325_ce, "grp_fu_325_ce");
    sc_trace(mVcdFile, grp_fu_341_ce, "grp_fu_341_ce");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_371, "ap_sig_bdd_371");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_379, "ap_sig_bdd_379");
    sc_trace(mVcdFile, grp_fu_356_ce, "grp_fu_356_ce");
    sc_trace(mVcdFile, grp_fu_368_ce, "grp_fu_368_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("fir.hdltvin.dat");
    mHdltvoutHandle.open("fir.hdltvout.dat");
}

fir::~fir() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete fir_mul_32s_32s_32_6_U1;
    delete fir_mul_32s_32s_32_6_U2;
    delete fir_mul_32s_32s_32_6_U3;
    delete fir_mul_32s_32s_32_6_U4;
    delete fir_mul_32s_32s_32_6_U5;
    delete fir_mul_32s_32s_32_6_U6;
    delete fir_mul_32s_32s_32_6_U7;
    delete fir_mul_32s_32s_32_6_U8;
    delete fir_mul_32s_32s_32_6_U9;
    delete fir_mul_32s_32s_32_6_U10;
    delete fir_mul_32s_32s_32_6_U11;
}

void fir::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_ap_vld_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
            x_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, x_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())))) {
            x_ap_vld_preg = x_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, x_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())))) {
            x_preg = x.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_load_5_reg_479 = c_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_load_8_reg_519 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        reg_188 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()))) {
        reg_196 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
  !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)))) {
        reg_200 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0))) {
        shift_reg_0 = x_in_sig.read();
        shift_reg_1 = shift_reg_0.read();
        shift_reg_2 = shift_reg_1.read();
        tmp2_reg_564 = tmp2_fu_378_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        shift_reg_3 = shift_reg_2.read();
        shift_reg_4 = shift_reg_3.read();
        shift_reg_5 = shift_reg_4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        shift_reg_6 = shift_reg_5.read();
        shift_reg_7 = shift_reg_6.read();
        shift_reg_8 = shift_reg_7.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        shift_reg_9 = shift_reg_8.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        tmp1_reg_494 = tmp1_fu_278_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        tmp6_reg_574 = tmp6_fu_383_p2.read();
        tmp_6_5_reg_569 = grp_fu_294_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        tmp_6_2_reg_529 = grp_fu_240_p2.read();
        tmp_6_3_reg_534 = grp_fu_256_p2.read();
        tmp_6_4_reg_539 = grp_fu_272_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        tmp_6_8_reg_579 = grp_fu_341_p2.read();
        tmp_6_9_reg_584 = grp_fu_356_p2.read();
        tmp_6_s_reg_589 = grp_fu_368_p2.read();
    }
}

void fir::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fir::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fir::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void fir::thread_ap_sig_bdd_114() {
    ap_sig_bdd_114 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void fir::thread_ap_sig_bdd_123() {
    ap_sig_bdd_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void fir::thread_ap_sig_bdd_130() {
    ap_sig_bdd_130 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void fir::thread_ap_sig_bdd_160() {
    ap_sig_bdd_160 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void fir::thread_ap_sig_bdd_175() {
    ap_sig_bdd_175 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void fir::thread_ap_sig_bdd_197() {
    ap_sig_bdd_197 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void fir::thread_ap_sig_bdd_224() {
    ap_sig_bdd_224 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void fir::thread_ap_sig_bdd_235() {
    ap_sig_bdd_235 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void fir::thread_ap_sig_bdd_268() {
    ap_sig_bdd_268 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void fir::thread_ap_sig_bdd_34() {
    ap_sig_bdd_34 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void fir::thread_ap_sig_bdd_354() {
    ap_sig_bdd_354 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void fir::thread_ap_sig_bdd_371() {
    ap_sig_bdd_371 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void fir::thread_ap_sig_bdd_379() {
    ap_sig_bdd_379 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void fir::thread_ap_sig_bdd_75() {
    ap_sig_bdd_75 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void fir::thread_ap_sig_bdd_82() {
    ap_sig_bdd_82 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void fir::thread_ap_sig_bdd_91() {
    ap_sig_bdd_91 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void fir::thread_ap_sig_bdd_98() {
    ap_sig_bdd_98 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void fir::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_197.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_114.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_130.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_354.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_bdd_224.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_371.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_379.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_bdd_235.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_bdd_268.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_34.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_75.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_91.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_107.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_123.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_160.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_175.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_82.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void fir::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_98.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void fir::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else {
        c_address0 = "XXXX";
    }
}

void fir::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_208_ce() {
    grp_fu_208_ce = ap_const_logic_1;
}

void fir::thread_grp_fu_224_ce() {
    grp_fu_224_ce = ap_const_logic_1;
}

void fir::thread_grp_fu_240_ce() {
    grp_fu_240_ce = ap_const_logic_1;
}

void fir::thread_grp_fu_256_ce() {
    grp_fu_256_ce = ap_const_logic_1;
}

void fir::thread_grp_fu_272_ce() {
    grp_fu_272_ce = ap_const_logic_1;
}

void fir::thread_grp_fu_294_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        grp_fu_294_ce = ap_const_logic_1;
    } else {
        grp_fu_294_ce = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_309_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        grp_fu_309_ce = ap_const_logic_1;
    } else {
        grp_fu_309_ce = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_325_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        grp_fu_325_ce = ap_const_logic_1;
    } else {
        grp_fu_325_ce = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_341_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        grp_fu_341_ce = ap_const_logic_1;
    } else {
        grp_fu_341_ce = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_356_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        grp_fu_356_ce = ap_const_logic_1;
    } else {
        grp_fu_356_ce = ap_const_logic_0;
    }
}

void fir::thread_grp_fu_368_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) && 
          !esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        grp_fu_368_ce = ap_const_logic_1;
    } else {
        grp_fu_368_ce = ap_const_logic_0;
    }
}

void fir::thread_tmp1_fu_278_p2() {
    tmp1_fu_278_p2 = (!grp_fu_224_p2.read().is_01() || !grp_fu_208_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_224_p2.read()) + sc_biguint<32>(grp_fu_208_p2.read()));
}

void fir::thread_tmp2_fu_378_p2() {
    tmp2_fu_378_p2 = (!tmp3_fu_374_p2.read().is_01() || !tmp_6_2_reg_529.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_fu_374_p2.read()) + sc_biguint<32>(tmp_6_2_reg_529.read()));
}

void fir::thread_tmp3_fu_374_p2() {
    tmp3_fu_374_p2 = (!tmp_6_3_reg_534.read().is_01() || !tmp_6_4_reg_539.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_3_reg_534.read()) + sc_biguint<32>(tmp_6_4_reg_539.read()));
}

void fir::thread_tmp4_fu_406_p2() {
    tmp4_fu_406_p2 = (!tmp7_fu_401_p2.read().is_01() || !tmp5_fu_393_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_401_p2.read()) + sc_biguint<32>(tmp5_fu_393_p2.read()));
}

void fir::thread_tmp5_fu_393_p2() {
    tmp5_fu_393_p2 = (!tmp6_reg_574.read().is_01() || !tmp_6_5_reg_569.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_reg_574.read()) + sc_biguint<32>(tmp_6_5_reg_569.read()));
}

void fir::thread_tmp6_fu_383_p2() {
    tmp6_fu_383_p2 = (!grp_fu_309_p2.read().is_01() || !grp_fu_325_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_309_p2.read()) + sc_biguint<32>(grp_fu_325_p2.read()));
}

void fir::thread_tmp7_fu_401_p2() {
    tmp7_fu_401_p2 = (!tmp8_fu_397_p2.read().is_01() || !tmp_6_8_reg_579.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_397_p2.read()) + sc_biguint<32>(tmp_6_8_reg_579.read()));
}

void fir::thread_tmp8_fu_397_p2() {
    tmp8_fu_397_p2 = (!tmp_6_9_reg_584.read().is_01() || !tmp_6_s_reg_589.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_9_reg_584.read()) + sc_biguint<32>(tmp_6_s_reg_589.read()));
}

void fir::thread_tmp_fu_389_p2() {
    tmp_fu_389_p2 = (!tmp2_reg_564.read().is_01() || !tmp1_reg_494.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp2_reg_564.read()) + sc_biguint<32>(tmp1_reg_494.read()));
}

void fir::thread_x_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_ap_vld.read())) {
        x_ap_vld_in_sig = x_ap_vld.read();
    } else {
        x_ap_vld_in_sig = x_ap_vld_preg.read();
    }
}

void fir::thread_x_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_ap_vld.read())) {
        x_in_sig = x.read();
    } else {
        x_in_sig = x_preg.read();
    }
}

void fir::thread_y() {
    y = (!tmp4_fu_406_p2.read().is_01() || !tmp_fu_389_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_fu_406_p2.read()) + sc_biguint<32>(tmp_fu_389_p2.read()));
}

void fir::thread_y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        y_ap_vld = ap_const_logic_1;
    } else {
        y_ap_vld = ap_const_logic_0;
    }
}

void fir::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(x_ap_vld_in_sig.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void fir::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_ap_vld\" :  \"" << y_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q0\" :  \"" << c_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x\" :  \"" << x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_ap_vld\" :  \"" << x_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


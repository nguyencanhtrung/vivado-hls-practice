-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_xfft2real_Loop_realfft_be_descramble_pro is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dout_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dout_V_TVALID : OUT STD_LOGIC;
    dout_V_TREADY : IN STD_LOGIC;
    descramble_buf_0_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_imag_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_imag_V_ce1 : OUT STD_LOGIC;
    descramble_buf_0_M_imag_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_real_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_real_V_ce1 : OUT STD_LOGIC;
    descramble_buf_0_M_real_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of hls_xfft2real_Loop_realfft_be_descramble_pro is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st14_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal twid_rom_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal twid_rom_0_ce0 : STD_LOGIC;
    signal twid_rom_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal twid_rom_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal twid_rom_1_ce0 : STD_LOGIC;
    signal twid_rom_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_0_i_reg_205 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_i1_0_i_reg_205_pp0_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_90 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal exitcond_i_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_dout_V_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppstg_i1_0_i_reg_205_pp0_it2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_i1_0_i_reg_205_pp0_it3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_i1_0_i_reg_205_pp0_it4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_i_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i_reg_653_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_241_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_657 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_662_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_263_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_666 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_671 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_23_reg_671_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_23_reg_671_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal descramble_buf_0_M_real_V_lo_1_reg_717 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_1_M_real_V_lo_1_reg_722 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_lo_1_reg_727 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_1_M_imag_V_lo_1_reg_732 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal descramble_buf_0_M_real_V_lo_reg_743 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_1_M_real_V_lo_reg_748 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_0_M_imag_V_lo_reg_753 : STD_LOGIC_VECTOR (15 downto 0);
    signal descramble_buf_1_M_imag_V_lo_reg_758 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_fu_310_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_763 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_reg_768 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_326_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_773 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_773_pp0_it5 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_773_pp0_it6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_773_pp0_it7 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_773_pp0_it8 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_331_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_779 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_2_reg_779_pp0_it5 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_2_reg_779_pp0_it6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_2_reg_779_pp0_it7 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_p_Val2_2_reg_779_pp0_it8 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_346_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_785 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_2_fu_352_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_2_reg_790 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_24_reg_795_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_800 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_tmp_3_reg_800_pp0_it5 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_380_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_1_reg_805 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_5_fu_386_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_5_reg_810 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_reg_815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_25_reg_815_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_820 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_tmp_14_reg_820_pp0_it5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_825 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_reg_830 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_27_reg_830_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_835 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_835_pp0_it5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_840 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_845 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_real_V_read_assign_fu_513_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_real_V_read_assign_reg_850 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_reg_855 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_fu_542_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_870 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_real_V_reg_870_pp0_it7 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_real_V_reg_870_pp0_it8 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_real_V_reg_870_pp0_it9 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_fu_553_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_875 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it7 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it8 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it9 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_imag_V_read_assign_fu_564_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_imag_V_read_assign_reg_880 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_570_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i_reg_885 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_i_fu_574_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_i_fu_577_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_i_reg_897 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_i_fu_581_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_629_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp1_cast_i_reg_909 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_641_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_cast_i_reg_914 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_647_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_9_reg_919 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_635_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_10_reg_924 : STD_LOGIC_VECTOR (30 downto 0);
    signal cdata_M_real_V_fu_584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata_M_real_V_reg_929 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_588_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_V_1_fu_610_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_V_1_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_V_fu_615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_V_reg_944 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_bdd_386 : BOOLEAN;
    signal i1_0_i_phi_fu_209_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_M_real_V_phi_fu_220_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata_M_imag_V_phi_fu_229_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal newIndex5_fu_275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_fu_286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_dout_V_TREADY : STD_LOGIC := '0';
    signal tmp_fu_247_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_257_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_282_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_294_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_3_fu_315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_342_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_336_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_376_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_fu_339_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_19_tr_fu_444_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg1_fu_450_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_24_tr_fu_466_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg2_fu_469_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal t_V_2_fu_485_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_503_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_tr_fu_447_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg_fu_521_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_fu_537_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_559_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_real_V_fu_592_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_r_M_imag_V_3_fu_601_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_629_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_635_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_635_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_641_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_647_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_647_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_629_ce : STD_LOGIC;
    signal grp_fu_635_ce : STD_LOGIC;
    signal grp_fu_641_ce : STD_LOGIC;
    signal grp_fu_647_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st14_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_692 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_bdd_422 : BOOLEAN;
    signal ap_sig_bdd_404 : BOOLEAN;
    signal ap_sig_bdd_401 : BOOLEAN;

    component hls_xfft2real_mul_mul_16s_16s_31_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_mac_muladd_16s_16s_31s_31_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_mac_mulsub_16s_16s_31s_31_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    twid_rom_0_U : component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_0
    generic map (
        DataWidth => 16,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_0_address0,
        ce0 => twid_rom_0_ce0,
        q0 => twid_rom_0_q0);

    twid_rom_1_U : component hls_xfft2real_Loop_realfft_be_descramble_pro_twid_rom_1
    generic map (
        DataWidth => 16,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_1_address0,
        ce0 => twid_rom_1_ce0,
        q0 => twid_rom_1_q0);

    hls_xfft2real_mul_mul_16s_16s_31_3_U7 : component hls_xfft2real_mul_mul_16s_16s_31_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => twid_rom_0_q0,
        din1 => grp_fu_629_p1,
        ce => grp_fu_629_ce,
        dout => grp_fu_629_p2);

    hls_xfft2real_mac_muladd_16s_16s_31s_31_3_U8 : component hls_xfft2real_mac_muladd_16s_16s_31s_31_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_635_p0,
        din1 => grp_fu_635_p1,
        din2 => tmp_3_cast_i_reg_914,
        ce => grp_fu_635_ce,
        dout => grp_fu_635_p3);

    hls_xfft2real_mul_mul_16s_16s_31_3_U9 : component hls_xfft2real_mul_mul_16s_16s_31_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => twid_rom_1_q0,
        din1 => grp_fu_641_p1,
        ce => grp_fu_641_ce,
        dout => grp_fu_641_p2);

    hls_xfft2real_mac_mulsub_16s_16s_31s_31_3_U10 : component hls_xfft2real_mac_mulsub_16s_16s_31s_31_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_647_p0,
        din1 => grp_fu_647_p1,
        din2 => tmp1_cast_i_reg_909,
        ce => grp_fu_647_ce,
        dout => grp_fu_647_p3);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_dout_V_TREADY assign process. --
    ap_reg_ioackin_dout_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_dout_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_422) then
                    if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                        ap_reg_ioackin_dout_V_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = dout_V_TREADY)) then 
                        ap_reg_ioackin_dout_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_lv1_0 = exitcond_i_fu_235_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_386))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = exitcond_i_fu_235_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_386)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_lv1_0 = exitcond_i_fu_235_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_386))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11 assign process. --
    ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_401) then
                if (ap_sig_bdd_404) then 
                    ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11 <= p_Val2_1_reg_934;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11 <= ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it10;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11 assign process. --
    ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_401) then
                if (ap_sig_bdd_404) then 
                    ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11 <= cdata_M_real_V_reg_929;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11 <= ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it10;
                end if;
            end if; 
        end if;
    end process;

    -- i1_0_i_reg_205 assign process. --
    i1_0_i_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_386))) then 
                i1_0_i_reg_205 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (exitcond_i_reg_653 = ap_const_lv1_0))) then 
                i1_0_i_reg_205 <= i_reg_657;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it1 <= exitcond_i_reg_653;
                ap_reg_ppstg_i1_0_i_reg_205_pp0_it1 <= i1_0_i_reg_205;
                ap_reg_ppstg_tmp_23_reg_671_pp0_it1 <= tmp_23_reg_671;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it1 <= tmp_s_reg_662;
                exitcond_i_reg_653 <= exitcond_i_fu_235_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) then
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it9;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it2 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it1;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it3 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it2;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it4 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it3;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it5 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it4;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it6 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it5;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it7 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it6;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it8 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it7;
                ap_reg_ppstg_exitcond_i_reg_653_pp0_it9 <= ap_reg_ppstg_exitcond_i_reg_653_pp0_it8;
                ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it7 <= f_M_imag_V_reg_875;
                ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it8 <= ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it7;
                ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it9 <= ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it8;
                ap_reg_ppstg_f_M_real_V_reg_870_pp0_it7 <= f_M_real_V_reg_870;
                ap_reg_ppstg_f_M_real_V_reg_870_pp0_it8 <= ap_reg_ppstg_f_M_real_V_reg_870_pp0_it7;
                ap_reg_ppstg_f_M_real_V_reg_870_pp0_it9 <= ap_reg_ppstg_f_M_real_V_reg_870_pp0_it8;
                ap_reg_ppstg_i1_0_i_reg_205_pp0_it2 <= ap_reg_ppstg_i1_0_i_reg_205_pp0_it1;
                ap_reg_ppstg_i1_0_i_reg_205_pp0_it3 <= ap_reg_ppstg_i1_0_i_reg_205_pp0_it2;
                ap_reg_ppstg_i1_0_i_reg_205_pp0_it4 <= ap_reg_ppstg_i1_0_i_reg_205_pp0_it3;
                ap_reg_ppstg_p_Val2_2_reg_779_pp0_it5 <= p_Val2_2_reg_779;
                ap_reg_ppstg_p_Val2_2_reg_779_pp0_it6 <= ap_reg_ppstg_p_Val2_2_reg_779_pp0_it5;
                ap_reg_ppstg_p_Val2_2_reg_779_pp0_it7 <= ap_reg_ppstg_p_Val2_2_reg_779_pp0_it6;
                ap_reg_ppstg_p_Val2_2_reg_779_pp0_it8 <= ap_reg_ppstg_p_Val2_2_reg_779_pp0_it7;
                ap_reg_ppstg_p_Val2_s_reg_773_pp0_it5 <= p_Val2_s_reg_773;
                ap_reg_ppstg_p_Val2_s_reg_773_pp0_it6 <= ap_reg_ppstg_p_Val2_s_reg_773_pp0_it5;
                ap_reg_ppstg_p_Val2_s_reg_773_pp0_it7 <= ap_reg_ppstg_p_Val2_s_reg_773_pp0_it6;
                ap_reg_ppstg_p_Val2_s_reg_773_pp0_it8 <= ap_reg_ppstg_p_Val2_s_reg_773_pp0_it7;
                ap_reg_ppstg_tmp_14_reg_820_pp0_it5 <= tmp_14_reg_820;
                ap_reg_ppstg_tmp_20_reg_835_pp0_it5 <= tmp_20_reg_835;
                ap_reg_ppstg_tmp_23_reg_671_pp0_it2 <= ap_reg_ppstg_tmp_23_reg_671_pp0_it1;
                ap_reg_ppstg_tmp_24_reg_795_pp0_it5 <= tmp_24_reg_795;
                ap_reg_ppstg_tmp_25_reg_815_pp0_it5 <= tmp_25_reg_815;
                ap_reg_ppstg_tmp_27_reg_830_pp0_it5 <= tmp_27_reg_830;
                ap_reg_ppstg_tmp_3_reg_800_pp0_it5 <= tmp_3_reg_800;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it10 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it9;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it2 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it1;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it3 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it2;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it4 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it3;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it5 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it4;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it6 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it5;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it7 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it6;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it8 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it7;
                ap_reg_ppstg_tmp_s_reg_662_pp0_it9 <= ap_reg_ppstg_tmp_s_reg_662_pp0_it8;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it8) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it8)))) then
                cdata_M_real_V_reg_929 <= cdata_M_real_V_fu_584_p2;
                p_Val2_1_reg_934 <= p_Val2_1_fu_588_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_23_reg_671_pp0_it1))) then
                descramble_buf_0_M_imag_V_lo_1_reg_727 <= descramble_buf_0_M_imag_V_q0;
                descramble_buf_0_M_real_V_lo_1_reg_717 <= descramble_buf_0_M_real_V_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it2))) then
                descramble_buf_0_M_imag_V_lo_reg_753 <= descramble_buf_0_M_imag_V_q1;
                descramble_buf_0_M_real_V_lo_reg_743 <= descramble_buf_0_M_real_V_q1;
                descramble_buf_1_M_imag_V_lo_reg_758 <= descramble_buf_1_M_imag_V_q1;
                descramble_buf_1_M_real_V_lo_reg_748 <= descramble_buf_1_M_real_V_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it1) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_23_reg_671_pp0_it1)))) then
                descramble_buf_1_M_imag_V_lo_1_reg_732 <= descramble_buf_1_M_imag_V_q0;
                descramble_buf_1_M_real_V_lo_1_reg_722 <= descramble_buf_1_M_real_V_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it5) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it5))) then
                f_M_imag_V_reg_875 <= f_M_imag_V_fu_553_p3;
                f_M_real_V_reg_870 <= f_M_real_V_fu_542_p3;
                p_y_M_imag_V_read_assign_reg_880 <= p_y_M_imag_V_read_assign_fu_564_p3;
                tmp_2_i_reg_897 <= tmp_2_i_fu_577_p1;
                tmp_i_reg_885 <= tmp_i_fu_570_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then
                i_reg_657 <= i_fu_241_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it2))) then
                icmp_reg_737 <= icmp_fu_304_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it8) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it8))) then
                p_Val2_10_reg_924 <= grp_fu_635_p3;
                p_Val2_9_reg_919 <= grp_fu_647_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it3))) then
                p_Val2_2_reg_779 <= p_Val2_2_fu_331_p3;
                p_Val2_s_reg_773 <= p_Val2_s_fu_326_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it2))) then
                p_Val2_4_reg_763 <= p_Val2_4_fu_310_p3;
                p_Val2_6_reg_768 <= p_Val2_6_fu_320_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it3))) then
                p_Val2_5_reg_810 <= p_Val2_5_fu_386_p2;
                r_V_1_reg_805 <= r_V_1_fu_380_p2;
                r_V_2_reg_790 <= r_V_2_fu_352_p2;
                r_V_reg_785 <= r_V_fu_346_p2;
                tmp_14_reg_820 <= r_V_1_fu_380_p2(16 downto 1);
                tmp_16_reg_825 <= p_Val2_5_fu_386_p2(16 downto 1);
                tmp_20_reg_835 <= r_V_2_fu_352_p2(16 downto 1);
                tmp_24_reg_795 <= r_V_fu_346_p2(16 downto 16);
                tmp_25_reg_815 <= r_V_1_fu_380_p2(16 downto 16);
                tmp_27_reg_830 <= r_V_2_fu_352_p2(16 downto 16);
                tmp_3_reg_800 <= r_V_fu_346_p2(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it9) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it9))) then
                p_r_M_imag_V_reg_944 <= p_r_M_imag_V_fu_615_p2;
                p_r_M_real_V_1_reg_939 <= p_r_M_real_V_1_fu_610_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it4))) then
                p_y_M_real_V_read_assign_reg_850 <= p_y_M_real_V_read_assign_fu_513_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it7) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it7))) then
                tmp1_cast_i_reg_909 <= grp_fu_629_p2;
                tmp_3_cast_i_reg_914 <= grp_fu_641_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it4) and not((ap_const_lv1_0 = tmp_25_reg_815)))) then
                tmp_13_reg_845 <= p_neg2_fu_469_p2(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = exitcond_i_fu_235_p2) and (ap_const_lv1_0 = tmp_s_fu_251_p2))) then
                tmp_18_reg_666 <= tmp_18_fu_263_p1;
                tmp_23_reg_671 <= tmp_4_fu_257_p2(8 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it4) and not((ap_const_lv1_0 = tmp_27_reg_830)))) then
                tmp_19_reg_855 <= p_neg_fu_521_p2(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it4) and not((ap_const_lv1_0 = tmp_24_reg_795)))) then
                tmp_8_reg_840 <= p_neg1_fu_450_p2(16 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and (ap_const_lv1_0 = exitcond_i_fu_235_p2))) then
                tmp_s_reg_662 <= tmp_s_fu_251_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it10, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11, exitcond_i_fu_235_p2, ap_sig_bdd_386)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_386)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it10)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_lv1_0 = exitcond_i_fu_235_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it10))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) and not((ap_const_lv1_0 = exitcond_i_fu_235_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st14_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st14_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st14_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it10 <= "XXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it10 <= "XXXXXXXXXXXXXXXX";

    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_386 assign process. --
    ap_sig_bdd_386_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_386 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_401 assign process. --
    ap_sig_bdd_401_assign_proc : process(ap_reg_ppiten_pp0_it10, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
                ap_sig_bdd_401 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))));
    end process;


    -- ap_sig_bdd_404 assign process. --
    ap_sig_bdd_404_assign_proc : process(ap_reg_ppstg_exitcond_i_reg_653_pp0_it9, ap_reg_ppstg_tmp_s_reg_662_pp0_it9)
    begin
                ap_sig_bdd_404 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_i_reg_653_pp0_it9) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it9)));
    end process;


    -- ap_sig_bdd_422 assign process. --
    ap_sig_bdd_422_assign_proc : process(ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_reg_ppiten_pp0_it11)
    begin
                ap_sig_bdd_422 <= ((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11));
    end process;


    -- ap_sig_bdd_692 assign process. --
    ap_sig_bdd_692_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_692 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_90 assign process. --
    ap_sig_bdd_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_90 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_90)
    begin
        if (ap_sig_bdd_90) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_2 assign process. --
    ap_sig_cseq_ST_st14_fsm_2_assign_proc : process(ap_sig_bdd_692)
    begin
        if (ap_sig_bdd_692) then 
            ap_sig_cseq_ST_st14_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_dout_V_TREADY assign process. --
    ap_sig_ioackin_dout_V_TREADY_assign_proc : process(dout_V_TREADY, ap_reg_ioackin_dout_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_dout_V_TREADY)) then 
            ap_sig_ioackin_dout_V_TREADY <= dout_V_TREADY;
        else 
            ap_sig_ioackin_dout_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- cdata_M_imag_V_phi_fu_229_p4 assign process. --
    cdata_M_imag_V_phi_fu_229_p4_assign_proc : process(ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppstg_tmp_s_reg_662_pp0_it10, p_r_M_imag_V_reg_944, ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11)
    begin
        if (((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it10))) then 
            cdata_M_imag_V_phi_fu_229_p4 <= p_r_M_imag_V_reg_944;
        else 
            cdata_M_imag_V_phi_fu_229_p4 <= ap_reg_phiprechg_cdata_M_imag_V_reg_226pp0_it11;
        end if; 
    end process;

    cdata_M_real_V_fu_584_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_p_Val2_2_reg_779_pp0_it8) + unsigned(ap_reg_ppstg_p_Val2_s_reg_773_pp0_it8));
    descramble_buf_0_M_imag_V_address0 <= newIndex5_fu_275_p1(8 - 1 downto 0);
    descramble_buf_0_M_imag_V_address1 <= newIndex3_fu_286_p1(8 - 1 downto 0);

    -- descramble_buf_0_M_imag_V_ce0 assign process. --
    descramble_buf_0_M_imag_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- descramble_buf_0_M_imag_V_ce1 assign process. --
    descramble_buf_0_M_imag_V_ce1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_0_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_0_M_real_V_address0 <= newIndex5_fu_275_p1(8 - 1 downto 0);
    descramble_buf_0_M_real_V_address1 <= newIndex3_fu_286_p1(8 - 1 downto 0);

    -- descramble_buf_0_M_real_V_ce0 assign process. --
    descramble_buf_0_M_real_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- descramble_buf_0_M_real_V_ce1 assign process. --
    descramble_buf_0_M_real_V_ce1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_0_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_imag_V_address0 <= newIndex5_fu_275_p1(8 - 1 downto 0);
    descramble_buf_1_M_imag_V_address1 <= newIndex3_fu_286_p1(8 - 1 downto 0);

    -- descramble_buf_1_M_imag_V_ce0 assign process. --
    descramble_buf_1_M_imag_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- descramble_buf_1_M_imag_V_ce1 assign process. --
    descramble_buf_1_M_imag_V_ce1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_real_V_address0 <= newIndex5_fu_275_p1(8 - 1 downto 0);
    descramble_buf_1_M_real_V_address1 <= newIndex3_fu_286_p1(8 - 1 downto 0);

    -- descramble_buf_1_M_real_V_ce0 assign process. --
    descramble_buf_1_M_real_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- descramble_buf_1_M_real_V_ce1 assign process. --
    descramble_buf_1_M_real_V_ce1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dout_V_TDATA <= (cdata_M_imag_V_phi_fu_229_p4 & tmp_M_real_V_phi_fu_220_p4);

    -- dout_V_TVALID assign process. --
    dout_V_TVALID_assign_proc : process(ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ioackin_dout_V_TREADY)
    begin
        if (((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ioackin_dout_V_TREADY))) then 
            dout_V_TVALID <= ap_const_logic_1;
        else 
            dout_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_i_fu_235_p2 <= "1" when (i1_0_i_phi_fu_209_p4 = ap_const_lv10_200) else "0";
    f_M_imag_V_fu_553_p3 <= 
        tmp_15_fu_548_p2 when (ap_reg_ppstg_tmp_25_reg_815_pp0_it5(0) = '1') else 
        ap_reg_ppstg_tmp_14_reg_820_pp0_it5;
    f_M_real_V_fu_542_p3 <= 
        tmp_10_fu_537_p2 when (ap_reg_ppstg_tmp_24_reg_795_pp0_it5(0) = '1') else 
        ap_reg_ppstg_tmp_3_reg_800_pp0_it5;

    -- grp_fu_629_ce assign process. --
    grp_fu_629_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            grp_fu_629_ce <= ap_const_logic_1;
        else 
            grp_fu_629_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_629_p1 <= tmp_1_i_fu_574_p1(16 - 1 downto 0);

    -- grp_fu_635_ce assign process. --
    grp_fu_635_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            grp_fu_635_ce <= ap_const_logic_1;
        else 
            grp_fu_635_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_635_p0 <= tmp_i_reg_885(16 - 1 downto 0);
    grp_fu_635_p1 <= tmp_3_i_fu_581_p1(16 - 1 downto 0);

    -- grp_fu_641_ce assign process. --
    grp_fu_641_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            grp_fu_641_ce <= ap_const_logic_1;
        else 
            grp_fu_641_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_641_p1 <= tmp_1_i_fu_574_p1(16 - 1 downto 0);

    -- grp_fu_647_ce assign process. --
    grp_fu_647_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            grp_fu_647_ce <= ap_const_logic_1;
        else 
            grp_fu_647_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_647_p0 <= tmp_2_i_reg_897(16 - 1 downto 0);
    grp_fu_647_p1 <= tmp_3_i_fu_581_p1(16 - 1 downto 0);

    -- i1_0_i_phi_fu_209_p4 assign process. --
    i1_0_i_phi_fu_209_p4_assign_proc : process(i1_0_i_reg_205, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond_i_reg_653, i_reg_657)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_i_reg_653 = ap_const_lv1_0))) then 
            i1_0_i_phi_fu_209_p4 <= i_reg_657;
        else 
            i1_0_i_phi_fu_209_p4 <= i1_0_i_reg_205;
        end if; 
    end process;

    i_fu_241_p2 <= std_logic_vector(unsigned(i1_0_i_phi_fu_209_p4) + unsigned(ap_const_lv10_1));
    icmp_fu_304_p2 <= "1" when (tmp_12_fu_294_p4 = ap_const_lv2_0) else "0";
    newIndex3_fu_286_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_282_p1),64));
    newIndex5_fu_275_p1 <= std_logic_vector(resize(unsigned(tmp_18_reg_666),64));
    p_Val2_1_fu_588_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_p_Val2_s_reg_773_pp0_it8) - unsigned(ap_reg_ppstg_p_Val2_2_reg_779_pp0_it8));
    p_Val2_2_fu_331_p3 <= 
        descramble_buf_0_M_imag_V_lo_reg_753 when (icmp_reg_737(0) = '1') else 
        descramble_buf_1_M_imag_V_lo_reg_758;
    p_Val2_3_fu_315_p3 <= 
        descramble_buf_1_M_imag_V_lo_1_reg_732 when (ap_reg_ppstg_tmp_23_reg_671_pp0_it2(0) = '1') else 
        descramble_buf_0_M_imag_V_lo_1_reg_727;
    p_Val2_4_fu_310_p3 <= 
        descramble_buf_1_M_real_V_lo_1_reg_722 when (ap_reg_ppstg_tmp_23_reg_671_pp0_it2(0) = '1') else 
        descramble_buf_0_M_real_V_lo_1_reg_717;
    p_Val2_5_fu_386_p2 <= std_logic_vector(signed(tmp_1_fu_339_p1) - signed(tmp_11_fu_376_p1));
    p_Val2_6_fu_320_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_3_fu_315_p3));
    p_Val2_s_fu_326_p3 <= 
        descramble_buf_0_M_real_V_lo_reg_743 when (icmp_reg_737(0) = '1') else 
        descramble_buf_1_M_real_V_lo_reg_748;
    p_neg1_fu_450_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_19_tr_fu_444_p1));
    p_neg2_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_24_tr_fu_466_p1));
    p_neg_fu_521_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_31_tr_fu_447_p1));
    p_neg_t_fu_498_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_16_reg_825));
    p_r_M_imag_V_3_fu_601_p4 <= p_Val2_10_reg_924(30 downto 15);
    p_r_M_imag_V_fu_615_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_f_M_imag_V_reg_875_pp0_it9) + unsigned(p_r_M_imag_V_3_fu_601_p4));
    p_r_M_real_V_1_fu_610_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_f_M_real_V_reg_870_pp0_it9) + unsigned(p_r_M_real_V_fu_592_p4));
    p_r_M_real_V_fu_592_p4 <= p_Val2_9_reg_919(30 downto 15);
    p_y_M_imag_V_read_assign_fu_564_p3 <= 
        tmp_21_fu_559_p2 when (ap_reg_ppstg_tmp_27_reg_830_pp0_it5(0) = '1') else 
        ap_reg_ppstg_tmp_20_reg_835_pp0_it5;
    p_y_M_real_V_read_assign_fu_513_p3 <= 
        p_neg_t_fu_498_p2 when (tmp_26_fu_490_p3(0) = '1') else 
        tmp_17_fu_503_p4;
    r_V_1_fu_380_p2 <= std_logic_vector(signed(tmp_11_fu_376_p1) + signed(tmp_1_fu_339_p1));
    r_V_2_fu_352_p2 <= std_logic_vector(signed(tmp_6_fu_336_p1) - signed(tmp_5_fu_342_p1));
    r_V_fu_346_p2 <= std_logic_vector(signed(tmp_5_fu_342_p1) + signed(tmp_6_fu_336_p1));
    t_V_2_fu_485_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(p_Val2_5_reg_810));
    tmp_10_fu_537_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_8_reg_840));
        tmp_11_fu_376_p1 <= std_logic_vector(resize(signed(p_Val2_2_fu_331_p3),17));

    tmp_12_fu_294_p4 <= ap_reg_ppstg_i1_0_i_reg_205_pp0_it2(9 downto 8);
    tmp_15_fu_548_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_13_reg_845));
    tmp_17_fu_503_p4 <= t_V_2_fu_485_p2(16 downto 1);
    tmp_18_fu_263_p1 <= tmp_4_fu_257_p2(8 - 1 downto 0);
    tmp_19_tr_fu_444_p1 <= std_logic_vector(resize(unsigned(r_V_reg_785),18));
        tmp_1_fu_339_p1 <= std_logic_vector(resize(signed(p_Val2_6_reg_768),17));

        tmp_1_i_fu_574_p1 <= std_logic_vector(resize(signed(p_y_M_real_V_read_assign_reg_850),31));

    tmp_21_fu_559_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_19_reg_855));
    tmp_24_tr_fu_466_p1 <= std_logic_vector(resize(unsigned(r_V_1_reg_805),18));
    tmp_26_fu_490_p3 <= t_V_2_fu_485_p2(16 downto 16);
        tmp_2_i_fu_577_p1 <= std_logic_vector(resize(signed(twid_rom_1_q0),31));

    tmp_31_tr_fu_447_p1 <= std_logic_vector(resize(unsigned(r_V_2_reg_790),18));
        tmp_3_i_fu_581_p1 <= std_logic_vector(resize(signed(p_y_M_imag_V_read_assign_reg_880),31));

    tmp_4_fu_257_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_fu_247_p1));
        tmp_5_fu_342_p1 <= std_logic_vector(resize(signed(p_Val2_s_fu_326_p3),17));

        tmp_6_fu_336_p1 <= std_logic_vector(resize(signed(p_Val2_4_reg_763),17));

    tmp_7_fu_282_p1 <= ap_reg_ppstg_i1_0_i_reg_205_pp0_it1(8 - 1 downto 0);
    tmp_9_fu_438_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_i1_0_i_reg_205_pp0_it4),64));

    -- tmp_M_real_V_phi_fu_220_p4 assign process. --
    tmp_M_real_V_phi_fu_220_p4_assign_proc : process(ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppstg_tmp_s_reg_662_pp0_it10, p_r_M_real_V_1_reg_939, ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11)
    begin
        if (((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_s_reg_662_pp0_it10))) then 
            tmp_M_real_V_phi_fu_220_p4 <= p_r_M_real_V_1_reg_939;
        else 
            tmp_M_real_V_phi_fu_220_p4 <= ap_reg_phiprechg_tmp_M_real_V_reg_217pp0_it11;
        end if; 
    end process;

    tmp_fu_247_p1 <= i1_0_i_phi_fu_209_p4(9 - 1 downto 0);
        tmp_i_fu_570_p1 <= std_logic_vector(resize(signed(twid_rom_0_q0),31));

    tmp_s_fu_251_p2 <= "1" when (i1_0_i_phi_fu_209_p4 = ap_const_lv10_0) else "0";
    twid_rom_0_address0 <= tmp_9_fu_438_p1(9 - 1 downto 0);

    -- twid_rom_0_ce0 assign process. --
    twid_rom_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it5, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            twid_rom_0_ce0 <= ap_const_logic_1;
        else 
            twid_rom_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_1_address0 <= tmp_9_fu_438_p1(9 - 1 downto 0);

    -- twid_rom_1_ce0 assign process. --
    twid_rom_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it5, ap_reg_ppstg_exitcond_i_reg_653_pp0_it10, ap_sig_ioackin_dout_V_TREADY, ap_reg_ppiten_pp0_it11)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_reg_ppstg_exitcond_i_reg_653_pp0_it10 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_dout_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it11))))) then 
            twid_rom_1_ce0 <= ap_const_logic_1;
        else 
            twid_rom_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _hls_real2xfft_window_fn_HH_
#define _hls_real2xfft_window_fn_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_real2xfft_mul_mul_16s_15ns_31_3.h"
#include "hls_real2xfft_window_fn_coeff_tab1_0.h"
#include "hls_real2xfft_window_fn_coeff_tab1_1.h"

namespace ap_rtl {

struct hls_real2xfft_window_fn : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > indata_0_V_dout;
    sc_in< sc_logic > indata_0_V_empty_n;
    sc_out< sc_logic > indata_0_V_read;
    sc_in< sc_lv<16> > indata_1_V_dout;
    sc_in< sc_logic > indata_1_V_empty_n;
    sc_out< sc_logic > indata_1_V_read;
    sc_out< sc_lv<16> > outdata_0_V_din;
    sc_in< sc_logic > outdata_0_V_full_n;
    sc_out< sc_logic > outdata_0_V_write;
    sc_out< sc_lv<16> > outdata_1_V_din;
    sc_in< sc_logic > outdata_1_V_full_n;
    sc_out< sc_logic > outdata_1_V_write;


    // Module declarations
    hls_real2xfft_window_fn(sc_module_name name);
    SC_HAS_PROCESS(hls_real2xfft_window_fn);

    ~hls_real2xfft_window_fn();

    sc_trace_file* mVcdFile;

    hls_real2xfft_window_fn_coeff_tab1_0* coeff_tab1_0_U;
    hls_real2xfft_window_fn_coeff_tab1_1* coeff_tab1_1_U;
    hls_real2xfft_mul_mul_16s_15ns_31_3<1,3,16,15,31>* hls_real2xfft_mul_mul_16s_15ns_31_3_U13;
    hls_real2xfft_mul_mul_16s_15ns_31_3<1,3,16,15,31>* hls_real2xfft_mul_mul_16s_15ns_31_3_U14;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<1> > exitcond_fu_184_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_37;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_53;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< bool > ap_sig_bdd_70;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<9> > coeff_tab1_0_address0;
    sc_signal< sc_logic > coeff_tab1_0_ce0;
    sc_signal< sc_lv<15> > coeff_tab1_0_q0;
    sc_signal< sc_lv<9> > coeff_tab1_1_address0;
    sc_signal< sc_logic > coeff_tab1_1_ce0;
    sc_signal< sc_lv<15> > coeff_tab1_1_q0;
    sc_signal< sc_lv<10> > i9_reg_140;
    sc_signal< sc_lv<10> > tmp_2_fu_180_p1;
    sc_signal< sc_lv<10> > tmp_2_reg_252;
    sc_signal< sc_lv<1> > exitcond_reg_257;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_257_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_257_pp0_it2;
    sc_signal< bool > ap_sig_bdd_125;
    sc_signal< sc_lv<10> > i9_phi_fu_144_p6;
    sc_signal< sc_lv<64> > newIndex1_fu_168_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_158_p4;
    sc_signal< sc_lv<11> > i9_cast_fu_154_p1;
    sc_signal< sc_lv<11> > i_1_1_fu_174_p2;
    sc_signal< sc_lv<31> > grp_fu_235_p2;
    sc_signal< sc_lv<31> > grp_fu_228_p2;
    sc_signal< sc_lv<15> > grp_fu_228_p1;
    sc_signal< sc_lv<15> > grp_fu_235_p1;
    sc_signal< sc_logic > grp_fu_228_ce;
    sc_signal< sc_logic > grp_fu_235_ce;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_pprstidle_pp0;
    sc_signal< sc_lv<31> > grp_fu_228_p10;
    sc_signal< sc_lv<31> > grp_fu_235_p10;
    sc_signal< bool > ap_sig_bdd_131;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_2;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1E;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_ppiten_pp0_it0();
    void thread_ap_sig_bdd_125();
    void thread_ap_sig_bdd_131();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_37();
    void thread_ap_sig_bdd_53();
    void thread_ap_sig_bdd_70();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_pprstidle_pp0();
    void thread_coeff_tab1_0_address0();
    void thread_coeff_tab1_0_ce0();
    void thread_coeff_tab1_1_address0();
    void thread_coeff_tab1_1_ce0();
    void thread_exitcond_fu_184_p2();
    void thread_grp_fu_228_ce();
    void thread_grp_fu_228_p1();
    void thread_grp_fu_228_p10();
    void thread_grp_fu_235_ce();
    void thread_grp_fu_235_p1();
    void thread_grp_fu_235_p10();
    void thread_i9_cast_fu_154_p1();
    void thread_i9_phi_fu_144_p6();
    void thread_i_1_1_fu_174_p2();
    void thread_indata_0_V_read();
    void thread_indata_1_V_read();
    void thread_newIndex1_fu_168_p1();
    void thread_outdata_0_V_din();
    void thread_outdata_0_V_write();
    void thread_outdata_1_V_din();
    void thread_outdata_1_V_write();
    void thread_tmp_1_fu_158_p4();
    void thread_tmp_2_fu_180_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

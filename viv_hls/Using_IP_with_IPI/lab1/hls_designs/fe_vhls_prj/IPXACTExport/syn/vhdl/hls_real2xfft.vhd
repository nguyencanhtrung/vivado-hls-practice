-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.3
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_real2xfft is
port (
    din_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    dout_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    din_V_V_TVALID : IN STD_LOGIC;
    din_V_V_TREADY : OUT STD_LOGIC;
    dout_TVALID : OUT STD_LOGIC;
    dout_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of hls_real2xfft is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_real2xfft,hls_ip_2015_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.945250,HLS_SYN_LAT=518,HLS_SYN_TPT=512,HLS_SYN_MEM=6,HLS_SYN_DSP=2,HLS_SYN_FF=350,HLS_SYN_LUT=808}";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_start : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_done : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_continue : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_idle : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_ready : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TVALID : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_write : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_write : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_write : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_write : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TREADY : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start : STD_LOGIC := '0';
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_done : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_continue : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_idle : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_ready : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_read : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_read : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_read : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_read : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_write : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_full_n : STD_LOGIC;
    signal hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_write : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_ap_start : STD_LOGIC := '0';
    signal hls_real2xfft_window_fn_U0_ap_done : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_ap_continue : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_ap_idle : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_ap_ready : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_indata_0_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_window_fn_U0_indata_0_V_empty_n : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_indata_0_V_read : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_indata_1_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_window_fn_U0_indata_1_V_empty_n : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_indata_1_V_read : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_outdata_0_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_window_fn_U0_outdata_0_V_full_n : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_outdata_0_V_write : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_outdata_1_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_window_fn_U0_outdata_1_V_full_n : STD_LOGIC;
    signal hls_real2xfft_window_fn_U0_outdata_1_V_write : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start : STD_LOGIC := '0';
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_done : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_continue : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_idle : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_ready : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_read : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_empty_n : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_read : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TVALID : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TREADY : STD_LOGIC;
    signal hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal delayed_i_0_channel_U_ap_dummy_ce : STD_LOGIC;
    signal delayed_i_0_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_0_channel_full_n : STD_LOGIC;
    signal delayed_i_0_channel_write : STD_LOGIC;
    signal delayed_i_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_0_channel_empty_n : STD_LOGIC;
    signal delayed_i_0_channel_read : STD_LOGIC;
    signal delayed_i_1_channel_U_ap_dummy_ce : STD_LOGIC;
    signal delayed_i_1_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_1_channel_full_n : STD_LOGIC;
    signal delayed_i_1_channel_write : STD_LOGIC;
    signal delayed_i_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal delayed_i_1_channel_empty_n : STD_LOGIC;
    signal delayed_i_1_channel_read : STD_LOGIC;
    signal nodelay_i_0_channel_U_ap_dummy_ce : STD_LOGIC;
    signal nodelay_i_0_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_0_channel_full_n : STD_LOGIC;
    signal nodelay_i_0_channel_write : STD_LOGIC;
    signal nodelay_i_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_0_channel_empty_n : STD_LOGIC;
    signal nodelay_i_0_channel_read : STD_LOGIC;
    signal nodelay_i_1_channel_U_ap_dummy_ce : STD_LOGIC;
    signal nodelay_i_1_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_1_channel_full_n : STD_LOGIC;
    signal nodelay_i_1_channel_write : STD_LOGIC;
    signal nodelay_i_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal nodelay_i_1_channel_empty_n : STD_LOGIC;
    signal nodelay_i_1_channel_read : STD_LOGIC;
    signal data2window_1_channel_U_ap_dummy_ce : STD_LOGIC;
    signal data2window_1_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_1_channel_full_n : STD_LOGIC;
    signal data2window_1_channel_write : STD_LOGIC;
    signal data2window_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_1_channel_empty_n : STD_LOGIC;
    signal data2window_1_channel_read : STD_LOGIC;
    signal data2window_0_channel_U_ap_dummy_ce : STD_LOGIC;
    signal data2window_0_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_0_channel_full_n : STD_LOGIC;
    signal data2window_0_channel_write : STD_LOGIC;
    signal data2window_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal data2window_0_channel_empty_n : STD_LOGIC;
    signal data2window_0_channel_read : STD_LOGIC;
    signal windowed_0_channel_U_ap_dummy_ce : STD_LOGIC;
    signal windowed_0_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_0_channel_full_n : STD_LOGIC;
    signal windowed_0_channel_write : STD_LOGIC;
    signal windowed_0_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_0_channel_empty_n : STD_LOGIC;
    signal windowed_0_channel_read : STD_LOGIC;
    signal windowed_1_channel_U_ap_dummy_ce : STD_LOGIC;
    signal windowed_1_channel_din : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_1_channel_full_n : STD_LOGIC;
    signal windowed_1_channel_write : STD_LOGIC;
    signal windowed_1_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal windowed_1_channel_empty_n : STD_LOGIC;
    signal windowed_1_channel_read : STD_LOGIC;
    signal ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_hls_real2xfft_window_fn_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;

    component hls_real2xfft_Loop_sliding_win_delay_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        din_V_V_TVALID : IN STD_LOGIC;
        nodelay_i_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_0_full_n : IN STD_LOGIC;
        nodelay_i_0_write : OUT STD_LOGIC;
        nodelay_i_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_1_full_n : IN STD_LOGIC;
        nodelay_i_1_write : OUT STD_LOGIC;
        delayed_i_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_0_full_n : IN STD_LOGIC;
        delayed_i_0_write : OUT STD_LOGIC;
        delayed_i_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_1_full_n : IN STD_LOGIC;
        delayed_i_1_write : OUT STD_LOGIC;
        din_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        din_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component hls_real2xfft_Loop_sliding_win_output_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        delayed_i_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_0_empty_n : IN STD_LOGIC;
        delayed_i_0_read : OUT STD_LOGIC;
        nodelay_i_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_0_empty_n : IN STD_LOGIC;
        nodelay_i_0_read : OUT STD_LOGIC;
        delayed_i_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        delayed_i_1_empty_n : IN STD_LOGIC;
        delayed_i_1_read : OUT STD_LOGIC;
        nodelay_i_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        nodelay_i_1_empty_n : IN STD_LOGIC;
        nodelay_i_1_read : OUT STD_LOGIC;
        data2window_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        data2window_0_full_n : IN STD_LOGIC;
        data2window_0_write : OUT STD_LOGIC;
        data2window_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        data2window_1_full_n : IN STD_LOGIC;
        data2window_1_write : OUT STD_LOGIC );
    end component;


    component hls_real2xfft_window_fn IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indata_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        indata_0_V_empty_n : IN STD_LOGIC;
        indata_0_V_read : OUT STD_LOGIC;
        indata_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        indata_1_V_empty_n : IN STD_LOGIC;
        indata_1_V_read : OUT STD_LOGIC;
        outdata_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outdata_0_V_full_n : IN STD_LOGIC;
        outdata_0_V_write : OUT STD_LOGIC;
        outdata_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outdata_1_V_full_n : IN STD_LOGIC;
        outdata_1_V_write : OUT STD_LOGIC );
    end component;


    component hls_real2xfft_Loop_real2xfft_output_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        windowed_0_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        windowed_0_empty_n : IN STD_LOGIC;
        windowed_0_read : OUT STD_LOGIC;
        windowed_1_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        windowed_1_empty_n : IN STD_LOGIC;
        windowed_1_read : OUT STD_LOGIC;
        dout_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        dout_TVALID : OUT STD_LOGIC;
        dout_TREADY : IN STD_LOGIC;
        dout_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FIFO_hls_real2xfft_delayed_i_0_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_delayed_i_1_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_nodelay_i_0_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_nodelay_i_1_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_data2window_1_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_data2window_0_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_windowed_0_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_hls_real2xfft_windowed_1_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    hls_real2xfft_Loop_sliding_win_delay_proc_U0 : component hls_real2xfft_Loop_sliding_win_delay_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_start,
        ap_done => hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_done,
        ap_continue => hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_continue,
        ap_idle => hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_idle,
        ap_ready => hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_ready,
        din_V_V_TVALID => hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TVALID,
        nodelay_i_0_din => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_din,
        nodelay_i_0_full_n => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_full_n,
        nodelay_i_0_write => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_write,
        nodelay_i_1_din => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_din,
        nodelay_i_1_full_n => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_full_n,
        nodelay_i_1_write => hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_write,
        delayed_i_0_din => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_din,
        delayed_i_0_full_n => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_full_n,
        delayed_i_0_write => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_write,
        delayed_i_1_din => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_din,
        delayed_i_1_full_n => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_full_n,
        delayed_i_1_write => hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_write,
        din_V_V_TDATA => hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TDATA,
        din_V_V_TREADY => hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TREADY);

    hls_real2xfft_Loop_sliding_win_output_proc_U0 : component hls_real2xfft_Loop_sliding_win_output_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start,
        ap_done => hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_done,
        ap_continue => hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_continue,
        ap_idle => hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_idle,
        ap_ready => hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_ready,
        delayed_i_0_dout => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_dout,
        delayed_i_0_empty_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_empty_n,
        delayed_i_0_read => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_read,
        nodelay_i_0_dout => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_dout,
        nodelay_i_0_empty_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_empty_n,
        nodelay_i_0_read => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_read,
        delayed_i_1_dout => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_dout,
        delayed_i_1_empty_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_empty_n,
        delayed_i_1_read => hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_read,
        nodelay_i_1_dout => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_dout,
        nodelay_i_1_empty_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_empty_n,
        nodelay_i_1_read => hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_read,
        data2window_0_din => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_din,
        data2window_0_full_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_full_n,
        data2window_0_write => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_write,
        data2window_1_din => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_din,
        data2window_1_full_n => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_full_n,
        data2window_1_write => hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_write);

    hls_real2xfft_window_fn_U0 : component hls_real2xfft_window_fn
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_real2xfft_window_fn_U0_ap_start,
        ap_done => hls_real2xfft_window_fn_U0_ap_done,
        ap_continue => hls_real2xfft_window_fn_U0_ap_continue,
        ap_idle => hls_real2xfft_window_fn_U0_ap_idle,
        ap_ready => hls_real2xfft_window_fn_U0_ap_ready,
        indata_0_V_dout => hls_real2xfft_window_fn_U0_indata_0_V_dout,
        indata_0_V_empty_n => hls_real2xfft_window_fn_U0_indata_0_V_empty_n,
        indata_0_V_read => hls_real2xfft_window_fn_U0_indata_0_V_read,
        indata_1_V_dout => hls_real2xfft_window_fn_U0_indata_1_V_dout,
        indata_1_V_empty_n => hls_real2xfft_window_fn_U0_indata_1_V_empty_n,
        indata_1_V_read => hls_real2xfft_window_fn_U0_indata_1_V_read,
        outdata_0_V_din => hls_real2xfft_window_fn_U0_outdata_0_V_din,
        outdata_0_V_full_n => hls_real2xfft_window_fn_U0_outdata_0_V_full_n,
        outdata_0_V_write => hls_real2xfft_window_fn_U0_outdata_0_V_write,
        outdata_1_V_din => hls_real2xfft_window_fn_U0_outdata_1_V_din,
        outdata_1_V_full_n => hls_real2xfft_window_fn_U0_outdata_1_V_full_n,
        outdata_1_V_write => hls_real2xfft_window_fn_U0_outdata_1_V_write);

    hls_real2xfft_Loop_real2xfft_output_proc_U0 : component hls_real2xfft_Loop_real2xfft_output_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start,
        ap_done => hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_done,
        ap_continue => hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_continue,
        ap_idle => hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_idle,
        ap_ready => hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_ready,
        windowed_0_dout => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_dout,
        windowed_0_empty_n => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_empty_n,
        windowed_0_read => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_read,
        windowed_1_dout => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_dout,
        windowed_1_empty_n => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_empty_n,
        windowed_1_read => hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_read,
        dout_TDATA => hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TDATA,
        dout_TVALID => hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TVALID,
        dout_TREADY => hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TREADY,
        dout_TLAST => hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TLAST);

    delayed_i_0_channel_U : component FIFO_hls_real2xfft_delayed_i_0_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => delayed_i_0_channel_U_ap_dummy_ce,
        if_write_ce => delayed_i_0_channel_U_ap_dummy_ce,
        if_din => delayed_i_0_channel_din,
        if_full_n => delayed_i_0_channel_full_n,
        if_write => delayed_i_0_channel_write,
        if_dout => delayed_i_0_channel_dout,
        if_empty_n => delayed_i_0_channel_empty_n,
        if_read => delayed_i_0_channel_read);

    delayed_i_1_channel_U : component FIFO_hls_real2xfft_delayed_i_1_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => delayed_i_1_channel_U_ap_dummy_ce,
        if_write_ce => delayed_i_1_channel_U_ap_dummy_ce,
        if_din => delayed_i_1_channel_din,
        if_full_n => delayed_i_1_channel_full_n,
        if_write => delayed_i_1_channel_write,
        if_dout => delayed_i_1_channel_dout,
        if_empty_n => delayed_i_1_channel_empty_n,
        if_read => delayed_i_1_channel_read);

    nodelay_i_0_channel_U : component FIFO_hls_real2xfft_nodelay_i_0_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nodelay_i_0_channel_U_ap_dummy_ce,
        if_write_ce => nodelay_i_0_channel_U_ap_dummy_ce,
        if_din => nodelay_i_0_channel_din,
        if_full_n => nodelay_i_0_channel_full_n,
        if_write => nodelay_i_0_channel_write,
        if_dout => nodelay_i_0_channel_dout,
        if_empty_n => nodelay_i_0_channel_empty_n,
        if_read => nodelay_i_0_channel_read);

    nodelay_i_1_channel_U : component FIFO_hls_real2xfft_nodelay_i_1_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nodelay_i_1_channel_U_ap_dummy_ce,
        if_write_ce => nodelay_i_1_channel_U_ap_dummy_ce,
        if_din => nodelay_i_1_channel_din,
        if_full_n => nodelay_i_1_channel_full_n,
        if_write => nodelay_i_1_channel_write,
        if_dout => nodelay_i_1_channel_dout,
        if_empty_n => nodelay_i_1_channel_empty_n,
        if_read => nodelay_i_1_channel_read);

    data2window_1_channel_U : component FIFO_hls_real2xfft_data2window_1_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => data2window_1_channel_U_ap_dummy_ce,
        if_write_ce => data2window_1_channel_U_ap_dummy_ce,
        if_din => data2window_1_channel_din,
        if_full_n => data2window_1_channel_full_n,
        if_write => data2window_1_channel_write,
        if_dout => data2window_1_channel_dout,
        if_empty_n => data2window_1_channel_empty_n,
        if_read => data2window_1_channel_read);

    data2window_0_channel_U : component FIFO_hls_real2xfft_data2window_0_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => data2window_0_channel_U_ap_dummy_ce,
        if_write_ce => data2window_0_channel_U_ap_dummy_ce,
        if_din => data2window_0_channel_din,
        if_full_n => data2window_0_channel_full_n,
        if_write => data2window_0_channel_write,
        if_dout => data2window_0_channel_dout,
        if_empty_n => data2window_0_channel_empty_n,
        if_read => data2window_0_channel_read);

    windowed_0_channel_U : component FIFO_hls_real2xfft_windowed_0_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => windowed_0_channel_U_ap_dummy_ce,
        if_write_ce => windowed_0_channel_U_ap_dummy_ce,
        if_din => windowed_0_channel_din,
        if_full_n => windowed_0_channel_full_n,
        if_write => windowed_0_channel_write,
        if_dout => windowed_0_channel_dout,
        if_empty_n => windowed_0_channel_empty_n,
        if_read => windowed_0_channel_read);

    windowed_1_channel_U : component FIFO_hls_real2xfft_windowed_1_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => windowed_1_channel_U_ap_dummy_ce,
        if_write_ce => windowed_1_channel_U_ap_dummy_ce,
        if_din => windowed_1_channel_din,
        if_full_n => windowed_1_channel_full_n,
        if_write => windowed_1_channel_write,
        if_dout => windowed_1_channel_dout,
        if_empty_n => windowed_1_channel_empty_n,
        if_read => windowed_1_channel_read);





    -- ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0 assign process. --
    ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_done)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_real2xfft_output_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0 assign process. --
    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0 <= ap_const_logic_0;
                elsif ((hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_done = ap_const_logic_1)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_delay_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0 assign process. --
    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_done)) then 
                    ap_reg_procdone_hls_real2xfft_Loop_sliding_win_output_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_hls_real2xfft_window_fn_U0 assign process. --
    ap_reg_procdone_hls_real2xfft_window_fn_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_hls_real2xfft_window_fn_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_hls_real2xfft_window_fn_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = hls_real2xfft_window_fn_U0_ap_done)) then 
                    ap_reg_procdone_hls_real2xfft_window_fn_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start assign process. --
    hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start <= ap_const_logic_0;
            else
                hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start assign process. --
    hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start <= ap_const_logic_0;
            else
                hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- hls_real2xfft_window_fn_U0_ap_start assign process. --
    hls_real2xfft_window_fn_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hls_real2xfft_window_fn_U0_ap_start <= ap_const_logic_0;
            else
                hls_real2xfft_window_fn_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_idle, hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_idle, hls_real2xfft_window_fn_U0_ap_idle, hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_idle)
    begin
        if (((hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_idle = ap_const_logic_1) and (ap_const_logic_1 = hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_idle) and (ap_const_logic_1 = hls_real2xfft_window_fn_U0_ap_idle) and (ap_const_logic_1 = hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_idle))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_done)
    begin
        if ((ap_const_logic_1 = hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_top_allready <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_ready;
    data2window_0_channel_U_ap_dummy_ce <= ap_const_logic_1;
    data2window_0_channel_din <= hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_din;
    data2window_0_channel_read <= hls_real2xfft_window_fn_U0_indata_0_V_read;
    data2window_0_channel_write <= hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_write;
    data2window_1_channel_U_ap_dummy_ce <= ap_const_logic_1;
    data2window_1_channel_din <= hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_din;
    data2window_1_channel_read <= hls_real2xfft_window_fn_U0_indata_1_V_read;
    data2window_1_channel_write <= hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_write;
    delayed_i_0_channel_U_ap_dummy_ce <= ap_const_logic_1;
    delayed_i_0_channel_din <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_din;
    delayed_i_0_channel_read <= hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_read;
    delayed_i_0_channel_write <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_write;
    delayed_i_1_channel_U_ap_dummy_ce <= ap_const_logic_1;
    delayed_i_1_channel_din <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_din;
    delayed_i_1_channel_read <= hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_read;
    delayed_i_1_channel_write <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_write;
    din_V_V_TREADY <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TREADY;
    dout_TDATA <= hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TDATA;
    dout_TLAST <= hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TLAST;
    dout_TVALID <= hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TVALID;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_ap_continue <= ap_sig_hs_continue;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_dout_TREADY <= dout_TREADY;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_dout <= windowed_0_channel_dout;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_empty_n <= windowed_0_channel_empty_n;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_dout <= windowed_1_channel_dout;
    hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_empty_n <= windowed_1_channel_empty_n;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_continue <= ap_const_logic_1;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_ap_start <= ap_start;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_0_full_n <= delayed_i_0_channel_full_n;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_delayed_i_1_full_n <= delayed_i_1_channel_full_n;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TDATA <= din_V_V_TDATA;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_din_V_V_TVALID <= din_V_V_TVALID;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_full_n <= nodelay_i_0_channel_full_n;
    hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_full_n <= nodelay_i_1_channel_full_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_ap_continue <= ap_const_logic_1;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_0_full_n <= data2window_0_channel_full_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_data2window_1_full_n <= data2window_1_channel_full_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_dout <= delayed_i_0_channel_dout;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_0_empty_n <= delayed_i_0_channel_empty_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_dout <= delayed_i_1_channel_dout;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_delayed_i_1_empty_n <= delayed_i_1_channel_empty_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_dout <= nodelay_i_0_channel_dout;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_empty_n <= nodelay_i_0_channel_empty_n;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_dout <= nodelay_i_1_channel_dout;
    hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_empty_n <= nodelay_i_1_channel_empty_n;
    hls_real2xfft_window_fn_U0_ap_continue <= ap_const_logic_1;
    hls_real2xfft_window_fn_U0_indata_0_V_dout <= data2window_0_channel_dout;
    hls_real2xfft_window_fn_U0_indata_0_V_empty_n <= data2window_0_channel_empty_n;
    hls_real2xfft_window_fn_U0_indata_1_V_dout <= data2window_1_channel_dout;
    hls_real2xfft_window_fn_U0_indata_1_V_empty_n <= data2window_1_channel_empty_n;
    hls_real2xfft_window_fn_U0_outdata_0_V_full_n <= windowed_0_channel_full_n;
    hls_real2xfft_window_fn_U0_outdata_1_V_full_n <= windowed_1_channel_full_n;
    nodelay_i_0_channel_U_ap_dummy_ce <= ap_const_logic_1;
    nodelay_i_0_channel_din <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_din;
    nodelay_i_0_channel_read <= hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_0_read;
    nodelay_i_0_channel_write <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_0_write;
    nodelay_i_1_channel_U_ap_dummy_ce <= ap_const_logic_1;
    nodelay_i_1_channel_din <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_din;
    nodelay_i_1_channel_read <= hls_real2xfft_Loop_sliding_win_output_proc_U0_nodelay_i_1_read;
    nodelay_i_1_channel_write <= hls_real2xfft_Loop_sliding_win_delay_proc_U0_nodelay_i_1_write;
    windowed_0_channel_U_ap_dummy_ce <= ap_const_logic_1;
    windowed_0_channel_din <= hls_real2xfft_window_fn_U0_outdata_0_V_din;
    windowed_0_channel_read <= hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_0_read;
    windowed_0_channel_write <= hls_real2xfft_window_fn_U0_outdata_0_V_write;
    windowed_1_channel_U_ap_dummy_ce <= ap_const_logic_1;
    windowed_1_channel_din <= hls_real2xfft_window_fn_U0_outdata_1_V_din;
    windowed_1_channel_read <= hls_real2xfft_Loop_real2xfft_output_proc_U0_windowed_1_read;
    windowed_1_channel_write <= hls_real2xfft_window_fn_U0_outdata_1_V_write;
end behav;

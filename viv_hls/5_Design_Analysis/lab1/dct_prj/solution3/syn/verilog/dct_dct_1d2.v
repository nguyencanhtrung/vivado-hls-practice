// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_dct_1d2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        tmp_2,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        tmp_21
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 6'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 6'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 6'b10000;
parameter    ap_ST_st9_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv57_0 = 57'b000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv7_2 = 7'b10;
parameter    ap_const_lv7_3 = 7'b11;
parameter    ap_const_lv7_4 = 7'b100;
parameter    ap_const_lv7_5 = 7'b101;
parameter    ap_const_lv7_6 = 7'b110;
parameter    ap_const_lv7_7 = 7'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv29_1000 = 29'b1000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [5:0] src_address1;
output   src_ce1;
input  [15:0] src_q1;
input  [3:0] tmp_2;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
input  [3:0] tmp_21;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] src_address0;
reg src_ce0;
reg[5:0] src_address1;
reg src_ce1;
reg dst_ce0;
reg dst_we0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire   [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire   [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire   [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire   [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_reg_267;
reg  signed [15:0] reg_278;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_111;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond1_reg_628;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_127;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_137;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_147;
reg  signed [15:0] reg_282;
wire   [7:0] tmp_18_cast_fu_294_p1;
reg   [7:0] tmp_18_cast_reg_583;
reg   [5:0] src_addr_reg_588;
reg   [5:0] src_addr_1_reg_593;
reg   [5:0] src_addr_2_reg_598;
reg   [5:0] src_addr_3_reg_603;
reg   [5:0] src_addr_4_reg_608;
reg   [5:0] src_addr_5_reg_613;
reg   [5:0] src_addr_6_reg_618;
reg   [5:0] src_addr_7_reg_623;
wire   [0:0] exitcond1_fu_416_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_628_pp0_it1;
wire   [3:0] k_1_fu_422_p2;
reg   [3:0] k_1_reg_632;
wire   [63:0] tmp_fu_428_p1;
reg   [63:0] tmp_reg_637;
wire   [7:0] tmp_25_fu_438_p2;
reg   [7:0] tmp_25_reg_647;
reg   [7:0] ap_reg_ppstg_tmp_25_reg_647_pp0_it1;
reg  signed [14:0] dct_coeff_table_1_load_reg_667;
reg  signed [14:0] dct_coeff_table_3_load_reg_677;
reg   [13:0] dct_coeff_table_0_load_reg_702;
wire  signed [28:0] tmp_10_1_fu_561_p2;
reg  signed [28:0] tmp_10_1_reg_707;
reg  signed [14:0] dct_coeff_table_2_load_reg_712;
wire  signed [28:0] tmp_10_3_fu_555_p2;
reg  signed [28:0] tmp_10_3_reg_717;
reg  signed [14:0] dct_coeff_table_4_load_reg_722;
reg  signed [14:0] dct_coeff_table_5_load_reg_727;
reg  signed [14:0] dct_coeff_table_6_load_reg_732;
reg  signed [14:0] dct_coeff_table_7_load_reg_737;
wire  signed [28:0] tmp_10_5_fu_549_p2;
reg  signed [28:0] tmp_10_5_reg_742;
wire  signed [28:0] grp_fu_542_p3;
reg  signed [28:0] tmp2_reg_747;
(* use_dsp48 = "no" *) wire   [28:0] tmp1_fu_485_p2;
reg   [28:0] tmp1_reg_752;
wire  signed [28:0] grp_fu_567_p3;
reg  signed [28:0] tmp5_reg_757;
wire  signed [28:0] grp_fu_527_p3;
reg  signed [28:0] tmp6_reg_762;
reg   [3:0] k_phi_fu_271_p4;
wire   [63:0] tmp_9_fu_306_p1;
wire   [63:0] tmp_11_fu_317_p3;
wire   [63:0] tmp_13_fu_332_p3;
wire   [63:0] tmp_15_fu_347_p3;
wire   [63:0] tmp_17_fu_362_p3;
wire   [63:0] tmp_19_fu_377_p3;
wire   [63:0] tmp_22_fu_392_p3;
wire   [63:0] tmp_24_fu_407_p3;
wire   [63:0] tmp_36_cast_fu_503_p1;
wire   [6:0] tmp_6_fu_286_p3;
wire   [6:0] tmp_8_fu_298_p3;
wire   [6:0] tmp_10_fu_311_p2;
wire   [6:0] tmp_12_fu_326_p2;
wire   [6:0] tmp_14_fu_341_p2;
wire   [6:0] tmp_16_fu_356_p2;
wire   [6:0] tmp_18_fu_371_p2;
wire   [6:0] tmp_20_fu_386_p2;
wire   [6:0] tmp_23_fu_401_p2;
wire   [7:0] tmp_cast_fu_434_p1;
wire  signed [28:0] grp_fu_534_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp4_fu_507_p2;
wire   [28:0] tmp_s_fu_511_p2;
wire  signed [28:0] grp_fu_574_p3;
wire   [13:0] grp_fu_542_p1;
wire   [13:0] grp_fu_574_p2;
reg    ap_sig_cseq_ST_st9_fsm_5;
reg    ap_sig_bdd_454;
reg   [5:0] ap_NS_fsm;
wire   [28:0] grp_fu_542_p10;


dct_dct_1d2_dct_coeff_table_0 #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_0_address0 ),
    .ce0( dct_coeff_table_0_ce0 ),
    .q0( dct_coeff_table_0_q0 )
);

dct_dct_1d2_dct_coeff_table_1 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_1_address0 ),
    .ce0( dct_coeff_table_1_ce0 ),
    .q0( dct_coeff_table_1_q0 )
);

dct_dct_1d2_dct_coeff_table_2 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_2_address0 ),
    .ce0( dct_coeff_table_2_ce0 ),
    .q0( dct_coeff_table_2_q0 )
);

dct_dct_1d2_dct_coeff_table_3 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_3_address0 ),
    .ce0( dct_coeff_table_3_ce0 ),
    .q0( dct_coeff_table_3_q0 )
);

dct_dct_1d2_dct_coeff_table_4 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_4_address0 ),
    .ce0( dct_coeff_table_4_ce0 ),
    .q0( dct_coeff_table_4_q0 )
);

dct_dct_1d2_dct_coeff_table_5 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_5_address0 ),
    .ce0( dct_coeff_table_5_ce0 ),
    .q0( dct_coeff_table_5_q0 )
);

dct_dct_1d2_dct_coeff_table_6 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_6_address0 ),
    .ce0( dct_coeff_table_6_ce0 ),
    .q0( dct_coeff_table_6_q0 )
);

dct_dct_1d2_dct_coeff_table_7 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_7_address0 ),
    .ce0( dct_coeff_table_7_ce0 ),
    .q0( dct_coeff_table_7_q0 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U1(
    .din0( reg_278 ),
    .din1( dct_coeff_table_6_load_reg_732 ),
    .din2( grp_fu_574_p3 ),
    .dout( grp_fu_527_p3 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U2(
    .din0( reg_278 ),
    .din1( dct_coeff_table_2_load_reg_712 ),
    .din2( tmp_10_3_reg_717 ),
    .dout( grp_fu_534_p3 )
);

dct_mac_muladd_16s_14ns_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_14ns_29s_29_1_U3(
    .din0( reg_278 ),
    .din1( grp_fu_542_p1 ),
    .din2( tmp_10_1_reg_707 ),
    .dout( grp_fu_542_p3 )
);

dct_mul_mul_16s_15s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_15s_29_1_U4(
    .din0( reg_282 ),
    .din1( dct_coeff_table_5_load_reg_727 ),
    .dout( tmp_10_5_fu_549_p2 )
);

dct_mul_mul_16s_15s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_15s_29_1_U5(
    .din0( reg_282 ),
    .din1( dct_coeff_table_3_load_reg_677 ),
    .dout( tmp_10_3_fu_555_p2 )
);

dct_mul_mul_16s_15s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_16s_15s_29_1_U6(
    .din0( reg_278 ),
    .din1( dct_coeff_table_1_load_reg_667 ),
    .dout( tmp_10_1_fu_561_p2 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U7(
    .din0( reg_282 ),
    .din1( dct_coeff_table_4_load_reg_722 ),
    .din2( tmp_10_5_reg_742 ),
    .dout( grp_fu_567_p3 )
);

dct_mac_muladd_16s_15s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_14ns_29_1_U8(
    .din0( reg_282 ),
    .din1( dct_coeff_table_7_load_reg_737 ),
    .din2( grp_fu_574_p2 ),
    .dout( grp_fu_574_p3 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_416_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & ~(exitcond1_reg_628 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        k_reg_267 <= k_1_reg_632;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_267 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_628_pp0_it1 <= exitcond1_reg_628;
        ap_reg_ppstg_tmp_25_reg_647_pp0_it1 <= tmp_25_reg_647;
        exitcond1_reg_628 <= exitcond1_fu_416_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        dct_coeff_table_0_load_reg_702 <= dct_coeff_table_0_q0;
        dct_coeff_table_2_load_reg_712 <= dct_coeff_table_2_q0;
        dct_coeff_table_4_load_reg_722 <= dct_coeff_table_4_q0;
        dct_coeff_table_5_load_reg_727 <= dct_coeff_table_5_q0;
        dct_coeff_table_6_load_reg_732 <= dct_coeff_table_6_q0;
        dct_coeff_table_7_load_reg_737 <= dct_coeff_table_7_q0;
        tmp_10_1_reg_707 <= tmp_10_1_fu_561_p2;
        tmp_10_3_reg_717 <= tmp_10_3_fu_555_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond1_reg_628 == ap_const_lv1_0))) begin
        dct_coeff_table_1_load_reg_667 <= dct_coeff_table_1_q0;
        dct_coeff_table_3_load_reg_677 <= dct_coeff_table_3_q0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        k_1_reg_632 <= k_1_fu_422_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_628 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        reg_278 <= src_q0;
        reg_282 <= src_q1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        src_addr_1_reg_593[5 : 3] <= tmp_11_fu_317_p3[5 : 3];
        src_addr_2_reg_598[5 : 3] <= tmp_13_fu_332_p3[5 : 3];
        src_addr_3_reg_603[5 : 3] <= tmp_15_fu_347_p3[5 : 3];
        src_addr_4_reg_608[5 : 3] <= tmp_17_fu_362_p3[5 : 3];
        src_addr_5_reg_613[5 : 3] <= tmp_19_fu_377_p3[5 : 3];
        src_addr_6_reg_618[5 : 3] <= tmp_22_fu_392_p3[5 : 3];
        src_addr_7_reg_623[5 : 3] <= tmp_24_fu_407_p3[5 : 3];
        src_addr_reg_588[5 : 3] <= tmp_9_fu_306_p1[5 : 3];
        tmp_18_cast_reg_583[6 : 3] <= tmp_18_cast_fu_294_p1[6 : 3];
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        tmp1_reg_752 <= tmp1_fu_485_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        tmp2_reg_747 <= grp_fu_542_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        tmp5_reg_757 <= grp_fu_567_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_628_pp0_it1))) begin
        tmp6_reg_762 <= grp_fu_527_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        tmp_10_5_reg_742 <= tmp_10_5_fu_549_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_416_p2))) begin
        tmp_25_reg_647 <= tmp_25_fu_438_p2;
        tmp_reg_637[3 : 0] <= tmp_fu_428_p1[3 : 0];
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st9_fsm_5) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st9_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_147) begin
    if (ap_sig_bdd_147) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. ///
always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_3 assign process. ///
always @ (ap_sig_bdd_127) begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_4 assign process. ///
always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_5 assign process. ///
always @ (ap_sig_bdd_454) begin
    if (ap_sig_bdd_454) begin
        ap_sig_cseq_ST_st9_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_5 = ap_const_logic_0;
    end
end

/// dct_coeff_table_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_0_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_0_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_1_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        dct_coeff_table_1_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_1_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_2_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_2_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_3_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        dct_coeff_table_3_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_3_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_4_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_4_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_4_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_5_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_5_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_5_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_6_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_6_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_6_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_7_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_7_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_7_ce0 = ap_const_logic_0;
    end
end

/// dst_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg2_fsm_3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        dst_ce0 = ap_const_logic_1;
    end else begin
        dst_ce0 = ap_const_logic_0;
    end
end

/// dst_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_reg_ppstg_exitcond1_reg_628_pp0_it1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_628_pp0_it1))) begin
        dst_we0 = ap_const_logic_1;
    end else begin
        dst_we0 = ap_const_logic_0;
    end
end

/// k_phi_fu_271_p4 assign process. ///
always @ (k_reg_267 or ap_reg_ppiten_pp0_it1 or exitcond1_reg_628 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or k_1_reg_632) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_628 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        k_phi_fu_271_p4 = k_1_reg_632;
    end else begin
        k_phi_fu_271_p4 = k_reg_267;
    end
end

/// src_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or src_addr_reg_588 or src_addr_1_reg_593 or src_addr_2_reg_598 or src_addr_6_reg_618) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            src_address0 = src_addr_6_reg_618;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            src_address0 = src_addr_2_reg_598;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            src_address0 = src_addr_reg_588;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            src_address0 = src_addr_1_reg_593;
        end else begin
            src_address0 = 'bx;
        end
    end else begin
        src_address0 = 'bx;
    end
end

/// src_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or src_addr_3_reg_603 or src_addr_4_reg_608 or src_addr_5_reg_613 or src_addr_7_reg_623) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            src_address1 = src_addr_7_reg_623;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            src_address1 = src_addr_4_reg_608;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            src_address1 = src_addr_5_reg_613;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            src_address1 = src_addr_3_reg_603;
        end else begin
            src_address1 = 'bx;
        end
    end else begin
        src_address1 = 'bx;
    end
end

/// src_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        src_ce0 = ap_const_logic_1;
    end else begin
        src_ce0 = ap_const_logic_0;
    end
end

/// src_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg0_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)))) begin
        src_ce1 = ap_const_logic_1;
    end else begin
        src_ce1 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or exitcond1_fu_416_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond1_fu_416_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_5;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_5;
            end
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st9_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_111 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_127 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_137 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_147 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_147 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_24 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_454 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_454 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end
assign dct_coeff_table_0_address0 = tmp_reg_637;
assign dct_coeff_table_1_address0 = tmp_fu_428_p1;
assign dct_coeff_table_2_address0 = tmp_reg_637;
assign dct_coeff_table_3_address0 = tmp_fu_428_p1;
assign dct_coeff_table_4_address0 = tmp_reg_637;
assign dct_coeff_table_5_address0 = tmp_reg_637;
assign dct_coeff_table_6_address0 = tmp_reg_637;
assign dct_coeff_table_7_address0 = tmp_reg_637;
assign dst_address0 = tmp_36_cast_fu_503_p1;
assign dst_d0 = {{tmp_s_fu_511_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
assign exitcond1_fu_416_p2 = (k_phi_fu_271_p4 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_542_p1 = grp_fu_542_p10;
assign grp_fu_542_p10 = dct_coeff_table_0_load_reg_702;
assign grp_fu_574_p2 = ap_const_lv29_1000;
assign k_1_fu_422_p2 = (k_phi_fu_271_p4 + ap_const_lv4_1);
assign tmp1_fu_485_p2 = ($signed(tmp2_reg_747) + $signed(grp_fu_534_p3));
assign tmp4_fu_507_p2 = ($signed(tmp5_reg_757) + $signed(tmp6_reg_762));
assign tmp_10_fu_311_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_1);
assign tmp_11_fu_317_p3 = {{ap_const_lv57_0}, {tmp_10_fu_311_p2}};
assign tmp_12_fu_326_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_2);
assign tmp_13_fu_332_p3 = {{ap_const_lv57_0}, {tmp_12_fu_326_p2}};
assign tmp_14_fu_341_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_3);
assign tmp_15_fu_347_p3 = {{ap_const_lv57_0}, {tmp_14_fu_341_p2}};
assign tmp_16_fu_356_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_4);
assign tmp_17_fu_362_p3 = {{ap_const_lv57_0}, {tmp_16_fu_356_p2}};
assign tmp_18_cast_fu_294_p1 = tmp_6_fu_286_p3;
assign tmp_18_fu_371_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_5);
assign tmp_19_fu_377_p3 = {{ap_const_lv57_0}, {tmp_18_fu_371_p2}};
assign tmp_20_fu_386_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_6);
assign tmp_22_fu_392_p3 = {{ap_const_lv57_0}, {tmp_20_fu_386_p2}};
assign tmp_23_fu_401_p2 = (tmp_8_fu_298_p3 | ap_const_lv7_7);
assign tmp_24_fu_407_p3 = {{ap_const_lv57_0}, {tmp_23_fu_401_p2}};
assign tmp_25_fu_438_p2 = (tmp_18_cast_reg_583 + tmp_cast_fu_434_p1);
assign tmp_36_cast_fu_503_p1 = ap_reg_ppstg_tmp_25_reg_647_pp0_it1;
assign tmp_6_fu_286_p3 = {{tmp_21}, {ap_const_lv3_0}};
assign tmp_8_fu_298_p3 = {{tmp_2}, {ap_const_lv3_0}};
assign tmp_9_fu_306_p1 = tmp_8_fu_298_p3;
assign tmp_cast_fu_434_p1 = k_phi_fu_271_p4;
assign tmp_fu_428_p1 = k_phi_fu_271_p4;
assign tmp_s_fu_511_p2 = (tmp1_reg_752 + tmp4_fu_507_p2);
always @ (posedge ap_clk) begin
    tmp_18_cast_reg_583[2:0] <= 3'b000;
    tmp_18_cast_reg_583[7] <= 1'b0;
    src_addr_reg_588[2:0] <= 3'b000;
    src_addr_1_reg_593[2:0] <= 3'b001;
    src_addr_2_reg_598[2:0] <= 3'b010;
    src_addr_3_reg_603[2:0] <= 3'b011;
    src_addr_4_reg_608[2:0] <= 3'b100;
    src_addr_5_reg_613[2:0] <= 3'b101;
    src_addr_6_reg_618[2:0] <= 3'b110;
    src_addr_7_reg_623[2:0] <= 3'b111;
    tmp_reg_637[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end



endmodule //dct_dct_1d2

